<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>0xE4s0n的博客</title>
  
  
  <link href="http://0xe4s0n.github.io/atom.xml" rel="self"/>
  
  <link href="http://0xe4s0n.github.io/"/>
  <updated>2020-04-28T01:28:45.124Z</updated>
  <id>http://0xe4s0n.github.io/</id>
  
  <author>
    <name>0xE4s0n</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>一次基于Socket通信的App的分析</title>
    <link href="http://0xe4s0n.github.io/%E4%B8%80%E6%AC%A1%E5%9F%BA%E4%BA%8ESocket%E9%80%9A%E4%BF%A1%E7%9A%84App%E7%9A%84%E5%88%86%E6%9E%90.html"/>
    <id>http://0xe4s0n.github.io/%E4%B8%80%E6%AC%A1%E5%9F%BA%E4%BA%8ESocket%E9%80%9A%E4%BF%A1%E7%9A%84App%E7%9A%84%E5%88%86%E6%9E%90.html</id>
    <published>2020-04-28T01:28:44.000Z</published>
    <updated>2020-04-28T01:28:45.124Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-App介绍"><a href="#1-App介绍" class="headerlink" title="1.App介绍"></a>1.App介绍</h1><p>该App是一个股票数据查看软件，可以查看股票的交易数据，K线</p><p><img src="https://i.loli.net/2020/04/27/vf15J6UqgPCdWEQ.png" alt="数据"><br><img src="https://i.loli.net/2020/04/27/rhUAP3tDnZ2Vu4b.png" alt="分时线"><br><img src="https://i.loli.net/2020/04/27/lfHXZktyec84bPa.png" alt="K线"></p><h1 id="2-APP分析"><a href="#2-APP分析" class="headerlink" title="2.APP分析"></a>2.APP分析</h1><p><strong>由于APP逻辑复杂故只列出有用部分</strong></p><h2 id="2-1-MyApp-gt-onCreate"><a href="#2-1-MyApp-gt-onCreate" class="headerlink" title="2.1.MyApp-&gt;onCreate"></a>2.1.MyApp-&gt;onCreate</h2><p>APP经过加壳，脱壳后使用MT绕过签名效验重打包成功</p><p><img src="https://i.loli.net/2020/04/27/EqJa5UMA3Rig1xL.png" alt="壳"></p><p>在自定义的Application的onCreate方法中进行一些数据的初始化</p><p><img src="https://i.loli.net/2020/04/27/dZulCMBwHU5WrJG.png" alt="图片.png"></p><p>读取配置文件中的配置</p><p><img src="https://i.loli.net/2020/04/27/98XuSYKnJHtepiD.png" alt="图片.png"></p><p>解析<code>assets</code>文件夹中的<code>MbUserMarket.xml</code>文件存入<code>mPBMarketArray</code>和<code>mHomeMenuMarkets</code></p><p><img src="https://i.loli.net/2020/04/27/Jb43RD9mU1sA5fX.png" alt="图片.png"></p><p>解析文件<code>pbtransclnt.xml</code>存入<code>CPDDataDecode</code>的静态数组<code>g_vDataPackage</code>设置so库的DesKey</p><p><img src="https://i.loli.net/2020/04/27/9QHPGK7BguCJWVU.png" alt="图片.png"></p><p>读取<code>main.cfg</code>和<code>hq_addr.ini</code>文件中的服务端地址</p><p><img src="https://i.loli.net/2020/04/27/dF8Dzla23AGjnrX.png" alt="图片.png"></p><h2 id="2-2-SplashActivity-gt-onCreate"><a href="#2-2-SplashActivity-gt-onCreate" class="headerlink" title="2.2.SplashActivity-&gt;onCreate"></a>2.2.SplashActivity-&gt;onCreate</h2><p>直接发送<code>handlerMessage</code></p><p><img src="https://i.loli.net/2020/04/27/inklLYA6PD8pmxB.png" alt="图片.png"></p><p>对应操作</p><p><img src="https://i.loli.net/2020/04/27/FIPKlUX4e9Lw3WS.png" alt="图片.png"></p><p>在<code>initCodeTable()</code>中尝试从文件中加载数据</p><p><img src="https://i.loli.net/2020/04/27/2DAZRhtdW7zFTVe.png" alt="图片.png"></p><p><code>doLogin()</code>进行登录请求</p><p><img src="https://i.loli.net/2020/04/27/o36rpbKqXFGdY4H.png" alt="图片.png"></p><p>然后将参数编码加密后调用<code>addSendData</code>方法</p><p><img src="https://i.loli.net/2020/04/27/f49byzaJFiHVNtv.png" alt="图片.png"></p><p>编码方式为:将参数用<code>|</code>分隔然后在转换为字节数组</p><p><img src="https://i.loli.net/2020/04/27/GRz7Hryd145iXso.png" alt="图片.png"><br><img src="https://i.loli.net/2020/04/27/etmWkIp9xLHKNib.png" alt="图片.png"></p><p>加密方式根据参数确定是否DES加密，Zlib压缩，然后将发送的数据的信息存入前12位</p><p><img src="https://i.loli.net/2020/04/27/IKmT7vU6i1rQykV.png" alt="图片.png"></p><p>完成后将数据加入到<code>GlobalNetConnect</code>的<code>NetSendThread</code><br>如果是<code>mHQPushNet</code>则使用第二个端口</p><p><img src="https://i.loli.net/2020/04/27/eSqXdQElIABHFVc.png" alt="图片.png"></p><p>然后启动<code>NetSendThread</code>线程（run方法代码较长只列出关键部分）</p><p>首先读取在mApp中加载的服务器地址读取后直接尝试连接，删除连接成功外的所有地址然后检查欲发送的数据是否合法</p><p><img src="https://i.loli.net/2020/04/27/voQySxT5GJXm4ls.png" alt="图片.png"></p><p>上图 连接成功后将成功的地址记录</p><p><img src="https://i.loli.net/2020/04/27/z9j4XA6vTOVs8fr.png" alt="图片.png"></p><p>然后将欲发送数据写入<code>SendByteBuffer</code></p><p><img src="https://i.loli.net/2020/04/27/4OjWUMcbRyHs8Pd.png" alt="图片.png"></p><p>然后写入Socket</p><p><img src="https://i.loli.net/2020/04/27/APoT34wYH2Odfq9.png" alt></p><p>再从Socket中读取回复</p><p><img src="https://i.loli.net/2020/04/27/dpTQGZaCmxvyjwO.png" alt="图片.png"></p><p>回复的数据解密（也就是刚才分析的加密的逆过程）<br>解析完成后如果设置了接受消息的<code>Handler</code>，则会发送消息</p><p><img src="https://i.loli.net/2020/04/27/7z9FGvr1RPl2umK.png" alt="图片.png"></p><p>登录成功后 请求<code>MarketInfo</code>，并根据第一次登录返回，用另一网络线程登录<br>（请求过程与登录过程类似 故不再诉）</p><p><img src="https://i.loli.net/2020/04/27/Q3qsbMSYucWDwje.png" alt="图片.png"></p><p>请求<code>MarketInfo</code>成功后 解析<code>MarketInfo</code>并请求<code>CodleTable</code></p><p><img src="https://i.loli.net/2020/04/27/GcpOveq5wILJQ4X.png" alt="图片.png"></p><p>解析成功后记录数据 并保存为文件</p><p><img src="https://i.loli.net/2020/04/27/3f7PDY2p6vnHqog.png" alt="图片.png"></p><h2 id="2-3-其它"><a href="#2-3-其它" class="headerlink" title="2.3.其它"></a>2.3.其它</h2><p>其它的数据请求与上述过程类似，不再重复</p><h1 id="3-模拟客户端获取数据"><a href="#3-模拟客户端获取数据" class="headerlink" title="3.模拟客户端获取数据"></a>3.模拟客户端获取数据</h1><p>既然已经了解客户端与服务端的通信过程，则可以模拟客户端对服务器收发数据</p><p><img src="https://i.loli.net/2020/04/27/rvg9ntNAzIVcJK6.png" alt="图片.png"></p><p>首先模仿App的编码加密过程将预发送的数据编码加密</p><p><img src="https://i.loli.net/2020/04/27/skByfrKilboRtTA.png" alt="图片.png"></p><p>然后开启新线程将数据发送到服务端</p><p><img src="https://i.loli.net/2020/04/28/G5BoPgkIMdxZSNb.png" alt="image.png"></p><p>接收返回的数据并解析</p><p><img src="https://i.loli.net/2020/04/28/RqJk5DzQLHIY8dm.png" alt="image.png"></p><p>解析返回的数据并打印出来</p><p><img src="https://i.loli.net/2020/04/28/D3oRqXc7N9xhMwy.png" alt="image.png"></p><p>即可获取数据</p><p><img src="https://i.loli.net/2020/04/28/R5Ggx9dkl3p4QeW.png" alt="image.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;1-App介绍&quot;&gt;&lt;a href=&quot;#1-App介绍&quot; class=&quot;headerlink&quot; title=&quot;1.App介绍&quot;&gt;&lt;/a&gt;1.App介绍&lt;/h1&gt;&lt;p&gt;该App是一个股票数据查看软件，可以查看股票的交易数据，K线&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;ht</summary>
      
    
    
    
    <category term="Android" scheme="http://0xe4s0n.github.io/categories/Android/"/>
    
    
    <category term="re" scheme="http://0xe4s0n.github.io/tags/re/"/>
    
    <category term="Android" scheme="http://0xe4s0n.github.io/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>ptrace函数</title>
    <link href="http://0xe4s0n.github.io/ptrace%E5%87%BD%E6%95%B0.html"/>
    <id>http://0xe4s0n.github.io/ptrace%E5%87%BD%E6%95%B0.html</id>
    <published>2019-08-14T14:57:45.000Z</published>
    <updated>2019-08-25T13:08:39.498Z</updated>
    
    <content type="html"><![CDATA[<h1 id="ptrace-函数简介"><a href="#ptrace-函数简介" class="headerlink" title="ptrace 函数简介"></a>ptrace 函数简介</h1><h2 id="函数原型"><a href="#函数原型" class="headerlink" title="函数原型"></a>函数原型</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/ptrace.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">long</span> ptrace（<span class="keyword">enum</span> _ptrace_request request,<span class="keyword">pid_t</span> pid,<span class="keyword">void</span> * addr ,<span class="keyword">void</span> *data）;</span><br></pre></td></tr></table></figure><h2 id="参数意义"><a href="#参数意义" class="headerlink" title="参数意义"></a>参数意义</h2><ul><li><p><code>request</code>：请求ptrace执行的操作</p></li><li><p><code>pid</code>：目标进程的ID</p></li><li><p><code>addr</code>：目标进程的地址</p></li><li><p><code>data</code>：根据<code>request</code>的不同而变化，向目标进程写入数据时，<code>data</code>存放要写入的数据的地址；从目标进程中读数据时，<code>data</code>接收返回数据的地址<br><br><br>  </p></li></ul><p><code>request</code>参数决定<code>ptrace</code>的行为以及后续的参数是如何被使用的，参数<code>request</code>的常用的值如下：<br><img src="https://i.loli.net/2019/08/14/KtmlU61q5J4OPz7.png" alt>  </p><blockquote><p>更多参数请移步<a href="http://man7.org/linux/man-pages/man2/ptrace.2.html" target="_blank" rel="noopener">官方文档</a>　　 参数对应值参考<code>/usr/include/linux/ptrace.h</code><a href="https://0xe4s0n.github.io/download/De1ctf/ptrace.h">源码</a>  </p></blockquote><h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>&emsp;&emsp;<code>ptrace()</code>系统调用函数提供了一个进程（<code>the “tracer”</code><em>监视者</em>）监察和控制另一个进程（<code>the “tracee”</code><em>被监视者</em>）的方法。并且可以检查和改变<code>tracee</code>进程的内存和寄存器里的数据。它可以用来实现断点调试和系统调用跟踪。<br>&emsp;&emsp;<code>tracee</code>首先需要被附着到<code>tracer</code>。在多线程进程中，每个线程都可以被附着到一个<code>tracer</code>。<code>ptrace</code>命令总是以<code>ptrace(PTARCE_foo,pid,..)</code>的形式发送到<code>tracee</code>进程。<code>pid</code>是<code>tracee</code>线程<code>ID</code>。<br>&emsp;&emsp;一个进程可以通过调用<code>fork</code>函数创建子进程并让子进程执行<code>PTRACE_TRACEME</code>来初始化一个<code>ptrace</code>,然后通常子进程再调用<code>execve()</code>（如果当前进程被<code>ptrace</code>,<code>execve()</code>成功执行后 <code>SIGTRAP</code>信号量会被发送到当前进程）。一个进程也可以使用<code>PTRACE_ATTACH</code>或者<code>PTRACE_SEIZE</code>来跟踪另一个进程。<br>&emsp;&emsp;当进程被跟踪后，每当信号量传给当前进程，甚至信号量被忽略时，<code>tracee</code>会暂停(<code>SIGKILL</code>除外)。<code>tracer</code>会在下次调用<code>waitpid</code>(或者其它<code>wait</code>系统调用)处被通知。该调用会返回一个包含<code>tracee</code>暂停原因信息的状态码。当<code>tracee</code>暂停后，<code>tracer</code>可以使用一系列<code>ptrace</code>请求来查看和修改<code>tracee</code>中的信息。<code>tracer</code>接着可以让<code>tracee</code>继续执行。<code>tracee</code>传递给<code>tracer</code>中的信号量通常被忽略(即使是一个不同的信号）。<br>　　当<code>PTRACE_O_TRACEEXEC</code>项未起作用时，所有成功执行<code>execve()</code>的<code>tracee</code>进程会被发送一个 <code>SIGTRAP</code>信号量后暂停，在新程序执行之前，父进程将会取得该进程的控制权。<br>　　当<code>tracer</code>结束跟踪后，可以通过调用<code>PTRACE_DETACH</code>让<code>tracee</code>在未被<code>trace</code>下继续执行。</p><p>　　那么，<code>ptrace</code>会在什么时候出现呢？在执行系统调用之前，内核会先检查当前进程是否处于被“跟踪”(<code>traced</code>)的状态。如果是的话，内核暂停当前进程并将控制权交给跟踪进程，使跟踪进程得以察看或者修改被跟踪进程的寄存器。</p><h1 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h1><p>以下示例若无特殊说明均在该系统中测试</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Operating System: Ubuntu 19.04</span><br><span class="line">Kernel: Linux 5.0.0-19-generic</span><br><span class="line">Architecture: x86-64</span><br></pre></td></tr></table></figure><h2 id="追踪系统调用号"><a href="#追踪系统调用号" class="headerlink" title="追踪系统调用号"></a>追踪系统调用号</h2><h3 id="系统调用"><a href="#系统调用" class="headerlink" title="系统调用"></a>系统调用</h3><p>&emsp;&emsp;操作系统提供了一种标准的服务来让程序员实现对底层硬件和服务的控制（比如文件系统），叫做系统调用(<code>system calls</code>)。当一个程序需要作系统调用的时候，它将相关参数放进系统调用相关的寄存器，然后以不同方式调用，就像一个让程序得以接触到内核模式的窗口，程序将参数和系统调用号交给内核，内核来完成系统调用的执行。  </p><blockquote><p>详见附录 <a href="#不同平台的系统调用方式">不同平台的系统调用方式</a>　<a href="#不同平台使用的参数寄存器">不同平台使用的参数寄存器</a></p></blockquote><p>比如<code>Write(2, “Hello”, 5)</code>的<code>i386</code>汇编形式大概是这样的</p><figure class="highlight arm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">movl </span>  <span class="number">$4</span>, %eax</span><br><span class="line"><span class="keyword">movl </span>  <span class="number">$2</span>, %ebx</span><br><span class="line"><span class="keyword">movl </span>  $hello, %ecx</span><br><span class="line"><span class="keyword">movl </span>  <span class="number">$5</span>, %edx</span><br><span class="line"><span class="symbol">int</span>    <span class="number">$0x80</span></span><br></pre></td></tr></table></figure><p>这里的<code>$hello</code>指向的是标准字符串<code>”Hello”</code>。</p><h3 id="开始追踪"><a href="#开始追踪" class="headerlink" title="开始追踪"></a>开始追踪</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;unistd.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/ptrace.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/types.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/wait.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/reg.h&gt; /* For constants ORIG_RAX etc */</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">pid_t</span> child;</span><br><span class="line">    <span class="keyword">long</span> orig_rax;</span><br><span class="line">    child = fork();</span><br><span class="line">    <span class="keyword">if</span> (child == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        ptrace(PTRACE_TRACEME, <span class="number">0</span>, <span class="literal">NULL</span>, <span class="literal">NULL</span>);</span><br><span class="line">        execl(<span class="string">"/bin/ls"</span>, <span class="string">"ls"</span>, <span class="literal">NULL</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        wait(<span class="literal">NULL</span>);</span><br><span class="line">        orig_rax = ptrace(PTRACE_PEEKUSER, child, <span class="number">8</span> * ORIG_RAX, <span class="literal">NULL</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"The child made a system call %ld\n"</span>, orig_rax);</span><br><span class="line">        ptrace(PTRACE_CONT, child, <span class="literal">NULL</span>, <span class="literal">NULL</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用<code>gcc</code>编译该文件<code>gcc ptrace.c -o ptrace</code> 然后运行<br><img src="https://i.loli.net/2019/08/14/YQjikwv1FcmyVWH.png" alt><br><code>ptrcer</code>通过<code>PTRACE_PEEKUSER</code>访问<code>user</code>结构体读取<code>RAX</code>的值  第二个参数指定<code>RAX</code>在<code>user</code>中的偏移量。<br><img src="https://i.loli.net/2019/08/14/4YGNst38d2kwX7M.png" alt></p><blockquote><p>在<code>reg.h</code>中定义了各个变量在<code>user.h</code>中的偏移量,<br><code>/usr/include/x86_64-linux-gnu/reg.h</code><a href="https://0xe4s0n.github.io/download/De1ctf/reg.h">源码</a><br><code>/usr/include/x86_64-linux-gnu/user.h</code><a href="https://0xe4s0n.github.io/download/De1ctf/user.h">源码</a></p></blockquote><blockquote><p>59是<code>execve</code>的系统调用号，这是该程序调用的第一个系统调用。系统调用号的详细内容，<br>64位linux请察看 <a href="https://0xe4s0n.github.io/download/De1ctf/unistd_64.h">/usr/include/x86_64-linux-gnu/asm/unistd_64.h</a><br>32位linux请察看 <a href="https://0xe4s0n.github.io/download/De1ctf/unistd_32.h">/usr/include/i386-linux-gnu/asm/unistd_32.h</a></p></blockquote><p>&emsp;&emsp;<code>execl()</code>函数对应的系统调用为<code>__NR_execve</code>，系统调用值为<code>59</code>。父进程通过调用<code>fork()</code>来创建子进程。在子进程中，先运行<code>patrce()</code>.请求参数设为<code>PTRACE_TRACE</code>,来告诉内核当前进程被父进程<code>trace</code>，每当有信号量传递到当前进程，该进程会暂停，提醒父进程在<code>wait()</code>调用处继续执行。然后再调用<code>execl()</code>。当<code>execl()</code>函数成功执行后，继续运行之前，<code>SIGTRAP</code>信号量会被发送到该进程，让子进程停止，这时父进程会在<code>wait</code>相关调用处被通知，获取子进程的控制权，可以查看子进程内存和寄存器相关信息。当检查完系统调用之后，调用ptrace并设置参数PTRACE_CONT让子进程继续进行。</p><h2 id="读取系统调用参数"><a href="#读取系统调用参数" class="headerlink" title="读取系统调用参数"></a>读取系统调用参数</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ptrace(PTRACE_GETREGS, child, <span class="literal">NULL</span>, &amp;regs);</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2019/08/14/jkwH3vUEAnsNbC2.png" alt></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/ptrace.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/wait.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/reg.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/user.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/syscall.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;unistd.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">pid_t</span> child;</span><br><span class="line">    <span class="keyword">long</span> orig_rax;</span><br><span class="line">    <span class="keyword">int</span> status;</span><br><span class="line">    <span class="keyword">int</span> iscalling = <span class="number">0</span>;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">user_regs_struct</span> <span class="title">regs</span>;</span></span><br><span class="line"></span><br><span class="line">    child = fork();</span><br><span class="line">    <span class="keyword">if</span> (child == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        ptrace(PTRACE_TRACEME, <span class="number">0</span>, <span class="literal">NULL</span>, <span class="literal">NULL</span>);</span><br><span class="line">        execl(<span class="string">"/bin/ls"</span>, <span class="string">"ls"</span>, <span class="string">"-l"</span>, <span class="string">"-h"</span>, <span class="literal">NULL</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            wait(&amp;status);</span><br><span class="line">            <span class="keyword">if</span> (WIFEXITED(status))</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            orig_rax = ptrace(PTRACE_PEEKUSER, child, <span class="number">8</span> * ORIG_RAX, <span class="literal">NULL</span>);</span><br><span class="line">            <span class="keyword">if</span> (orig_rax == SYS_write)</span><br><span class="line">            &#123;</span><br><span class="line">                ptrace(PTRACE_GETREGS, child, <span class="literal">NULL</span>, &amp;regs);</span><br><span class="line">                <span class="keyword">if</span> (!iscalling)</span><br><span class="line">                &#123;</span><br><span class="line">                    iscalling = <span class="number">1</span>;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">"SYS_write call with %lld, %lld, %lld\n"</span>, regs.rdi, regs.rsi, regs.rdx);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">"SYS_write call return %lld\n"</span>, regs.rax);</span><br><span class="line">                    iscalling = <span class="number">0</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            ptrace(PTRACE_SYSCALL, child, <span class="literal">NULL</span>, <span class="literal">NULL</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果<br><img src="https://i.loli.net/2019/08/14/Mfxh9bHiOA1znjQ.png" alt>  </p><p>大部分的代码还是比较好懂,部分需要说明一下</p><p>对于<code>PTRACE_STSCALL</code>参数，该参数会像<code>PTRACE_CONT</code>一样使暂停的子进程继续执行，并在子进程下次进行系统调用前或系统调后，向子进程发送SINTRAP信号量，让子进程暂停。<br><img src="https://i.loli.net/2019/08/14/8zgKlcwUt1onEYJ.png" alt></p><p><code>WIFEXITED</code>函数(宏)函数用来检查子进程是暂停还准备退出。</p><p><code>SYS_write</code>被定义在<code>/usr/include/x86_64-linux-gnu/bits/syscall.h</code>里面<code># define SYS_write __NR_write</code>与<code>unistd.h</code>对应　　<a href="https://0xe4s0n.github.io/download/De1ctf/syscall.h">源码</a></p><h2 id="修改子进程系统调用参数"><a href="#修改子进程系统调用参数" class="headerlink" title="修改子进程系统调用参数"></a>修改子进程系统调用参数</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">val = ptrace(PTRACE_PEEKDATA,child,addr,<span class="literal">NULL</span>)</span><br><span class="line">val = ptrace(PTRACE_PEEKTEXT,child,addr,<span class="literal">NULL</span>)</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2019/08/14/7du5aI6ZvnVOWDz.png" alt></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/ptrace.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/wait.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/reg.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/syscall.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/user.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;errno.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;unistd.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> long_size sizeof(long)</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">reverse</span><span class="params">(<span class="keyword">char</span> *str)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i, j;</span><br><span class="line">    <span class="keyword">char</span> temp;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>, j = <span class="built_in">strlen</span>(str) - <span class="number">2</span>; i &lt;= j; ++i, --j)</span><br><span class="line">    &#123;</span><br><span class="line">        temp = str[i];</span><br><span class="line">        str[i] = str[j];</span><br><span class="line">        str[j] = temp;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getdata</span><span class="params">(<span class="keyword">pid_t</span> child, <span class="keyword">long</span> addr, <span class="keyword">char</span> *str, <span class="keyword">int</span> len)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> *laddr;</span><br><span class="line">    <span class="keyword">int</span> i, j;</span><br><span class="line">    <span class="keyword">union</span> u &#123;</span><br><span class="line">        <span class="keyword">long</span> val;</span><br><span class="line">        <span class="keyword">char</span> chars[long_size];</span><br><span class="line">    &#125; data;</span><br><span class="line">    i = <span class="number">0</span>;</span><br><span class="line">    j = len / long_size;</span><br><span class="line">    laddr = str;</span><br><span class="line">    <span class="keyword">while</span> (i &lt; j)</span><br><span class="line">    &#123;</span><br><span class="line">        data.val = ptrace(PTRACE_PEEKDATA, child, addr + i * long_size, <span class="literal">NULL</span>);</span><br><span class="line">        <span class="keyword">if</span> (data.val == <span class="number">-1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (errno)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"READ error: %s\n"</span>, strerror(errno));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">memcpy</span>(laddr, data.chars, long_size);</span><br><span class="line">        ++i;</span><br><span class="line">        laddr += long_size;</span><br><span class="line">    &#125;;</span><br><span class="line">    j = len % long_size;</span><br><span class="line">    <span class="keyword">if</span> (j != <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        data.val = ptrace(PTRACE_PEEKDATA, child, addr + i * long_size, <span class="literal">NULL</span>);</span><br><span class="line">        <span class="built_in">memcpy</span>(laddr, data.chars, j);</span><br><span class="line">    &#125;</span><br><span class="line">    str[len] = <span class="string">'\0'</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">putdata</span><span class="params">(<span class="keyword">pid_t</span> child, <span class="keyword">long</span> addr, <span class="keyword">char</span> *str, <span class="keyword">int</span> len)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> *laddr;</span><br><span class="line">    <span class="keyword">int</span> i, j;</span><br><span class="line">    <span class="keyword">union</span> u &#123;</span><br><span class="line">        <span class="keyword">long</span> val;</span><br><span class="line">        <span class="keyword">char</span> chars[long_size];</span><br><span class="line">    &#125; data;</span><br><span class="line">    i = <span class="number">0</span>;</span><br><span class="line">    j = len / long_size;</span><br><span class="line">    laddr = str;</span><br><span class="line">    <span class="keyword">while</span> (i &lt; j)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">memcpy</span>(data.chars, laddr, long_size);</span><br><span class="line">        ptrace(PTRACE_POKEDATA, child, addr + i * long_size, data.val);</span><br><span class="line">        ++i;</span><br><span class="line">        laddr += long_size;</span><br><span class="line">    &#125;</span><br><span class="line">    j = len % long_size;</span><br><span class="line">    <span class="keyword">if</span> (j != <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//注意：由于写入时也是按字写入的，所以正确的做法是先将该字的高地址数据读出保存在data的高地址上 ，然后将该字再写入</span></span><br><span class="line">        <span class="built_in">memcpy</span>(data.chars, laddr, j);</span><br><span class="line">        ptrace(PTRACE_POKEDATA, child, addr + i * long_size, data.val);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">pid_t</span> child;</span><br><span class="line">    <span class="keyword">int</span> status;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">user_regs_struct</span> <span class="title">regs</span>;</span></span><br><span class="line">    child = fork();</span><br><span class="line">    <span class="keyword">if</span> (child == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        ptrace(PTRACE_TRACEME, <span class="number">0</span>, <span class="literal">NULL</span>, <span class="literal">NULL</span>);</span><br><span class="line">        execl(<span class="string">"/bin/ls"</span>, <span class="string">"ls"</span>, <span class="literal">NULL</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">long</span> orig_eax;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">char</span> *str, *laddr;</span><br><span class="line">        <span class="keyword">int</span> toggle = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            wait(&amp;status);</span><br><span class="line">            <span class="keyword">if</span> (WIFEXITED(status))</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            orig_eax = ptrace(PTRACE_PEEKUSER, child, <span class="number">8</span> * ORIG_RAX, <span class="literal">NULL</span>);</span><br><span class="line">            <span class="keyword">if</span> (orig_eax == SYS_write)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (toggle == <span class="number">0</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    toggle = <span class="number">1</span>;</span><br><span class="line">                    ptrace(PTRACE_GETREGS, child, <span class="literal">NULL</span>, &amp;regs);</span><br><span class="line"></span><br><span class="line">                    str = (<span class="keyword">char</span> *)<span class="built_in">calloc</span>((regs.rdx + <span class="number">1</span>), <span class="keyword">sizeof</span>(<span class="keyword">char</span>));</span><br><span class="line">                    getdata(child, regs.rsi, str, regs.rdx);</span><br><span class="line">                    reverse(str);</span><br><span class="line">                    putdata(child, regs.rsi, str, regs.rdx);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    toggle = <span class="number">0</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            ptrace(PTRACE_SYSCALL, child, <span class="literal">NULL</span>, <span class="literal">NULL</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果<br><img src="https://i.loli.net/2019/08/14/H5jefxws6g3h2io.png" alt>  </p><h2 id="向其它程序注入指令"><a href="#向其它程序注入指令" class="headerlink" title="向其它程序注入指令"></a>向其它程序注入指令</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ptrace(PTRACE_ATTACH, pid, <span class="literal">NULL</span>, <span class="literal">NULL</span>)</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2019/08/14/aWvUMpZ8nfzT64s.png" alt><br>使<code>pid</code>进程成为被追踪的<code>tracee</code>进程。<code>tracee</code>进程会被发送一个<code>SIGTOP</code>信号量，<code>tracee</code>进程不会立即停止，直到完成本次系统调用。如果要结束追踪，则调用<code>PTRACE_DETACH</code>即可。</p><p><code>debug</code> 设置断点的功能可以通过<code>ptrace</code>实现。原理是<code>ATTACH</code>正在运行的进程使其停止。然后读取该进程的指令寄存器<code>IR</code>（32位x86为<code>EIP</code>,64位的是<code>RIP</code>）内容所指向的指令，备份后替换成目标指令，再使其继续执行，此时被追踪进程就会执行我们替换的指令，运行完注入的指令之后，我们再恢复原进程的<code>IR</code><br>,从而达到改变原程序运行逻辑的目的。</p><figure class="highlight c"><figcaption><span>tracee</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;unistd.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Hello,ptrace! [pid:%d]! num is %d\n"</span>,getpid(),i++);</span><br><span class="line">        sleep(<span class="number">2</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c"><figcaption><span>tracer</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/ptrace.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/reg.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/wait.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/user.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;errno.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> long_size sizeof(long)</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getdata</span><span class="params">(<span class="keyword">pid_t</span> child, <span class="keyword">long</span> addr, <span class="keyword">char</span> *str, <span class="keyword">int</span> len)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> *laddr = str;</span><br><span class="line">    <span class="keyword">int</span> i, j;</span><br><span class="line">    <span class="keyword">union</span> u &#123;</span><br><span class="line">        <span class="keyword">long</span> val;</span><br><span class="line">        <span class="keyword">char</span> chars[long_size];</span><br><span class="line">    &#125; data;</span><br><span class="line">    i = <span class="number">0</span>;</span><br><span class="line">    j = len / long_size;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (i &lt; j)</span><br><span class="line">    &#123;</span><br><span class="line">        data.val = ptrace(PTRACE_PEEKDATA, child, addr + long_size * i, <span class="literal">NULL</span>);</span><br><span class="line">        <span class="keyword">if</span> (data.val == <span class="number">-1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (errno)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"READ error: %s\n"</span>, strerror(errno));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">memcpy</span>(laddr, data.chars, long_size);</span><br><span class="line">        ++i;</span><br><span class="line">        laddr = laddr + long_size;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    j = len % long_size;</span><br><span class="line">    <span class="keyword">if</span> (j != <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        data.val = ptrace(PTRACE_PEEKDATA, child, addr + long_size * i, <span class="literal">NULL</span>);</span><br><span class="line">        <span class="keyword">if</span> (data.val == <span class="number">-1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (errno)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"READ error: %s\n"</span>, strerror(errno));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">memcpy</span>(laddr, data.chars, j);</span><br><span class="line">    &#125;</span><br><span class="line">    str[len] = <span class="string">'\0'</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">putdata</span><span class="params">(<span class="keyword">pid_t</span> child, <span class="keyword">long</span> addr, <span class="keyword">char</span> *str, <span class="keyword">int</span> len)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> *laddr = str;</span><br><span class="line">    <span class="keyword">int</span> i, j;</span><br><span class="line">    j = len / long_size;</span><br><span class="line">    i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">union</span> u &#123;</span><br><span class="line">        <span class="keyword">long</span> val;</span><br><span class="line">        <span class="keyword">char</span> chars[long_size];</span><br><span class="line">    &#125; data;</span><br><span class="line">    <span class="keyword">while</span> (i &lt; j)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">memcpy</span>(data.chars, laddr, long_size);</span><br><span class="line">        ptrace(PTRACE_POKEDATA, child, addr + long_size * i, data.val);</span><br><span class="line">        ++i;</span><br><span class="line">        laddr = laddr + long_size;</span><br><span class="line">    &#125;</span><br><span class="line">    j = len % long_size;</span><br><span class="line">    <span class="keyword">if</span> (j != <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        data.val = ptrace(PTRACE_PEEKDATA, child, addr + long_size * i, <span class="literal">NULL</span>);</span><br><span class="line">        <span class="keyword">if</span> (data.val == <span class="number">-1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (errno)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"READ error: %s\n"</span>, strerror(errno));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">memcpy</span>(data.chars, laddr, j);</span><br><span class="line">        ptrace(PTRACE_POKEDATA, child, addr + long_size * i, data.val);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (argc != <span class="number">2</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Usage: %s pid\n"</span>, argv[<span class="number">0</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">pid_t</span> tracee = atoi(argv[<span class="number">1</span>]);</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">user_regs_struct</span> <span class="title">regs</span>;</span></span><br><span class="line">    <span class="comment">/*int 80(系统调用) int 3（断点）*/</span></span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">char</span> code[] = &#123;<span class="number">0xcd</span>, <span class="number">0x80</span>, <span class="number">0xcc</span>, <span class="number">0x00</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>&#125;; <span class="comment">//八个字节，等于long 型的长度</span></span><br><span class="line">    <span class="keyword">char</span> backup[<span class="number">8</span>];                                              <span class="comment">//备份读取的指令</span></span><br><span class="line">    ptrace(PTRACE_ATTACH, tracee, <span class="literal">NULL</span>, <span class="literal">NULL</span>);</span><br><span class="line">    <span class="keyword">long</span> inst; <span class="comment">//用于保存指令寄存器所指向的下一条将要执行的指令的内存地址</span></span><br><span class="line"></span><br><span class="line">    wait(<span class="literal">NULL</span>);</span><br><span class="line">    ptrace(PTRACE_GETREGS, tracee, <span class="literal">NULL</span>, &amp;regs);</span><br><span class="line">    inst = ptrace(PTRACE_PEEKTEXT, tracee, regs.rip, <span class="literal">NULL</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"tracee:RIP:0x%llx INST: 0x%lx\n"</span>, regs.rip, inst);</span><br><span class="line">    <span class="comment">//读取子进程将要执行的 7 bytes指令并备份</span></span><br><span class="line">    getdata(tracee, regs.rip, backup, <span class="number">7</span>);</span><br><span class="line">    <span class="comment">//设置断点</span></span><br><span class="line">    putdata(tracee, regs.rip, code, <span class="number">7</span>);</span><br><span class="line">    <span class="comment">//让子进程继续执行并执行“int 3”断点指令停止</span></span><br><span class="line">    ptrace(PTRACE_CONT, tracee, <span class="literal">NULL</span>, <span class="literal">NULL</span>);</span><br><span class="line"></span><br><span class="line">    wait(<span class="literal">NULL</span>);</span><br><span class="line">    <span class="keyword">long</span> rip = ptrace(PTRACE_PEEKUSER, tracee, <span class="number">8</span> * RIP, <span class="literal">NULL</span>); <span class="comment">//获取子进程停止时，rip的值</span></span><br><span class="line">    <span class="keyword">long</span> inst2 = ptrace(PTRACE_PEEKTEXT, tracee, rip, <span class="literal">NULL</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"tracee:RIP:0x%lx INST: 0x%lx\n"</span>, rip, inst2);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"Press Enter to continue  tracee process\n"</span>);</span><br><span class="line">    getchar();</span><br><span class="line">    putdata(tracee, regs.rip, backup, <span class="number">7</span>);        <span class="comment">//重新将备份的指令写回寄存器</span></span><br><span class="line">    ptrace(PTRACE_SETREGS, tracee, <span class="literal">NULL</span>, &amp;regs); <span class="comment">//设置会原来的寄存器值</span></span><br><span class="line">    ptrace(PTRACE_CONT, tracee, <span class="literal">NULL</span>, <span class="literal">NULL</span>);</span><br><span class="line">    ptrace(PTRACE_DETACH, tracee, <span class="literal">NULL</span>, <span class="literal">NULL</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果<br><img src="https://i.loli.net/2019/08/14/xqY1XHKJTCQWuet.png" alt><br>在运行<code>ptracer</code>后<code>ptracee</code>被插入一个<code>int 3</code>断点</p><p><strong>注意：<code>ptracer</code>应在<code>root</code>权限下运行</strong></p><h1 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h1><h2 id="不同平台的系统调用方式"><a href="#不同平台的系统调用方式" class="headerlink" title="不同平台的系统调用方式"></a>不同平台的系统调用方式</h2><p><img src="https://i.loli.net/2019/08/14/KyZ5oX2nIt9EVuG.png" alt="不同平台的系统调用方式"></p><h2 id="不同平台使用的参数寄存器"><a href="#不同平台使用的参数寄存器" class="headerlink" title="不同平台使用的参数寄存器"></a>不同平台使用的参数寄存器</h2><p><img src="https://i.loli.net/2019/08/14/ifrTU6M3X2gocPw.png" alt="不同平台使用的参数寄存器"></p><h1 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h1><p><a href="http://man7.org/linux/man-pages/man2/syscall.2.html" target="_blank" rel="noopener">http://man7.org/linux/man-pages/man2/syscall.2.html</a><br><a href="http://man7.org/linux/man-pages/man2/ptrace.2.html" target="_blank" rel="noopener">http://man7.org/linux/man-pages/man2/ptrace.2.html</a><br><a href="https://blog.csdn.net/u012417380/article/details/60470075" target="_blank" rel="noopener">https://blog.csdn.net/u012417380/article/details/60470075</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;ptrace-函数简介&quot;&gt;&lt;a href=&quot;#ptrace-函数简介&quot; class=&quot;headerlink&quot; title=&quot;ptrace 函数简介&quot;&gt;&lt;/a&gt;ptrace 函数简介&lt;/h1&gt;&lt;h2 id=&quot;函数原型&quot;&gt;&lt;a href=&quot;#函数原型&quot; class=&quot;</summary>
      
    
    
    
    <category term="linux" scheme="http://0xe4s0n.github.io/categories/linux/"/>
    
    
    <category term="C" scheme="http://0xe4s0n.github.io/tags/C/"/>
    
    <category term="hook" scheme="http://0xe4s0n.github.io/tags/hook/"/>
    
  </entry>
  
  <entry>
    <title>fork函数</title>
    <link href="http://0xe4s0n.github.io/fork%E5%87%BD%E6%95%B0.html"/>
    <id>http://0xe4s0n.github.io/fork%E5%87%BD%E6%95%B0.html</id>
    <published>2019-08-13T07:47:59.000Z</published>
    <updated>2019-08-14T15:08:16.417Z</updated>
    
    <content type="html"><![CDATA[<h1 id="fork入门知识"><a href="#fork入门知识" class="headerlink" title="fork入门知识"></a>fork入门知识</h1><p>&emsp;&emsp;一个进程，包括代码、数据和分配给进程的资源。<code>fork()</code>函数通过系统调用创建一个与原来进程几乎完全相同的进程，也就是两个进程可以做完全相同的事，但如果初始参数或者传入的变量不同，两个进程也可以做不同的事。<br>　　一个进程调用<code>fork()</code>函数后，系统先给新的进程分配资源，例如存储数据和代码的空间。然后把原来的进程的所有值都复制到新的新进程中，只有少数值与原来的进程的值不同。相当于克隆了一个自己。  </p><p>例子：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;unistd.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">pid_t</span> fpid; <span class="comment">//fpid表示fork函数返回的值</span></span><br><span class="line">    <span class="keyword">int</span> count=<span class="number">0</span>;</span><br><span class="line">    fpid=fork();</span><br><span class="line">    <span class="keyword">if</span> (fpid &lt; <span class="number">0</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"error in fork!"</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (fpid == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"i am the child process, my process id is%d/n"</span>,getpid());</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"我是爹的儿子/n"</span>);<span class="comment">//对某些人来说中文看着更直白。</span></span><br><span class="line">        count++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"i am the parent process, my process id is%d/n"</span>,getpid());</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"我是孩子他爹/n"</span>);</span><br><span class="line">        count++;</span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"统计结果是: %d/n"</span>,count);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">i am the child process, my process id is 5574</span><br><span class="line">我是爹的儿子</span><br><span class="line">统计结果是: 1</span><br><span class="line">i am the parent process, my process id is 5573</span><br><span class="line">我是孩子他爹</span><br><span class="line">统计结果是: 1</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;在语句<code>fpid=fork()</code>之前，只有一个进程在执行这段代码，但在这条语句之后，就变成两个进程在执行了，这两个进程的几乎完全相同，将要执行的下一条语句都是<code>if(fpid&lt;0)</code>……<br>　　为什么两个进程的<code>fpid</code>不同呢，这与<code>fork</code>函数的特性有关。<code>fork</code>调用的一个奇妙之处就是它仅仅被调用一次，却能够返回两次，它可能有三种不同的返回值：</p><ul><li>在父进程中，<code>fork</code>返回新创建子进程的进程<code>ID</code>；</li><li>在子进程中，<code>fork</code>返回<code>0</code>；</li><li>如果出现错误，<code>fork</code>返回一个负值；  </li></ul><p>&emsp;&emsp;在<code>fork</code>函数执行完毕后，如果创建新进程成功，则出现两个进程，一个是子进程，一个是父进程。在子进程中，<code>fork</code>函数返回<code>0</code>，在父进程中，<code>fork</code>返回新创建子进程的进程<code>ID</code>。我们可以通过<code>fork</code>返回的值来判断当前进程是子进程还是父进程。<br><strong>fork出错可能有两种原因：</strong></p><ul><li>当前的进程数已经达到了系统规定的上限，这时<code>errno</code>的值被设置为<code>EAGAIN</code>。</li><li>系统内存不足，这时<code>errno</code>的值被设置为<code>ENOMEM</code>。</li></ul><p>&emsp;&emsp;创建新进程成功后，系统中出现两个基本完全相同的进程，这两个进程执行没有固定的先后顺序，哪个进程先执行要看系统的进程调度策略。每个进程都有一个独特（互不相同）的进程标识符（<code>process ID</code>），可以通过<code>getpid()</code>函数获得，还有一个记录父进程pid的变量，可以通过<code>getppid()</code>函数获得变量的值。<br>fork执行完毕后，出现两个进程<br><img src="https://i.loli.net/2019/08/13/MOwEAkYB2eRKpGS.png" alt><br>　　有人可能疑惑为什么不是从<code>#include</code>处开始复制代码的，这是因为<code>fork</code>是把进程当前的情况拷贝一份，执行<code>fork</code>时，进程已经执行完了<code>int count=0;</code> <code>fork</code>只拷贝下一个要执行的代码到新的进程。</p><h1 id="fork进阶知识"><a href="#fork进阶知识" class="headerlink" title="fork进阶知识"></a>fork进阶知识</h1><p>先看一份代码：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;unistd.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="keyword">int</span> i=<span class="number">0</span>;</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">"i son/pa ppid pid  fpid/n"</span>);</span><br><span class="line">   <span class="comment">//ppid指当前进程的父进程pid</span></span><br><span class="line">   <span class="comment">//pid指当前进程的pid,</span></span><br><span class="line">   <span class="comment">//fpid指fork返回给当前进程的值</span></span><br><span class="line">   <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">2</span>;i++)&#123;</span><br><span class="line">       <span class="keyword">pid_t</span> fpid=fork();</span><br><span class="line">       <span class="keyword">if</span>(fpid==<span class="number">0</span>)</span><br><span class="line">       <span class="built_in">printf</span>(<span class="string">"%d child  %4d %4d %4d/n"</span>,i,getppid(),getpid(),fpid);</span><br><span class="line">       <span class="keyword">else</span></span><br><span class="line">       <span class="built_in">printf</span>(<span class="string">"%d parent %4d %4d %4d/n"</span>,i,getppid(),getpid(),fpid);</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">i son/pa ppid pid  fpid</span><br><span class="line">0 parent 2043 3224 3225</span><br><span class="line">0 child  3224 3225    0</span><br><span class="line">1 parent 2043 3224 3226</span><br><span class="line">1 parent 3224 3225 3227</span><br><span class="line">1 child     1 3227    0</span><br><span class="line">1 child     1 3226    0</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;第一步：在父进程中，指令执行到<code>for</code>循环中，<code>i=0</code>，接着执行<code>fork</code>，<code>fork</code>执行完后，系统中出现两个进程，分别是<code>p3224</code>和<code>p3225</code>（后面我都用<code>pxxxx</code>表示进程<code>id</code>为<code>xxxx</code>的进程）。可以看到父进程<code>p3224</code>的父进程是<code>p2043</code>，子进程<code>p3225</code>的父进程正好是<code>p3224</code>。我们用一个链表来表示这个关系：<code>p2043-&gt;p3224-&gt;p3225</code><br>　　第二步：假设父进程<code>p3224</code>先执行，当进入下一个循环时，<code>i=1</code>，接着执行<code>fork</code>，系统中又新增一个进程<code>p3226</code>，对于此时的父进程，p2043-&gt;p3224（当前进程）-&gt;p3226（被创建的子进程）。对于子进程<code>p3225</code>，执行完第一次循环后，<code>i=1</code>，接着执行<code>fork</code>，系统中新增一个进程<code>p3227</code>，对于此进程，p3224-&gt;p3225（当前进程）-&gt;p3227（被创建的子进程）。从输出可以看到<code>p3225</code>原来是<code>p3224</code>的子进程，现在变成<code>p3227</code>的父进程。父子是相对的，这个应该容易理解。只要当前进程执行了<code>fork</code>，该进程就变成了父进程了，就打印出了<code>parent</code>。<br>　　 第三步：第二步创建了两个进程<code>p3226</code>，<code>p3227</code>，这两个进程执行完<code>printf</code>函数后就结束了，因为这两个进程无法进入第三次循环，无法<code>fork</code>，该执行<code>return 0;</code>了，其他进程也是如此。  </p><p>&emsp;&emsp;细心的读者可能注意到<code>p3226</code>，<code>p3227</code>的父进程难道不该是<code>p3224</code>和<code>p3225</code>吗，怎么会是<code>1</code>呢？这里得讲到进程的创建和死亡的过程，在<code>p3224</code>和<code>p3225</code>执行完第二个循环后，<code>main</code>函数就该退出了，也即进程该死亡了，因为它已经做完所有事情了。<code>p3224</code>和<code>p3225</code>死亡后，<code>p3226</code>，<code>p3227</code>就没有父进程了，这在操作系统是不被允许的，所以<code>p3226</code>，<code>p322</code>7的父进程就被置为<code>p1</code>了，<code>p1</code>是永远不会死亡的</p><p>这个程序执行的流程如下：<br><img src="https://i.loli.net/2019/08/13/8aSYhQzV9GgqnxC.png" alt><br>　　总结一下规律，对于这种N次循环的情况，执行printf函数的次数为2*(1+2+4+……+2<sup>N-1</sup>)次，创建的子进程数为1+2+4+……+2<sup>N-1个。<br>　　 同时，如果想测一下一个程序中到底创建了几个子进程，最好的方法就是调用<code>printf</code>函数打印该进程的<code>pid</code>，也即调用<code>printf(&quot;%d/n&quot;,getpid());</code>或者通过<code>printf(&quot;+/n&quot;);</code>来判断产生了几个进程。有人想通过调用<code>printf(&quot;+&quot;);</code>来统计创建了几个进程，这是不妥当的。<br>    看下面的代码：</sup></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;unistd.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">pid_t</span> fpid;<span class="comment">//fpid表示fork函数返回的值</span></span><br><span class="line"><span class="comment">//printf("fork!");</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"fork!/n"</span>);</span><br><span class="line">fpid = fork();</span><br><span class="line"><span class="keyword">if</span> (fpid &lt; <span class="number">0</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"error in fork!"</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (fpid == <span class="number">0</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"I am the child process, my process id is %d/n"</span>, getpid());</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"I am the parent process, my process id is %d/n"</span>, getpid());</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">fork!</span><br><span class="line">I am the parent process, my process id is 3361</span><br><span class="line">I am the child process, my process id is 3362</span><br></pre></td></tr></table></figure><p>如果把语句<code>printf(&quot;fork!/n&quot;);</code>注释掉，执行<code>printf(&quot;fork!&quot;);</code><br>则新的程序的执行结果是：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">fork!I am the parent process, my process id is 3298</span><br><span class="line">fork!I am the child process, my process id is 3299</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;程序的唯一的区别就在于一个<code>/n</code>回车符号，为什么结果会相差这么大呢？<br>　　这就跟<code>printf</code>的缓冲机制有关了，<code>printf</code>某些内容时，操作系统仅仅是把该内容放到了<code>stdout</code>的缓冲队列里了,并没有实际的写到屏幕上。但是,只要看到有<code>/n</code> 则会立即刷新<code>stdout</code>,因此就马上能够打印了。<br>　　运行了<code>printf(&quot;fork!&quot;)</code>后,<code>“fork!”</code>仅仅被放到了缓冲里,程序运行到<code>fork</code>时缓冲里面的<code>“fork!”</code> 被子进程复制过去了。因此在子进程度stdout缓冲里面就也有了<code>fork!</code> 。所以,你最终看到的会是<code>fork!</code> 被<code>printf</code>了2次！！！！<br>　　而运行<code>printf(&quot;fork! /n&quot;)</code>后,<code>“fork!”</code>被立即打印到了屏幕上,之后<code>fork</code>到的子进程里的<code>stdout</code>缓冲里不会有<code>fork!</code> 内容。因此你看到的结果会是<code>fork!</code> 被<code>printf</code>了1次！！！！<br>　　所以说<code>printf(&quot;+&quot;);</code>不能正确地反应进程的数量。　　</p><h1 id="fork高阶知识"><a href="#fork高阶知识" class="headerlink" title="fork高阶知识"></a>fork高阶知识</h1><h2 id="fork-父子进程变量的关系"><a href="#fork-父子进程变量的关系" class="headerlink" title="fork()父子进程变量的关系"></a>fork()父子进程变量的关系</h2><p>调用<code>fork</code>，会有两次返回，一次是父进程、一次是子进程，因为子进程是父进程的副本，所以它拥有父进程数据空间、栈和堆的副本，但是它们并没有共享这些存储空间，它们只共享正文段。 我们通过下面的程序验证下。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;unistd.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> global = <span class="number">6</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc,<span class="keyword">char</span>** argv)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> var=<span class="number">10</span>;  </span><br><span class="line">    <span class="keyword">int</span> pid=fork();</span><br><span class="line">    <span class="keyword">if</span>(pid==<span class="number">-1</span>)&#123;</span><br><span class="line">          <span class="built_in">printf</span>(<span class="string">"error!"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(pid==<span class="number">0</span>)&#123;</span><br><span class="line">        global++;</span><br><span class="line">        var++;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"This is the child process!/n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"This is the parent process! child processid=%d/n"</span>,pid);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d, %d, %d /n"</span>, getpid(), global, var);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">This is the child process!</span><br><span class="line">20415, 7, 11 </span><br><span class="line">This is the parent process! child processid=20415</span><br><span class="line">20414, 6, 10</span><br></pre></td></tr></table></figure><p>可以看出，子进程的值发生了改变，可以说明，它们并不是共享的。<br>把变量的地址打印出来</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">This is the child process!</span><br><span class="line">20505, 7, 11, 646334744 </span><br><span class="line">This is the parent process! child processid=20505</span><br><span class="line">20504, 6, 10, 646334744</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;地址居然是一样的，内容还是不一样，原来这里打印的变量的地址都是逻辑空间，对于父子进程，它们的逻辑空间一样，但是物理空间还是不同的。所以在多进程编程中，不要寄希望于通过地址来判断两个变量是否相同。<br>　　<code>fork</code>之后，子进程会拷贝父进程的数据空间、堆和栈空间（实际上是采用写时复制技术），二者共享代码段。<br>所以在子进程中修改全局变量（局部变量，分配在堆上的内存同样也是）后，父进程的相同的全局变量不会改变。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;fork入门知识&quot;&gt;&lt;a href=&quot;#fork入门知识&quot; class=&quot;headerlink&quot; title=&quot;fork入门知识&quot;&gt;&lt;/a&gt;fork入门知识&lt;/h1&gt;&lt;p&gt;&amp;emsp;&amp;emsp;一个进程，包括代码、数据和分配给进程的资源。&lt;code&gt;fork()</summary>
      
    
    
    
    <category term="linux" scheme="http://0xe4s0n.github.io/categories/linux/"/>
    
    
    <category term="C" scheme="http://0xe4s0n.github.io/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>De1ctf——evil_boost</title>
    <link href="http://0xe4s0n.github.io/De1ctf%E2%80%94%E2%80%94evil-boost.html"/>
    <id>http://0xe4s0n.github.io/De1ctf%E2%80%94%E2%80%94evil-boost.html</id>
    <published>2019-08-12T08:25:00.000Z</published>
    <updated>2019-08-12T08:37:40.199Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h1><p>该题是将输入的参数数进行解析然后取出进行计算<br><img src="https://i.loli.net/2019/08/12/wpUt3Qnub2NqYM8.jpg" alt></p><p>然后后面有一个验证<code>(cpp + py * js) ^ *(name + i)) != *(&amp;v148 + i + 8)</code><br><img src="https://i.loli.net/2019/08/12/L7PDMjXsFfBAyka.jpg" alt></p><p>用ida-python解出</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">flag = [<span class="number">0x4c</span>,<span class="number">0x70</span>,<span class="number">0x71</span>,<span class="number">0x6b</span>,<span class="number">0x38</span>,<span class="number">0x71</span>,<span class="number">0x6b</span>,<span class="number">0x38</span>,<span class="number">0x6c</span>,<span class="number">0x70</span>,<span class="number">0x7d</span>,<span class="number">0x38</span>,<span class="number">0x6f</span>,<span class="number">0x6a</span>,<span class="number">0x77</span>,<span class="number">0x76</span>,<span class="number">0x7f</span>,<span class="number">0x38</span>,<span class="number">0x7e</span>,<span class="number">0x74</span>,<span class="number">0x79</span>,<span class="number">0x7f</span>,<span class="number">0x36</span>,<span class="number">0x36</span>,<span class="number">0x36</span>]</span><br><span class="line">dest = <span class="string">""</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> flag:</span><br><span class="line">    dest+=chr(i^<span class="number">0x18</span>)</span><br><span class="line"><span class="keyword">print</span> dest</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2019/08/12/w9kvOBdlgn4jIAq.png" alt></p><p>很明显<code>This is the wrong flag...</code></p><p>继续往下看<br><img src="https://i.loli.net/2019/08/12/QpfeZaogx7XMnrP.png" alt><br>输入的name为11位</p><p>然后开始对输入的那么进行识别<br><img src="https://i.loli.net/2019/08/12/xCOUvy8bpPloJN4.png" alt><br>计算出<code>0~8</code>,<code>b~z</code>的个数，并且如果输入的name不为<code>0~8</code>,<code>b~z</code>就必须是<code>- / * ( )</code>  </p><p>然后验证<code>0~8</code>,<code>b~z</code>的个数是否为5,1 第二位是否为<code>b~z</code><br><img src="https://i.loli.net/2019/08/12/qdA2oiBSbEn4NtG.jpg" alt><br>最后一个验证<code>result</code>是否等于24<br>很容易看出这是在进行24点的运算<br><code>0~8</code>与<code>- / * ( )</code>还有一个字母应该是<code>e</code>  </p><h1 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h1><h2 id="我的17小时脚本"><a href="#我的17小时脚本" class="headerlink" title="我的17小时脚本"></a>我的17小时脚本</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> itertools</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">result = []</span><br><span class="line"><span class="keyword">for</span> num <span class="keyword">in</span> itertools.product([<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>], repeat=<span class="number">5</span>):</span><br><span class="line">    <span class="keyword">for</span> ops <span class="keyword">in</span> itertools.product(<span class="string">'-*/'</span>, repeat=<span class="number">3</span>):</span><br><span class="line">        bds = []</span><br><span class="line">        bds.append(<span class="string">'&#123;0&#125;e&#123;1&#125;&#123;5&#125;(&#123;2&#125;&#123;6&#125;&#123;3&#125;)&#123;7&#125;&#123;4&#125;'</span>.format(*num, *ops)) <span class="comment"># AeB#(C#D)#E</span></span><br><span class="line">        bds.append(<span class="string">'&#123;0&#125;e&#123;1&#125;&#123;5&#125;(&#123;2&#125;&#123;6&#125;&#123;3&#125;&#123;7&#125;&#123;4&#125;)'</span>.format(*num, *ops))  <span class="comment"># AeB#(C#D#E)</span></span><br><span class="line">        bds.append(<span class="string">'&#123;0&#125;e&#123;1&#125;&#123;5&#125;&#123;2&#125;&#123;6&#125;(&#123;3&#125;&#123;7&#125;&#123;4&#125;)'</span>.format(*num, *ops)) <span class="comment"># AeB#C#(D#E)</span></span><br><span class="line">        <span class="keyword">for</span> bd <span class="keyword">in</span> bds:</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                os.system(<span class="string">"cls"</span>)</span><br><span class="line">                print(<span class="string">"processing...&#123;:.3f&#125;%"</span>.format((<span class="number">10000</span>*num[<span class="number">0</span>]+<span class="number">1000</span>*num[<span class="number">1</span>]+<span class="number">100</span>*num[<span class="number">2</span>]+<span class="number">10</span>*num[<span class="number">3</span>]+num[<span class="number">4</span>])/<span class="number">1000</span>))</span><br><span class="line">                <span class="keyword">for</span> i <span class="keyword">in</span> result:</span><br><span class="line">                    print(i)</span><br><span class="line">                <span class="keyword">if</span> abs(eval(bd) - <span class="number">24.0</span>) &lt; <span class="number">1e-10</span>:</span><br><span class="line">                    result.append(bd)</span><br><span class="line">            <span class="keyword">except</span> ZeroDivisionError:  <span class="comment"># 零除错误！</span></span><br><span class="line">                <span class="keyword">continue</span></span><br></pre></td></tr></table></figure><h2 id="poker师傅的5秒脚本"><a href="#poker师傅的5秒脚本" class="headerlink" title="poker师傅的5秒脚本"></a>poker师傅的5秒脚本</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> hashlib <span class="keyword">import</span> md5</span><br><span class="line"><span class="keyword">from</span> tqdm <span class="keyword">import</span> tqdm</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solved1</span><span class="params">()</span>:</span></span><br><span class="line">case1 = [<span class="string">'-'</span>, <span class="string">'*'</span>, <span class="string">'/'</span>, <span class="string">'+'</span>]</span><br><span class="line">case2 = map(str, range(<span class="number">9</span>))</span><br><span class="line"><span class="keyword">for</span> n1 <span class="keyword">in</span> tqdm(case2):</span><br><span class="line"><span class="keyword">for</span> n2 <span class="keyword">in</span> case2:</span><br><span class="line"><span class="keyword">for</span> n3 <span class="keyword">in</span> case2:</span><br><span class="line"><span class="keyword">for</span> n4 <span class="keyword">in</span> case2:</span><br><span class="line"><span class="keyword">for</span> n5 <span class="keyword">in</span> case2:</span><br><span class="line"><span class="keyword">for</span> c1 <span class="keyword">in</span> case1:</span><br><span class="line"><span class="keyword">for</span> c2 <span class="keyword">in</span> case1:</span><br><span class="line"><span class="keyword">for</span> c3 <span class="keyword">in</span> case1:</span><br><span class="line">exp = <span class="string">'de1ctf&#123;'</span> + <span class="string">''</span>.join([n1, <span class="string">'e'</span>, n2, c1, <span class="string">'('</span>, n3, c2, n4, <span class="string">')'</span>, c3, n5]) + <span class="string">'&#125;'</span></span><br><span class="line"><span class="keyword">if</span> md5(exp).hexdigest() == <span class="string">'293316bfd246fa84e566d7999df88e79'</span>:</span><br><span class="line"><span class="keyword">print</span> exp</span><br><span class="line">exit()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solved2</span><span class="params">()</span>:</span></span><br><span class="line">case1 = [<span class="string">'-'</span>, <span class="string">'*'</span>, <span class="string">'/'</span>, <span class="string">'+'</span>]</span><br><span class="line">case2 = map(str, range(<span class="number">9</span>))</span><br><span class="line"><span class="keyword">for</span> n1 <span class="keyword">in</span> tqdm(case2):</span><br><span class="line"><span class="keyword">for</span> n2 <span class="keyword">in</span> case2:</span><br><span class="line"><span class="keyword">for</span> n3 <span class="keyword">in</span> case2:</span><br><span class="line"><span class="keyword">for</span> n4 <span class="keyword">in</span> case2:</span><br><span class="line"><span class="keyword">for</span> n5 <span class="keyword">in</span> case2:</span><br><span class="line"><span class="keyword">for</span> c1 <span class="keyword">in</span> case1:</span><br><span class="line"><span class="keyword">for</span> c2 <span class="keyword">in</span> case1:</span><br><span class="line"><span class="keyword">for</span> c3 <span class="keyword">in</span> case1:</span><br><span class="line">exp = <span class="string">'de1ctf&#123;'</span> + <span class="string">''</span>.join([n1, <span class="string">'e'</span>, n2, c1, <span class="string">'('</span>, n3, c2, n4, c3, n5, <span class="string">')'</span>]) + <span class="string">'&#125;'</span></span><br><span class="line"><span class="keyword">if</span> md5(exp).hexdigest() == <span class="string">'293316bfd246fa84e566d7999df88e79'</span>:</span><br><span class="line"><span class="keyword">print</span> exp</span><br><span class="line">exit()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">solved1()</span><br><span class="line">solved2()</span><br></pre></td></tr></table></figure><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>脚本写了很久去问了poker师傅，然后发现原来那个<code>e</code>是科学记数法,我一直以为是自然底数。。。mmp<br><img src="https://i.loli.net/2019/08/12/jt7v6CUyfR4Xr8s.jpg" alt></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;题目分析&quot;&gt;&lt;a href=&quot;#题目分析&quot; class=&quot;headerlink&quot; title=&quot;题目分析&quot;&gt;&lt;/a&gt;题目分析&lt;/h1&gt;&lt;p&gt;该题是将输入的参数数进行解析然后取出进行计算&lt;br&gt;&lt;img src=&quot;https://i.loli.net/2019/08</summary>
      
    
    
    
    <category term="pe" scheme="http://0xe4s0n.github.io/categories/pe/"/>
    
    
    <category term="re" scheme="http://0xe4s0n.github.io/tags/re/"/>
    
  </entry>
  
  <entry>
    <title>2019暑假任务———Encoder</title>
    <link href="http://0xe4s0n.github.io/2019%E6%9A%91%E5%81%87%E4%BB%BB%E5%8A%A1%E2%80%94%E2%80%94%E2%80%94Encoder.html"/>
    <id>http://0xe4s0n.github.io/2019%E6%9A%91%E5%81%87%E4%BB%BB%E5%8A%A1%E2%80%94%E2%80%94%E2%80%94Encoder.html</id>
    <published>2019-07-31T15:54:36.000Z</published>
    <updated>2019-07-31T16:03:48.620Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Encoder"><a href="#Encoder" class="headerlink" title="Encoder"></a>Encoder</h1><h2 id="程序主要功能"><a href="#程序主要功能" class="headerlink" title="程序主要功能"></a>程序主要功能</h2><p>将输入的文件进行特殊的加密后输出</p><h2 id="主要步奏"><a href="#主要步奏" class="headerlink" title="主要步奏"></a>主要步奏</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">signed</span> __int64 __<span class="function">fastcall <span class="title">sub_402C77</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span> *input)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">char</span> *v1; <span class="comment">// rax</span></span><br><span class="line">  <span class="keyword">signed</span> <span class="keyword">int</span> i; <span class="comment">// [rsp+18h] [rbp-1108h]</span></span><br><span class="line">  FILE *read_stream; <span class="comment">// [rsp+20h] [rbp-1100h]</span></span><br><span class="line">  FILE *write_stream; <span class="comment">// [rsp+28h] [rbp-10F8h]</span></span><br><span class="line">  <span class="keyword">char</span> v6; <span class="comment">// [rsp+30h] [rbp-10F0h]</span></span><br><span class="line">  <span class="keyword">char</span> v7[<span class="number">16</span>]; <span class="comment">// [rsp+10D0h] [rbp-50h]</span></span><br><span class="line">  <span class="keyword">char</span> s; <span class="comment">// [rsp+10E0h] [rbp-40h]</span></span><br><span class="line">  __int64 v9; <span class="comment">// [rsp+1100h] [rbp-20h]</span></span><br><span class="line">  __int64 v10; <span class="comment">// [rsp+1108h] [rbp-18h]</span></span><br><span class="line">  <span class="keyword">char</span> v11; <span class="comment">// [rsp+1110h] [rbp-10h]</span></span><br><span class="line">  <span class="keyword">unsigned</span> __int64 v12; <span class="comment">// [rsp+1118h] [rbp-8h]</span></span><br><span class="line"></span><br><span class="line">  v12 = __readfsqword(<span class="number">0x28</span>u);</span><br><span class="line">  <span class="built_in">memset</span>(&amp;s, <span class="number">0</span>, <span class="number">0x11</span>uLL);</span><br><span class="line">  v9 = 'kaf&#123;galf';                              // flag&#123;fake_flag!&#125;</span><br><span class="line">  v10 = '&#125;!galf_e';</span><br><span class="line">  v11 = <span class="number">0</span>;</span><br><span class="line">  sub_4015F2();</span><br><span class="line">  sub_401611(&amp;v9, <span class="number">16</span>, &amp;v6);</span><br><span class="line">  read_stream = fopen(input, <span class="string">"rb+"</span>);</span><br><span class="line">  <span class="keyword">if</span> ( !read_stream )</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0xFFFFFFFF</span>LL;</span><br><span class="line">  v1 = &amp;input[<span class="built_in">strlen</span>(input)];</span><br><span class="line">  *v1 = 'tpyrcne_';</span><br><span class="line">  *(v1 + 4) = 'de';</span><br><span class="line">  v1[<span class="number">10</span>] = <span class="number">0</span>;                                   <span class="comment">// _encrypted</span></span><br><span class="line">  write_stream = fopen(input, <span class="string">"wb+"</span>);</span><br><span class="line">  <span class="keyword">if</span> ( !write_stream )</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0L</span>L;</span><br><span class="line">  <span class="keyword">while</span> ( sub_402C00(&amp;s, <span class="number">17</span>, read_stream) )     <span class="comment">// 读入16字符到s</span></span><br><span class="line">  &#123;</span><br><span class="line">    encrypt(&amp;v6, &amp;s, v7);</span><br><span class="line">    <span class="keyword">for</span> ( i = <span class="number">0</span>; i &lt;= <span class="number">15</span>; ++i )</span><br><span class="line">      fputc(v7[i], write_stream);</span><br><span class="line">  &#125;</span><br><span class="line">  fclose(read_stream);</span><br><span class="line">  fclose(write_stream);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">1L</span>L;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>主要是由encrypt函数完成加密过程，可以看到函数传入一个加密使用的表</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">signed</span> __int64 __<span class="function">fastcall <span class="title">sub_40190B</span><span class="params">(_DWORD *a1, <span class="keyword">unsigned</span> __int16 *a2, __int64 a3)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">int</span> v3; <span class="comment">// ST20_4</span></span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">int</span> v4; <span class="comment">// ST24_4</span></span><br><span class="line">  <span class="keyword">int</span> v5; <span class="comment">// ST30_4</span></span><br><span class="line">  <span class="keyword">int</span> v6; <span class="comment">// ST34_4</span></span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">int</span> v7; <span class="comment">// ST28_4</span></span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">int</span> v8; <span class="comment">// ST2C_4</span></span><br><span class="line">  <span class="keyword">int</span> v9; <span class="comment">// ST30_4</span></span><br><span class="line">  <span class="keyword">int</span> v10; <span class="comment">// ST34_4</span></span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">int</span> v11; <span class="comment">// ST20_4</span></span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">int</span> v12; <span class="comment">// ST24_4</span></span><br><span class="line">  <span class="keyword">int</span> v13; <span class="comment">// ST30_4</span></span><br><span class="line">  <span class="keyword">int</span> v14; <span class="comment">// ST34_4</span></span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">int</span> v15; <span class="comment">// ST28_4</span></span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">int</span> v16; <span class="comment">// ST2C_4</span></span><br><span class="line">  <span class="keyword">int</span> v17; <span class="comment">// ST30_4</span></span><br><span class="line">  <span class="keyword">int</span> v18; <span class="comment">// ST34_4</span></span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">int</span> v19; <span class="comment">// ST20_4</span></span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">int</span> v20; <span class="comment">// ST24_4</span></span><br><span class="line">  <span class="keyword">int</span> v21; <span class="comment">// ST30_4</span></span><br><span class="line">  <span class="keyword">int</span> v22; <span class="comment">// ST34_4</span></span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">int</span> v23; <span class="comment">// ST28_4</span></span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">int</span> v24; <span class="comment">// ST2C_4</span></span><br><span class="line">  <span class="keyword">int</span> v25; <span class="comment">// ST30_4</span></span><br><span class="line">  <span class="keyword">int</span> v26; <span class="comment">// ST34_4</span></span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">int</span> v27; <span class="comment">// ST20_4</span></span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">int</span> v28; <span class="comment">// ST24_4</span></span><br><span class="line">  <span class="keyword">int</span> v29; <span class="comment">// ST30_4</span></span><br><span class="line">  <span class="keyword">int</span> v30; <span class="comment">// ST34_4</span></span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">int</span> v31; <span class="comment">// ST28_4</span></span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">int</span> v32; <span class="comment">// ST2C_4</span></span><br><span class="line">  <span class="keyword">int</span> v33; <span class="comment">// ST30_4</span></span><br><span class="line">  <span class="keyword">int</span> v34; <span class="comment">// ST34_4</span></span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">int</span> v35; <span class="comment">// ST20_4</span></span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">int</span> v36; <span class="comment">// ST24_4</span></span><br><span class="line">  <span class="keyword">int</span> v37; <span class="comment">// ST30_4</span></span><br><span class="line">  <span class="keyword">int</span> v38; <span class="comment">// ST34_4</span></span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">int</span> v39; <span class="comment">// ST28_4</span></span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">int</span> v40; <span class="comment">// ST2C_4</span></span><br><span class="line">  <span class="keyword">int</span> v41; <span class="comment">// ST30_4</span></span><br><span class="line">  <span class="keyword">int</span> v42; <span class="comment">// ST34_4</span></span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">int</span> v43; <span class="comment">// ST20_4</span></span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">int</span> v44; <span class="comment">// ST24_4</span></span><br><span class="line">  <span class="keyword">int</span> v45; <span class="comment">// ST30_4</span></span><br><span class="line">  <span class="keyword">int</span> v46; <span class="comment">// ST34_4</span></span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">int</span> v47; <span class="comment">// ST28_4</span></span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">int</span> v48; <span class="comment">// ST2C_4</span></span><br><span class="line">  <span class="keyword">int</span> v49; <span class="comment">// ST30_4</span></span><br><span class="line">  <span class="keyword">int</span> v50; <span class="comment">// ST34_4</span></span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">int</span> v51; <span class="comment">// ST20_4</span></span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">int</span> v52; <span class="comment">// ST24_4</span></span><br><span class="line">  <span class="keyword">int</span> v53; <span class="comment">// ST30_4</span></span><br><span class="line">  <span class="keyword">int</span> v54; <span class="comment">// ST34_4</span></span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">int</span> v55; <span class="comment">// ST28_4</span></span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">int</span> v56; <span class="comment">// ST2C_4</span></span><br><span class="line">  <span class="keyword">int</span> v57; <span class="comment">// ST30_4</span></span><br><span class="line">  <span class="keyword">int</span> v58; <span class="comment">// ST34_4</span></span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">int</span> v59; <span class="comment">// ST20_4</span></span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">int</span> v60; <span class="comment">// ST24_4</span></span><br><span class="line">  <span class="keyword">int</span> v61; <span class="comment">// ST30_4</span></span><br><span class="line">  <span class="keyword">int</span> v62; <span class="comment">// ST34_4</span></span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">int</span> v63; <span class="comment">// ST28_4</span></span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">int</span> v64; <span class="comment">// ST2C_4</span></span><br><span class="line">  <span class="keyword">int</span> v65; <span class="comment">// ST30_4</span></span><br><span class="line">  <span class="keyword">int</span> v66; <span class="comment">// ST34_4</span></span><br><span class="line">  <span class="keyword">int</span> v67; <span class="comment">// ST28_4</span></span><br><span class="line">  <span class="keyword">int</span> v68; <span class="comment">// ST2C_4</span></span><br><span class="line">  <span class="keyword">int</span> v69; <span class="comment">// ST20_4</span></span><br><span class="line">  <span class="keyword">int</span> v70; <span class="comment">// ST24_4</span></span><br><span class="line">  <span class="keyword">signed</span> __int64 result; <span class="comment">// rax</span></span><br><span class="line"></span><br><span class="line">  v3 = ((*(a2 + <span class="number">3</span>) &lt;&lt; <span class="number">24</span>) | (*(a2 + <span class="number">2</span>) &lt;&lt; <span class="number">16</span>) | *a2) ^ a1[<span class="number">1024</span>];</span><br><span class="line">  v4 = ((*(a2 + <span class="number">7</span>) &lt;&lt; <span class="number">24</span>) | (*(a2 + <span class="number">6</span>) &lt;&lt; <span class="number">16</span>) | a2[<span class="number">2</span>]) ^ a1[<span class="number">1025</span>];</span><br><span class="line">  v5 = a1[BYTE1(v3) + <span class="number">512L</span>L] ^ a1[BYTE2(v3) + <span class="number">256L</span>L] ^ a1[v3 &gt;&gt; <span class="number">24</span>] ^ a1[v3 + <span class="number">768L</span>L];</span><br><span class="line">  v6 = a1[BYTE2(v4) + <span class="number">512L</span>L] ^ a1[(v4 &gt;&gt; <span class="number">24</span>) + <span class="number">256L</span>L] ^ a1[v4] ^ a1[BYTE1(v4) + <span class="number">768L</span>L];</span><br><span class="line">  v7 = __ROR4__((v6 + v5 + a1[<span class="number">1032</span>]) ^ ((*(a2 + <span class="number">11</span>) &lt;&lt; <span class="number">24</span>) | (*(a2 + <span class="number">10</span>) &lt;&lt; <span class="number">16</span>) | a2[<span class="number">4</span>]) ^ a1[<span class="number">1026</span>], <span class="number">1</span>);</span><br><span class="line">  v8 = (v5 + <span class="number">2</span> * v6 + a1[<span class="number">1033</span>]) ^ __ROL4__(((*(a2 + <span class="number">15</span>) &lt;&lt; <span class="number">24</span>) | (*(a2 + <span class="number">14</span>) &lt;&lt; <span class="number">16</span>) | a2[<span class="number">6</span>]) ^ a1[<span class="number">1027</span>], <span class="number">1</span>);</span><br><span class="line">  v9 = a1[BYTE1(v7) + <span class="number">512L</span>L] ^ a1[BYTE2(v7) + <span class="number">256L</span>L] ^ a1[v7 &gt;&gt; <span class="number">24</span>] ^ a1[v7 + <span class="number">768L</span>L];</span><br><span class="line">  v10 = a1[BYTE2(v8) + <span class="number">512L</span>L] ^ a1[(v8 &gt;&gt; <span class="number">24</span>) + <span class="number">256L</span>L] ^ a1[v8] ^ a1[BYTE1(v8) + <span class="number">768L</span>L];</span><br><span class="line">  v11 = __ROR4__((v10 + v9 + a1[<span class="number">1034</span>]) ^ v3, <span class="number">1</span>);</span><br><span class="line">  v12 = (v9 + <span class="number">2</span> * v10 + a1[<span class="number">1035</span>]) ^ __ROL4__(v4, <span class="number">1</span>);</span><br><span class="line">  v13 = a1[BYTE1(v11) + <span class="number">512L</span>L] ^ a1[BYTE2(v11) + <span class="number">256L</span>L] ^ a1[v11 &gt;&gt; <span class="number">24</span>] ^ a1[v11 + <span class="number">768L</span>L];</span><br><span class="line">  v14 = a1[BYTE2(v12) + <span class="number">512L</span>L] ^ a1[(v12 &gt;&gt; <span class="number">24</span>) + <span class="number">256L</span>L] ^ a1[v12] ^ a1[BYTE1(v12) + <span class="number">768L</span>L];</span><br><span class="line">  v15 = __ROR4__((v14 + v13 + a1[<span class="number">1036</span>]) ^ v7, <span class="number">1</span>);</span><br><span class="line">  v16 = (v13 + <span class="number">2</span> * v14 + a1[<span class="number">1037</span>]) ^ __ROL4__(v8, <span class="number">1</span>);</span><br><span class="line">  v17 = a1[BYTE1(v15) + <span class="number">512L</span>L] ^ a1[BYTE2(v15) + <span class="number">256L</span>L] ^ a1[v15 &gt;&gt; <span class="number">24</span>] ^ a1[v15 + <span class="number">768L</span>L];</span><br><span class="line">  v18 = a1[BYTE2(v16) + <span class="number">512L</span>L] ^ a1[(v16 &gt;&gt; <span class="number">24</span>) + <span class="number">256L</span>L] ^ a1[v16] ^ a1[BYTE1(v16) + <span class="number">768L</span>L];</span><br><span class="line">  v19 = __ROR4__((v18 + v17 + a1[<span class="number">1038</span>]) ^ v11, <span class="number">1</span>);</span><br><span class="line">  v20 = (v17 + <span class="number">2</span> * v18 + a1[<span class="number">1039</span>]) ^ __ROL4__(v12, <span class="number">1</span>);</span><br><span class="line">  v21 = a1[BYTE1(v19) + <span class="number">512L</span>L] ^ a1[BYTE2(v19) + <span class="number">256L</span>L] ^ a1[v19 &gt;&gt; <span class="number">24</span>] ^ a1[v19 + <span class="number">768L</span>L];</span><br><span class="line">  v22 = a1[BYTE2(v20) + <span class="number">512L</span>L] ^ a1[(v20 &gt;&gt; <span class="number">24</span>) + <span class="number">256L</span>L] ^ a1[v20] ^ a1[BYTE1(v20) + <span class="number">768L</span>L];</span><br><span class="line">  v23 = __ROR4__((v22 + v21 + a1[<span class="number">1040</span>]) ^ v15, <span class="number">1</span>);</span><br><span class="line">  v24 = (v21 + <span class="number">2</span> * v22 + a1[<span class="number">1041</span>]) ^ __ROL4__(v16, <span class="number">1</span>);</span><br><span class="line">  v25 = a1[BYTE1(v23) + <span class="number">512L</span>L] ^ a1[BYTE2(v23) + <span class="number">256L</span>L] ^ a1[v23 &gt;&gt; <span class="number">24</span>] ^ a1[v23 + <span class="number">768L</span>L];</span><br><span class="line">  v26 = a1[BYTE2(v24) + <span class="number">512L</span>L] ^ a1[(v24 &gt;&gt; <span class="number">24</span>) + <span class="number">256L</span>L] ^ a1[v24] ^ a1[BYTE1(v24) + <span class="number">768L</span>L];</span><br><span class="line">  v27 = __ROR4__((v26 + v25 + a1[<span class="number">1042</span>]) ^ v19, <span class="number">1</span>);</span><br><span class="line">  v28 = (v25 + <span class="number">2</span> * v26 + a1[<span class="number">1043</span>]) ^ __ROL4__(v20, <span class="number">1</span>);</span><br><span class="line">  v29 = a1[BYTE1(v27) + <span class="number">512L</span>L] ^ a1[BYTE2(v27) + <span class="number">256L</span>L] ^ a1[v27 &gt;&gt; <span class="number">24</span>] ^ a1[v27 + <span class="number">768L</span>L];</span><br><span class="line">  v30 = a1[BYTE2(v28) + <span class="number">512L</span>L] ^ a1[(v28 &gt;&gt; <span class="number">24</span>) + <span class="number">256L</span>L] ^ a1[v28] ^ a1[BYTE1(v28) + <span class="number">768L</span>L];</span><br><span class="line">  v31 = __ROR4__((v30 + v29 + a1[<span class="number">1044</span>]) ^ v23, <span class="number">1</span>);</span><br><span class="line">  v32 = (v29 + <span class="number">2</span> * v30 + a1[<span class="number">1045</span>]) ^ __ROL4__(v24, <span class="number">1</span>);</span><br><span class="line">  v33 = a1[BYTE1(v31) + <span class="number">512L</span>L] ^ a1[BYTE2(v31) + <span class="number">256L</span>L] ^ a1[v31 &gt;&gt; <span class="number">24</span>] ^ a1[v31 + <span class="number">768L</span>L];</span><br><span class="line">  v34 = a1[BYTE2(v32) + <span class="number">512L</span>L] ^ a1[(v32 &gt;&gt; <span class="number">24</span>) + <span class="number">256L</span>L] ^ a1[v32] ^ a1[BYTE1(v32) + <span class="number">768L</span>L];</span><br><span class="line">  v35 = __ROR4__((v34 + v33 + a1[<span class="number">1046</span>]) ^ v27, <span class="number">1</span>);</span><br><span class="line">  v36 = (v33 + <span class="number">2</span> * v34 + a1[<span class="number">1047</span>]) ^ __ROL4__(v28, <span class="number">1</span>);</span><br><span class="line">  v37 = a1[BYTE1(v35) + <span class="number">512L</span>L] ^ a1[BYTE2(v35) + <span class="number">256L</span>L] ^ a1[v35 &gt;&gt; <span class="number">24</span>] ^ a1[v35 + <span class="number">768L</span>L];</span><br><span class="line">  v38 = a1[BYTE2(v36) + <span class="number">512L</span>L] ^ a1[(v36 &gt;&gt; <span class="number">24</span>) + <span class="number">256L</span>L] ^ a1[v36] ^ a1[BYTE1(v36) + <span class="number">768L</span>L];</span><br><span class="line">  v39 = __ROR4__((v38 + v37 + a1[<span class="number">1048</span>]) ^ v31, <span class="number">1</span>);</span><br><span class="line">  v40 = (v37 + <span class="number">2</span> * v38 + a1[<span class="number">1049</span>]) ^ __ROL4__(v32, <span class="number">1</span>);</span><br><span class="line">  v41 = a1[BYTE1(v39) + <span class="number">512L</span>L] ^ a1[BYTE2(v39) + <span class="number">256L</span>L] ^ a1[v39 &gt;&gt; <span class="number">24</span>] ^ a1[v39 + <span class="number">768L</span>L];</span><br><span class="line">  v42 = a1[BYTE2(v40) + <span class="number">512L</span>L] ^ a1[(v40 &gt;&gt; <span class="number">24</span>) + <span class="number">256L</span>L] ^ a1[v40] ^ a1[BYTE1(v40) + <span class="number">768L</span>L];</span><br><span class="line">  v43 = __ROR4__((v42 + v41 + a1[<span class="number">1050</span>]) ^ v35, <span class="number">1</span>);</span><br><span class="line">  v44 = (v41 + <span class="number">2</span> * v42 + a1[<span class="number">1051</span>]) ^ __ROL4__(v36, <span class="number">1</span>);</span><br><span class="line">  v45 = a1[BYTE1(v43) + <span class="number">512L</span>L] ^ a1[BYTE2(v43) + <span class="number">256L</span>L] ^ a1[v43 &gt;&gt; <span class="number">24</span>] ^ a1[v43 + <span class="number">768L</span>L];</span><br><span class="line">  v46 = a1[BYTE2(v44) + <span class="number">512L</span>L] ^ a1[(v44 &gt;&gt; <span class="number">24</span>) + <span class="number">256L</span>L] ^ a1[v44] ^ a1[BYTE1(v44) + <span class="number">768L</span>L];</span><br><span class="line">  v47 = __ROR4__((v46 + v45 + a1[<span class="number">1052</span>]) ^ v39, <span class="number">1</span>);</span><br><span class="line">  v48 = (v45 + <span class="number">2</span> * v46 + a1[<span class="number">1053</span>]) ^ __ROL4__(v40, <span class="number">1</span>);</span><br><span class="line">  v49 = a1[BYTE1(v47) + <span class="number">512L</span>L] ^ a1[BYTE2(v47) + <span class="number">256L</span>L] ^ a1[v47 &gt;&gt; <span class="number">24</span>] ^ a1[v47 + <span class="number">768L</span>L];</span><br><span class="line">  v50 = a1[BYTE2(v48) + <span class="number">512L</span>L] ^ a1[(v48 &gt;&gt; <span class="number">24</span>) + <span class="number">256L</span>L] ^ a1[v48] ^ a1[BYTE1(v48) + <span class="number">768L</span>L];</span><br><span class="line">  v51 = __ROR4__((v50 + v49 + a1[<span class="number">1054</span>]) ^ v43, <span class="number">1</span>);</span><br><span class="line">  v52 = (v49 + <span class="number">2</span> * v50 + a1[<span class="number">1055</span>]) ^ __ROL4__(v44, <span class="number">1</span>);</span><br><span class="line">  v53 = a1[BYTE1(v51) + <span class="number">512L</span>L] ^ a1[BYTE2(v51) + <span class="number">256L</span>L] ^ a1[v51 &gt;&gt; <span class="number">24</span>] ^ a1[v51 + <span class="number">768L</span>L];</span><br><span class="line">  v54 = a1[BYTE2(v52) + <span class="number">512L</span>L] ^ a1[(v52 &gt;&gt; <span class="number">24</span>) + <span class="number">256L</span>L] ^ a1[v52] ^ a1[BYTE1(v52) + <span class="number">768L</span>L];</span><br><span class="line">  v55 = __ROR4__((v54 + v53 + a1[<span class="number">1056</span>]) ^ v47, <span class="number">1</span>);</span><br><span class="line">  v56 = (v53 + <span class="number">2</span> * v54 + a1[<span class="number">1057</span>]) ^ __ROL4__(v48, <span class="number">1</span>);</span><br><span class="line">  v57 = a1[BYTE1(v55) + <span class="number">512L</span>L] ^ a1[BYTE2(v55) + <span class="number">256L</span>L] ^ a1[v55 &gt;&gt; <span class="number">24</span>] ^ a1[v55 + <span class="number">768L</span>L];</span><br><span class="line">  v58 = a1[BYTE2(v56) + <span class="number">512L</span>L] ^ a1[(v56 &gt;&gt; <span class="number">24</span>) + <span class="number">256L</span>L] ^ a1[v56] ^ a1[BYTE1(v56) + <span class="number">768L</span>L];</span><br><span class="line">  v59 = __ROR4__((v58 + v57 + a1[<span class="number">1058</span>]) ^ v51, <span class="number">1</span>);</span><br><span class="line">  v60 = (v57 + <span class="number">2</span> * v58 + a1[<span class="number">1059</span>]) ^ __ROL4__(v52, <span class="number">1</span>);</span><br><span class="line">  v61 = a1[BYTE1(v59) + <span class="number">512L</span>L] ^ a1[BYTE2(v59) + <span class="number">256L</span>L] ^ a1[v59 &gt;&gt; <span class="number">24</span>] ^ a1[v59 + <span class="number">768L</span>L];</span><br><span class="line">  v62 = a1[BYTE2(v60) + <span class="number">512L</span>L] ^ a1[(v60 &gt;&gt; <span class="number">24</span>) + <span class="number">256L</span>L] ^ a1[v60] ^ a1[BYTE1(v60) + <span class="number">768L</span>L];</span><br><span class="line">  v63 = __ROR4__((v62 + v61 + a1[<span class="number">1060</span>]) ^ v55, <span class="number">1</span>);</span><br><span class="line">  v64 = (v61 + <span class="number">2</span> * v62 + a1[<span class="number">1061</span>]) ^ __ROL4__(v56, <span class="number">1</span>);</span><br><span class="line">  v65 = a1[BYTE1(v63) + <span class="number">512L</span>L] ^ a1[BYTE2(v63) + <span class="number">256L</span>L] ^ a1[v63 &gt;&gt; <span class="number">24</span>] ^ a1[v63 + <span class="number">768L</span>L];</span><br><span class="line">  v66 = a1[BYTE2(v64) + <span class="number">512L</span>L] ^ a1[(v64 &gt;&gt; <span class="number">24</span>) + <span class="number">256L</span>L] ^ a1[v64] ^ a1[BYTE1(v64) + <span class="number">768L</span>L];</span><br><span class="line">  v67 = a1[<span class="number">1028</span>] ^ v63;</span><br><span class="line">  v68 = a1[<span class="number">1029</span>] ^ v64;</span><br><span class="line">  v69 = a1[<span class="number">1030</span>] ^ __ROR4__((v66 + v65 + a1[<span class="number">1062</span>]) ^ v59, <span class="number">1</span>);</span><br><span class="line">  v70 = a1[<span class="number">1031</span>] ^ (v65 + <span class="number">2</span> * v66 + a1[<span class="number">1063</span>]) ^ __ROL4__(v60, <span class="number">1</span>);</span><br><span class="line">  *a3 = v67;</span><br><span class="line">  *(a3 + <span class="number">1</span>) = *(&amp;v67 + <span class="number">1</span>);</span><br><span class="line">  *(a3 + <span class="number">3</span>) = HIBYTE(v67);</span><br><span class="line">  *(a3 + <span class="number">4</span>) = v68;</span><br><span class="line">  *(a3 + <span class="number">8</span>) = v69;</span><br><span class="line">  *(a3 + <span class="number">12</span>) = v70;</span><br><span class="line">  *(a3 + <span class="number">14</span>) = BYTE2(v70);</span><br><span class="line">  result = a3 + <span class="number">15</span>;</span><br><span class="line">  *(a3 + <span class="number">15</span>) = HIBYTE(v70);</span><br><span class="line">  <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>只需要下断点然后将表dump出来就可以了</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">fp = open(<span class="string">"C:\\Users\\0xEASONs\\Desktop\\byte.txt"</span>, <span class="string">"w"</span>)</span><br><span class="line">add = <span class="number">0x7FFE5D82BCC0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1068</span>):</span><br><span class="line">    fp.write(<span class="string">"%s, "</span>%(Dword(add+i*<span class="number">4</span>)))</span><br><span class="line">fp.close()</span><br><span class="line">print(<span class="string">"done"</span>)</span><br></pre></td></tr></table></figure><p>然后直接逆加密函数就可以了  </p><h1 id="程序逻辑"><a href="#程序逻辑" class="headerlink" title="程序逻辑"></a>程序逻辑</h1><p>ida 翻译的加密函数的伪代码有问题，看汇编可以看出来，正确的代码如下</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">v3 = (input[<span class="number">0</span>]|input[<span class="number">1</span>]&lt;&lt;<span class="number">8</span>|input[<span class="number">2</span>]&lt;&lt;<span class="number">16</span>|input[<span class="number">3</span>]&lt;&lt;<span class="number">24</span>)^table[<span class="number">1024</span>];</span><br><span class="line">v4 = (input[<span class="number">4</span>]|input[<span class="number">5</span>]&lt;&lt;<span class="number">8</span>|input[<span class="number">6</span>]&lt;&lt;<span class="number">16</span>|input[<span class="number">7</span>]&lt;&lt;<span class="number">24</span>)^table[<span class="number">1025</span>];</span><br><span class="line">v7 = (input[<span class="number">8</span>]|input[<span class="number">9</span>]&lt;&lt;<span class="number">8</span>|input[<span class="number">10</span>]&lt;&lt;<span class="number">16</span>|input[<span class="number">11</span>]&lt;&lt;<span class="number">24</span>)^table[<span class="number">1026</span>];</span><br><span class="line">v8 = (input[<span class="number">12</span>]|input[<span class="number">13</span>]&lt;&lt;<span class="number">8</span>|input[<span class="number">14</span>]&lt;&lt;<span class="number">16</span>|input[<span class="number">15</span>]&lt;&lt;<span class="number">24</span>)^table[<span class="number">1027</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">/**********************************************************************************/</span></span><br><span class="line">v5 = table[BYTE3(v3)]^table[BYTE2(v3)+<span class="number">256</span>]^table[BYTE1(v3)+<span class="number">512</span>]^table[BYTE0(v3)+<span class="number">768</span>];</span><br><span class="line">v6 = table[BYTE0(v4)]^table[BYTE3(v4)+<span class="number">256</span>]^table[BYTE2(v4)+<span class="number">512</span>]^table[BYTE1(v4)+<span class="number">768</span>];</span><br><span class="line">v7 ^= (table[<span class="number">1032</span>]+v5+v6);</span><br><span class="line">ROR(v7,<span class="number">1</span>);</span><br><span class="line">ROL(v8,<span class="number">1</span>);</span><br><span class="line">v8 ^= (table[<span class="number">1033</span>]+<span class="number">2</span>*v6+v5);</span><br><span class="line"></span><br><span class="line">v5 = table[BYTE3(v7)]^table[BYTE2(v7)+<span class="number">256</span>]^table[BYTE1(v7)+<span class="number">512</span>]^table[BYTE0(v7)+<span class="number">768</span>];</span><br><span class="line">v6 = table[BYTE0(v8)]^table[BYTE3(v8)+<span class="number">256</span>]^table[BYTE2(v8)+<span class="number">512</span>]^table[BYTE1(v7)+<span class="number">768</span>];</span><br><span class="line">v3 ^= (table[<span class="number">1034</span>]+v5+v6);</span><br><span class="line">ROR(v3,<span class="number">1</span>);</span><br><span class="line">ROL(v4,<span class="number">1</span>);</span><br><span class="line">v4 ^= (table[<span class="number">1035</span>]+<span class="number">2</span>*v6+v5);</span><br><span class="line"><span class="comment">/***********************************************************************************/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/***********************************************************************************/</span></span><br><span class="line">v5 = table[BYTE3(v3)]^table[BYTE2(v3)+<span class="number">256</span>]^table[BYTE1(v3)+<span class="number">512</span>]^table[BYTE0(v3)+<span class="number">768</span>];</span><br><span class="line">v6 = table[BYTE0(v4)]^table[BYTE3(v4)+<span class="number">256</span>]^table[BYTE2(v4)+<span class="number">512</span>]^table[BYTE1(v4)+<span class="number">768</span>];</span><br><span class="line">v7 ^= (table[<span class="number">1036</span>]+v5+v6);</span><br><span class="line">ROR(v7,<span class="number">1</span>);</span><br><span class="line">ROL(v8,<span class="number">1</span>);</span><br><span class="line">v8 ^= (table[<span class="number">1037</span>]+<span class="number">2</span>*v6+v5);</span><br><span class="line"></span><br><span class="line">v5 = table[BYTE3(v7)]^table[BYTE2(v7)+<span class="number">256</span>]^table[BYTE1(v7)+<span class="number">512</span>]^table[BYTE0(v7)+<span class="number">768</span>];</span><br><span class="line">v6 = table[BYTE0(v8)]^table[BYTE3(v8)+<span class="number">256</span>]^table[BYTE2(v8)+<span class="number">512</span>]^table[BYTE1(v7)+<span class="number">768</span>];</span><br><span class="line">v3 ^= (table[<span class="number">1038</span>]+v5+v6);</span><br><span class="line">ROR(v3,<span class="number">1</span>);</span><br><span class="line">ROL(v4,<span class="number">1</span>);</span><br><span class="line">v4 ^= (table[<span class="number">1039</span>]+<span class="number">2</span>*v6+v5);</span><br><span class="line"><span class="comment">/**********************************************************************************/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/****table[1040]~table[1063]*******/</span></span><br><span class="line"></span><br><span class="line">v7 ^= table[<span class="number">1028</span>];</span><br><span class="line">v8 ^= table[<span class="number">1029</span>];</span><br><span class="line">v3 ^= table[<span class="number">1030</span>];</span><br><span class="line">v4 ^= table[<span class="number">1031</span>];</span><br><span class="line"></span><br><span class="line">dest[<span class="number">0</span>] = v7;</span><br><span class="line">dest[<span class="number">1</span>] = v8;</span><br><span class="line">dest[<span class="number">2</span>] = v3;</span><br><span class="line">dest[<span class="number">3</span>] = v4;</span><br></pre></td></tr></table></figure><p>用C写程序验证</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">unsigned</span> <span class="keyword">int</span> <span class="title">ROL</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">int</span> *i)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">*i = *i&lt;&lt;<span class="number">1</span>|(*i&gt;&gt;<span class="number">31</span>);</span><br><span class="line"><span class="keyword">return</span> *i;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">unsigned</span> <span class="keyword">int</span> <span class="title">ROR</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">int</span> *i)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">*i = *i&gt;&gt;<span class="number">1</span>|((*i&amp;<span class="number">1</span>)&lt;&lt;<span class="number">31</span>);</span><br><span class="line"><span class="keyword">return</span> *i;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">unsigned</span> <span class="keyword">int</span> <span class="title">BYTE0</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">int</span> i)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> i&amp;<span class="number">0xff</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">unsigned</span> <span class="keyword">int</span> <span class="title">BYTE1</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">int</span> i)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> (i&gt;&gt;<span class="number">8</span>)&amp;<span class="number">0xff</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">unsigned</span> <span class="keyword">int</span> <span class="title">BYTE2</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">int</span> i)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> (i&gt;&gt;<span class="number">16</span>)&amp;<span class="number">0xff</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">unsigned</span> <span class="keyword">int</span> <span class="title">BYTE3</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">int</span> i)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> (i&gt;&gt;<span class="number">24</span>)&amp;<span class="number">0xff</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">int</span> table[] = &#123;<span class="number">380087468</span>, <span class="number">1203253039</span>, <span class="number">2922473062</span>, <span class="number">2314273025</span>, <span class="number">2584233285</span>, <span class="number">4254618194</span>, <span class="number">895667404</span>, <span class="number">1071543669</span>, <span class="number">1459084508</span>, <span class="number">1966259388</span>, <span class="number">1337073953</span>, <span class="number">2472125604</span>, <span class="number">65886296</span>, <span class="number">3096890058</span>, <span class="number">1030275778</span>, <span class="number">3798867743</span>, <span class="number">4201647373</span>, <span class="number">2942994825</span>, <span class="number">4013619705</span>, <span class="number">1737496343</span>, <span class="number">3077872539</span>, <span class="number">67438343</span>, <span class="number">2808121223</span>, <span class="number">3985395278</span>, <span class="number">1146451831</span>, <span class="number">3973554593</span>, <span class="number">3474112961</span>, <span class="number">4120009820</span>, <span class="number">3122691453</span>, <span class="number">1403597876</span>, <span class="number">536235341</span>, <span class="number">2292903662</span>, <span class="number">3304429463</span>, <span class="number">180140473</span>, <span class="number">2760761311</span>, <span class="number">1764338089</span>, <span class="number">4106859443</span>, <span class="number">1548445029</span>, <span class="number">3730649650</span>, <span class="number">199710294</span>, <span class="number">45529015</span>, <span class="number">3056563316</span>, <span class="number">4079086828</span>, <span class="number">1994384612</span>, <span class="number">3999340054</span>, <span class="number">714375553</span>, <span class="number">3273509064</span>, <span class="number">1872369945</span>, <span class="number">247054014</span>, <span class="number">3571551115</span>, <span class="number">4187837781</span>, <span class="number">1670713360</span>, <span class="number">1427801220</span>, <span class="number">3117229349</span>, <span class="number">3316545656</span>, <span class="number">132669279</span>, <span class="number">2384027230</span>, <span class="number">915379348</span>, <span class="number">424017405</span>, <span class="number">3878746103</span>, <span class="number">3212744085</span>, <span class="number">3371867806</span>, <span class="number">781289094</span>, <span class="number">1323945678</span>, <span class="number">876159779</span>, <span class="number">4173773498</span>, <span class="number">2100867762</span>, <span class="number">943073834</span>, <span class="number">2248017928</span>, <span class="number">4039947444</span>, <span class="number">1136470056</span>, <span class="number">1346661484</span>, <span class="number">3393988905</span>, <span class="number">3029976003</span>, <span class="number">3918088521</span>, <span class="number">3607942099</span>, <span class="number">3504639116</span>, <span class="number">90106088</span>, <span class="number">828885963</span>, <span class="number">1819754817</span>, <span class="number">404623890</span>, <span class="number">1158584472</span>, <span class="number">4146392043</span>, <span class="number">3741769181</span>, <span class="number">2648709658</span>, <span class="number">3145437842</span>, <span class="number">3460902446</span>, <span class="number">3049401388</span>, <span class="number">1526257109</span>, <span class="number">1292146326</span>, <span class="number">490797818</span>, <span class="number">3450107510</span>, <span class="number">1805590046</span>, <span class="number">2158026976</span>, <span class="number">2381579782</span>, <span class="number">3652545901</span>, <span class="number">2517060684</span>, <span class="number">2515145748</span>, <span class="number">2788911208</span>, <span class="number">1391647707</span>, <span class="number">1685933903</span>, <span class="number">2449623883</span>, <span class="number">335103044</span>, <span class="number">3585762404</span>, <span class="number">2605951658</span>, <span class="number">3839733679</span>, <span class="number">3326287904</span>, <span class="number">312650667</span>, <span class="number">2673257901</span>, <span class="number">3010567324</span>, <span class="number">3184009762</span>, <span class="number">2741338240</span>, <span class="number">1831644846</span>, <span class="number">606945087</span>, <span class="number">809247780</span>, <span class="number">3528604475</span>, <span class="number">1858205430</span>, <span class="number">2180714255</span>, <span class="number">2855559521</span>, <span class="number">336665371</span>, <span class="number">1009986861</span>, <span class="number">1657733119</span>, <span class="number">2182502231</span>, <span class="number">2849585465</span>, <span class="number">290452467</span>, <span class="number">981507485</span>, <span class="number">2539430819</span>, <span class="number">1886147668</span>, <span class="number">2782277680</span>, <span class="number">1604730173</span>, <span class="number">1224839569</span>, <span class="number">0</span>, <span class="number">1481532002</span>, <span class="number">1953059667</span>, <span class="number">2629563893</span>, <span class="number">735014510</span>, <span class="number">3811963120</span>, <span class="number">2360338921</span>, <span class="number">1926947811</span>, <span class="number">936672123</span>, <span class="number">2714974007</span>, <span class="number">2202908856</span>, <span class="number">1937837068</span>, <span class="number">471536917</span>, <span class="number">695851481</span>, <span class="number">2894582225</span>, <span class="number">3663213877</span>, <span class="number">1697030304</span>, <span class="number">1561365130</span>, <span class="number">1257032137</span>, <span class="number">2827146966</span>, <span class="number">1593692882</span>, <span class="number">3719326314</span>, <span class="number">3163803085</span>, <span class="number">269753372</span>, <span class="number">2982619947</span>, <span class="number">1270294054</span>, <span class="number">673330742</span>, <span class="number">1048943258</span>, <span class="number">3190127226</span>, <span class="number">2249412688</span>, <span class="number">112439472</span>, <span class="number">628543696</span>, <span class="number">3946839806</span>, <span class="number">2403512753</span>, <span class="number">3906119334</span>, <span class="number">2963064004</span>, <span class="number">266490193</span>, <span class="number">1281325433</span>, <span class="number">1899477947</span>, <span class="number">1618495560</span>, <span class="number">763158238</span>, <span class="number">4068082435</span>, <span class="number">1079013488</span>, <span class="number">22802415</span>, <span class="number">202311945</span>, <span class="number">2140013829</span>, <span class="number">580816783</span>, <span class="number">847942547</span>, <span class="number">2005142283</span>, <span class="number">4240686525</span>, <span class="number">402408259</span>, <span class="number">3596041276</span>, <span class="number">3850780736</span>, <span class="number">2060512749</span>, <span class="number">1629726631</span>, <span class="number">3706422661</span>, <span class="number">869366908</span>, <span class="number">801794409</span>, <span class="number">4213957346</span>, <span class="number">561240023</span>, <span class="number">2019973722</span>, <span class="number">156361185</span>, <span class="number">223667942</span>, <span class="number">2494692347</span>, <span class="number">447260069</span>, <span class="number">740766001</span>, <span class="number">2317113689</span>, <span class="number">647727240</span>, <span class="number">3932426513</span>, <span class="number">2127948522</span>, <span class="number">468929098</span>, <span class="number">1004237426</span>, <span class="number">514695842</span>, <span class="number">2722000751</span>, <span class="number">4053228379</span>, <span class="number">1122420679</span>, <span class="number">1413573483</span>, <span class="number">1724643576</span>, <span class="number">2427780348</span>, <span class="number">4281263589</span>, <span class="number">1791291889</span>, <span class="number">3259377447</span>, <span class="number">2693322968</span>, <span class="number">3382800753</span>, <span class="number">3439303065</span>, <span class="number">2086886749</span>, <span class="number">1494584717</span>, <span class="number">3865778200</span>, <span class="number">963495365</span>, <span class="number">600137824</span>, <span class="number">2225465319</span>, <span class="number">2876214926</span>, <span class="number">3783477063</span>, <span class="number">1470903091</span>, <span class="number">2989126515</span>, <span class="number">2336732854</span>, <span class="number">4269083146</span>, <span class="number">539506744</span>, <span class="number">3407333062</span>, <span class="number">2916892222</span>, <span class="number">1361019779</span>, <span class="number">3772295336</span>, <span class="number">4135519236</span>, <span class="number">2034087349</span>, <span class="number">357233908</span>, <span class="number">1752319558</span>, <span class="number">2581929245</span>, <span class="number">2072707586</span>, <span class="number">3340292047</span>, <span class="number">1189331136</span>, <span class="number">1213890174</span>, <span class="number">2562650866</span>, <span class="number">3639509634</span>, <span class="number">1091280799</span>, <span class="number">2651669058</span>, <span class="number">3236991120</span>, <span class="number">134876686</span>, <span class="number">3674462938</span>, <span class="number">666920807</span>, <span class="number">1537423930</span>, <span class="number">3540636884</span>, <span class="number">2269691839</span>, <span class="number">3249241983</span>, <span class="number">2448364307</span>, <span class="number">3518980963</span>, <span class="number">2610656439</span>, <span class="number">825304876</span>, <span class="number">3065399179</span>, <span class="number">2492763958</span>, <span class="number">2004309316</span>, <span class="number">690572490</span>, <span class="number">2122209864</span>, <span class="number">3991785594</span>, <span class="number">1145370899</span>, <span class="number">1499012234</span>, <span class="number">2374833497</span>, <span class="number">3840204662</span>, <span class="number">117900548</span>, <span class="number">2644344890</span>, <span class="number">3267520573</span>, <span class="number">640071499</span>, <span class="number">421108335</span>, <span class="number">3048553849</span>, <span class="number">2795950824</span>, <span class="number">2358043856</span>, <span class="number">3722249951</span>, <span class="number">1347425158</span>, <span class="number">84250239</span>, <span class="number">1734852647</span>, <span class="number">218984698</span>, <span class="number">3604382376</span>, <span class="number">3941258622</span>, <span class="number">2913818271</span>, <span class="number">1397975412</span>, <span class="number">2105352378</span>, <span class="number">1768540719</span>, <span class="number">1970658879</span>, <span class="number">370565614</span>, <span class="number">3688624722</span>, <span class="number">3503322661</span>, <span class="number">4278075371</span>, <span class="number">2560101957</span>, <span class="number">3183330300</span>, <span class="number">3486456007</span>, <span class="number">3216984199</span>, <span class="number">2728570142</span>, <span class="number">67403766</span>, <span class="number">589510964</span>, <span class="number">1246425883</span>, <span class="number">2459073467</span>, <span class="number">269522275</span>, <span class="number">2745392279</span>, <span class="number">2762234259</span>, <span class="number">606354480</span>, <span class="number">4160172263</span>, <span class="number">1313770733</span>, <span class="number">134807173</span>, <span class="number">1616954659</span>, <span class="number">1027450463</span>, <span class="number">1566401404</span>, <span class="number">1785376989</span>, <span class="number">1633760426</span>, <span class="number">1936927410</span>, <span class="number">3823360626</span>, <span class="number">724289457</span>, <span class="number">960092585</span>, <span class="number">3890718084</span>, <span class="number">2442199369</span>, <span class="number">943204384</span>, <span class="number">3166450293</span>, <span class="number">3452801980</span>, <span class="number">4261233945</span>, <span class="number">1448535819</span>, <span class="number">4193860335</span>, <span class="number">2998024317</span>, <span class="number">1701137244</span>, <span class="number">2408554018</span>, <span class="number">1229556201</span>, <span class="number">1532729329</span>, <span class="number">1381144829</span>, <span class="number">741130933</span>, <span class="number">2256965934</span>, <span class="number">3402274488</span>, <span class="number">185304183</span>, <span class="number">2088554803</span>, <span class="number">842161630</span>, <span class="number">993743570</span>, <span class="number">4210704413</span>, <span class="number">1549570805</span>, <span class="number">0</span>, <span class="number">1600120839</span>, <span class="number">3419105073</span>, <span class="number">3621221153</span>, <span class="number">707409464</span>, <span class="number">2021174981</span>, <span class="number">3435946549</span>, <span class="number">1819034704</span>, <span class="number">2880152082</span>, <span class="number">1094809452</span>, <span class="number">976921435</span>, <span class="number">3806473211</span>, <span class="number">3705468758</span>, <span class="number">909517352</span>, <span class="number">2054825406</span>, <span class="number">1650609752</span>, <span class="number">4092808977</span>, <span class="number">4008618632</span>, <span class="number">2139073473</span>, <span class="number">3233866566</span>, <span class="number">252705665</span>, <span class="number">2627498419</span>, <span class="number">404253670</span>, <span class="number">1920129851</span>, <span class="number">1667481553</span>, <span class="number">1515873912</span>, <span class="number">2896996118</span>, <span class="number">926405537</span>, <span class="number">3031747824</span>, <span class="number">2711738348</span>, <span class="number">454758676</span>, <span class="number">3907542533</span>, <span class="number">774785486</span>, <span class="number">2324303965</span>, <span class="number">2307484335</span>, <span class="number">1162152090</span>, <span class="number">1263207058</span>, <span class="number">3537042782</span>, <span class="number">2037997388</span>, <span class="number">2425417920</span>, <span class="number">33721211</span>, <span class="number">101119117</span>, <span class="number">50559730</span>, <span class="number">2206408529</span>, <span class="number">505323371</span>, <span class="number">2577006540</span>, <span class="number">3149608817</span>, <span class="number">3351766594</span>, <span class="number">320073617</span>, <span class="number">2543318468</span>, <span class="number">859024471</span>, <span class="number">2155898275</span>, <span class="number">2947538404</span>, <span class="number">2678000449</span>, <span class="number">1802191188</span>, <span class="number">16904585</span>, <span class="number">2189618904</span>, <span class="number">2341200340</span>, <span class="number">303177240</span>, <span class="number">892688602</span>, <span class="number">4059153514</span>, <span class="number">235801096</span>, <span class="number">437969053</span>, <span class="number">2779097114</span>, <span class="number">2071712823</span>, <span class="number">1077970661</span>, <span class="number">2930650221</span>, <span class="number">4042274275</span>, <span class="number">3334870987</span>, <span class="number">1431674361</span>, <span class="number">3772817536</span>, <span class="number">3250655951</span>, <span class="number">2509602495</span>, <span class="number">353704732</span>, <span class="number">1364320783</span>, <span class="number">2863289243</span>, <span class="number">2829637856</span>, <span class="number">2391699371</span>, <span class="number">2526413901</span>, <span class="number">3587569754</span>, <span class="number">4244419728</span>, <span class="number">1835906521</span>, <span class="number">3755969956</span>, <span class="number">3739122733</span>, <span class="number">1010587606</span>, <span class="number">2593817918</span>, <span class="number">2812748641</span>, <span class="number">151588620</span>, <span class="number">3553823959</span>, <span class="number">656885442</span>, <span class="number">1465325186</span>, <span class="number">623234489</span>, <span class="number">387420263</span>, <span class="number">1717973422</span>, <span class="number">1212708960</span>, <span class="number">3099086211</span>, <span class="number">1044307117</span>, <span class="number">202146163</span>, <span class="number">3132802808</span>, <span class="number">2981184143</span>, <span class="number">3115957258</span>, <span class="number">1414818928</span>, <span class="number">1111625118</span>, <span class="number">555856463</span>, <span class="number">2172752938</span>, <span class="number">3789639945</span>, <span class="number">2223250005</span>, <span class="number">4109650453</span>, <span class="number">3082270210</span>, <span class="number">3924406156</span>, <span class="number">3014904308</span>, <span class="number">1886408768</span>, <span class="number">3958056183</span>, <span class="number">3654908201</span>, <span class="number">4126522268</span>, <span class="number">2475919922</span>, <span class="number">1482222851</span>, <span class="number">4025441025</span>, <span class="number">757936956</span>, <span class="number">1195869153</span>, <span class="number">4143366510</span>, <span class="number">4294954594</span>, <span class="number">1684323029</span>, <span class="number">168457726</span>, <span class="number">1987486925</span>, <span class="number">3469666638</span>, <span class="number">2290653990</span>, <span class="number">471602192</span>, <span class="number">1179021928</span>, <span class="number">1280051094</span>, <span class="number">4227576212</span>, <span class="number">2273796263</span>, <span class="number">1330609508</span>, <span class="number">808507045</span>, <span class="number">3200170254</span>, <span class="number">1953771446</span>, <span class="number">791656519</span>, <span class="number">1583225230</span>, <span class="number">1061104932</span>, <span class="number">3385453642</span>, <span class="number">3520169900</span>, <span class="number">3638069408</span>, <span class="number">3974898163</span>, <span class="number">3873854477</span>, <span class="number">673758531</span>, <span class="number">1852755755</span>, <span class="number">488498585</span>, <span class="number">336915093</span>, <span class="number">522153698</span>, <span class="number">572704957</span>, <span class="number">2846435689</span>, <span class="number">1751661478</span>, <span class="number">4177054566</span>, <span class="number">3318050105</span>, <span class="number">875866451</span>, <span class="number">3284375988</span>, <span class="number">538985414</span>, <span class="number">2964370182</span>, <span class="number">4075994776</span>, <span class="number">3368558019</span>, <span class="number">1296954911</span>, <span class="number">3671720923</span>, <span class="number">1903272393</span>, <span class="number">3857002239</span>, <span class="number">3570665939</span>, <span class="number">3301219504</span>, <span class="number">2661219016</span>, <span class="number">1869561506</span>, <span class="number">1128528919</span>, <span class="number">2240146396</span>, <span class="number">2694850149</span>, <span class="number">286352618</span>, <span class="number">3821029091</span>, <span class="number">1619502944</span>, <span class="number">3834433764</span>, <span class="number">796177967</span>, <span class="number">1349533776</span>, <span class="number">4288269567</span>, <span class="number">76958980</span>, <span class="number">3644434905</span>, <span class="number">2195105922</span>, <span class="number">1479924312</span>, <span class="number">1518225498</span>, <span class="number">2959793584</span>, <span class="number">1796793963</span>, <span class="number">2539385239</span>, <span class="number">2708588961</span>, <span class="number">3480103887</span>, <span class="number">3927217642</span>, <span class="number">3072740279</span>, <span class="number">1906094961</span>, <span class="number">3981968365</span>, <span class="number">3922611945</span>, <span class="number">4132249590</span>, <span class="number">3472843470</span>, <span class="number">821552944</span>, <span class="number">2609391259</span>, <span class="number">828812849</span>, <span class="number">545110560</span>, <span class="number">1757560168</span>, <span class="number">908736566</span>, <span class="number">2441490065</span>, <span class="number">1841641837</span>, <span class="number">1702929253</span>, <span class="number">3311412165</span>, <span class="number">2455565714</span>, <span class="number">4094070260</span>, <span class="number">1667071075</span>, <span class="number">3090106296</span>, <span class="number">951221560</span>, <span class="number">2382725006</span>, <span class="number">2252400006</span>, <span class="number">2829392552</span>, <span class="number">416270104</span>, <span class="number">2986054833</span>, <span class="number">2838778793</span>, <span class="number">674766888</span>, <span class="number">3534153938</span>, <span class="number">3257710018</span>, <span class="number">3672339162</span>, <span class="number">2927150510</span>, <span class="number">3681696731</span>, <span class="number">3043875253</span>, <span class="number">4001552622</span>, <span class="number">989458234</span>, <span class="number">1601784927</span>, <span class="number">2729120418</span>, <span class="number">1118932802</span>, <span class="number">851211570</span>, <span class="number">2241478277</span>, <span class="number">4158412535</span>, <span class="number">786825006</span>, <span class="number">1433879637</span>, <span class="number">2044275065</span>, <span class="number">2278665351</span>, <span class="number">2699067552</span>, <span class="number">2479733907</span>, <span class="number">3173532605</span>, <span class="number">1592264030</span>, <span class="number">2529867926</span>, <span class="number">168691722</span>, <span class="number">3422054091</span>, <span class="number">2202526083</span>, <span class="number">4212097531</span>, <span class="number">759112749</span>, <span class="number">1097552961</span>, <span class="number">4181988345</span>, <span class="number">4081720307</span>, <span class="number">1787408234</span>, <span class="number">1542390107</span>, <span class="number">2102355069</span>, <span class="number">4036018416</span>, <span class="number">1554224988</span>, <span class="number">3384014025</span>, <span class="number">374833686</span>, <span class="number">657533991</span>, <span class="number">1341329743</span>, <span class="number">935031095</span>, <span class="number">4258422525</span>, <span class="number">2131031679</span>, <span class="number">1717205094</span>, <span class="number">3357720008</span>, <span class="number">3210990015</span>, <span class="number">3514577873</span>, <span class="number">244860174</span>, <span class="number">1657550178</span>, <span class="number">337383444</span>, <span class="number">1628892769</span>, <span class="number">2889045932</span>, <span class="number">648045862</span>, <span class="number">3843922405</span>, <span class="number">1373702481</span>, <span class="number">1009004604</span>, <span class="number">215209740</span>, <span class="number">398904087</span>, <span class="number">1090133312</span>, <span class="number">1817473132</span>, <span class="number">712225322</span>, <span class="number">3617713367</span>, <span class="number">1741369703</span>, <span class="number">2500879253</span>, <span class="number">3127170490</span>, <span class="number">1220511560</span>, <span class="number">1177010758</span>, <span class="number">2047079034</span>, <span class="number">64674563</span>, <span class="number">1879964272</span>, <span class="number">4174732024</span>, <span class="number">2073213819</span>, <span class="number">2215344004</span>, <span class="number">1463604823</span>, <span class="number">2000776311</span>, <span class="number">277503248</span>, <span class="number">3634946264</span>, <span class="number">1264933963</span>, <span class="number">1379652178</span>, <span class="number">3564845012</span>, <span class="number">4011037167</span>, <span class="number">2738510755</span>, <span class="number">996714043</span>, <span class="number">3784037601</span>, <span class="number">958608441</span>, <span class="number">1174214981</span>, <span class="number">619444004</span>, <span class="number">2867759274</span>, <span class="number">252251151</span>, <span class="number">3166243516</span>, <span class="number">3588914901</span>, <span class="number">1678895716</span>, <span class="number">3284008131</span>, <span class="number">1503957849</span>, <span class="number">454368283</span>, <span class="number">3719292125</span>, <span class="number">749628716</span>, <span class="number">2669570975</span>, <span class="number">314691346</span>, <span class="number">26298625</span>, <span class="number">84345861</span>, <span class="number">1073670975</span>, <span class="number">1917216882</span>, <span class="number">3065447094</span>, <span class="number">2660180638</span>, <span class="number">2324902538</span>, <span class="number">628801061</span>, <span class="number">1956362100</span>, <span class="number">164942601</span>, <span class="number">3881176039</span>, <span class="number">1303937869</span>, <span class="number">2295898248</span>, <span class="number">2165076865</span>, <span class="number">38507010</span>, <span class="number">3341529543</span>, <span class="number">3972614892</span>, <span class="number">4120364277</span>, <span class="number">2417452944</span>, <span class="number">858602547</span>, <span class="number">3695095260</span>, <span class="number">1227804233</span>, <span class="number">475630108</span>, <span class="number">1563614813</span>, <span class="number">3434410188</span>, <span class="number">1424362836</span>, <span class="number">361584917</span>, <span class="number">3254152897</span>, <span class="number">138779144</span>, <span class="number">2094935420</span>, <span class="number">2579739801</span>, <span class="number">3441801677</span>, <span class="number">4043409905</span>, <span class="number">504502302</span>, <span class="number">4204710138</span>, <span class="number">1403689811</span>, <span class="number">2491493012</span>, <span class="number">2303322505</span>, <span class="number">528699679</span>, <span class="number">2380244109</span>, <span class="number">4074459890</span>, <span class="number">3014657715</span>, <span class="number">3756291807</span>, <span class="number">3227985856</span>, <span class="number">3593512406</span>, <span class="number">2555575704</span>, <span class="number">324044307</span>, <span class="number">3153435835</span>, <span class="number">736295723</span>, <span class="number">573974562</span>, <span class="number">1047503422</span>, <span class="number">3898542056</span>, <span class="number">3759840736</span>, <span class="number">878815796</span>, <span class="number">2639657373</span>, <span class="number">286987281</span>, <span class="number">1035303229</span>, <span class="number">2018009208</span>, <span class="number">2157787776</span>, <span class="number">1126221379</span>, <span class="number">425627161</span>, <span class="number">2789040038</span>, <span class="number">0</span>, <span class="number">3871818470</span>, <span class="number">1993352566</span>, <span class="number">1871620975</span>, <span class="number">2913083053</span>, <span class="number">122459655</span>, <span class="number">2408855183</span>, <span class="number">904979253</span>, <span class="number">3334142150</span>, <span class="number">1203145543</span>, <span class="number">3732226014</span>, <span class="number">2877276587</span>, <span class="number">3505224400</span>, <span class="number">194986251</span>, <span class="number">3543638483</span>, <span class="number">3796963298</span>, <span class="number">1315067982</span>, <span class="number">499696413</span>, <span class="number">1257510218</span>, <span class="number">1147949124</span>, <span class="number">3304155844</span>, <span class="number">2585358234</span>, <span class="number">115203846</span>, <span class="number">2988527538</span>, <span class="number">2759249316</span>, <span class="number">2332195723</span>, <span class="number">2813073063</span>, <span class="number">3036450996</span>, <span class="number">4261971454</span>, <span class="number">2951318703</span>, <span class="number">1767076969</span>, <span class="number">3951418603</span>, <span class="number">1943478643</span>, <span class="number">3116240569</span>, <span class="number">3395891146</span>, <span class="number">2783413413</span>, <span class="number">2630135964</span>, <span class="number">569176865</span>, <span class="number">598171939</span>, <span class="number">222469645</span>, <span class="number">2123743102</span>, <span class="number">698968361</span>, <span class="number">1963654773</span>, <span class="number">1847583342</span>, <span class="number">1454219094</span>, <span class="number">1277807180</span>, <span class="number">2353982860</span>, <span class="number">3203569854</span>, <span class="number">444880154</span>, <span class="number">4232255484</span>, <span class="number">1324174988</span>, <span class="number">426711450</span>, <span class="number">3095640141</span>, <span class="number">2059303461</span>, <span class="number">1142113529</span>, <span class="number">2345962465</span>, <span class="number">2109373728</span>, <span class="number">3517763975</span>, <span class="number">1392333464</span>, <span class="number">3832997087</span>, <span class="number">3671841283</span>, <span class="number">1517836902</span>, <span class="number">4009881435</span>, <span class="number">2744623964</span>, <span class="number">2769986984</span>, <span class="number">109905652</span>, <span class="number">2275903328</span>, <span class="number">1267878658</span>, <span class="number">117704453</span>, <span class="number">3815957466</span>, <span class="number">260116475</span>, <span class="number">3251618066</span>, <span class="number">2842274089</span>, <span class="number">1542544279</span>, <span class="number">642459319</span>, <span class="number">1167738120</span>, <span class="number">2167046548</span>, <span class="number">4001951402</span>, <span class="number">2486604943</span>, <span class="number">2800264914</span>, <span class="number">2512360830</span>, <span class="number">4095079498</span>, <span class="number">1059340077</span>, <span class="number">3696680183</span>, <span class="number">4167497931</span>, <span class="number">2554697742</span>, <span class="number">3308897645</span>, <span class="number">25756145</span>, <span class="number">3752124301</span>, <span class="number">2953228467</span>, <span class="number">2546243573</span>, <span class="number">235408906</span>, <span class="number">2393607791</span>, <span class="number">1817209924</span>, <span class="number">534912878</span>, <span class="number">3225862371</span>, <span class="number">3975408673</span>, <span class="number">1649959502</span>, <span class="number">1442403741</span>, <span class="number">510336671</span>, <span class="number">4041470005</span>, <span class="number">3727548028</span>, <span class="number">3643398521</span>, <span class="number">1872916286</span>, <span class="number">2761139289</span>, <span class="number">2067233748</span>, <span class="number">853422685</span>, <span class="number">2637864320</span>, <span class="number">4050317764</span>, <span class="number">417732715</span>, <span class="number">3104487868</span>, <span class="number">1029651878</span>, <span class="number">354161947</span>, <span class="number">861352876</span>, <span class="number">3679640562</span>, <span class="number">184420981</span>, <span class="number">2195227374</span>, <span class="number">446503648</span>, <span class="number">4070109886</span>, <span class="number">2870127522</span>, <span class="number">3485978392</span>, <span class="number">2309982570</span>, <span class="number">3554136844</span>, <span class="number">3570652169</span>, <span class="number">4220844977</span>, <span class="number">1764714954</span>, <span class="number">41616011</span>, <span class="number">1958114351</span>, <span class="number">3884246949</span>, <span class="number">3070408630</span>, <span class="number">1848340175</span>, <span class="number">1020673111</span>, <span class="number">1205946243</span>, <span class="number">2143387563</span>, <span class="number">0</span>, <span class="number">2612501364</span>, <span class="number">1612931269</span>, <span class="number">3409038183</span>, <span class="number">83231871</span>, <span class="number">1638555956</span>, <span class="number">3492139126</span>, <span class="number">3426077794</span>, <span class="number">303567390</span>, <span class="number">2158198885</span>, <span class="number">1700554059</span>, <span class="number">2401406878</span>, <span class="number">4120704443</span>, <span class="number">3299919004</span>, <span class="number">1842965941</span>, <span class="number">1359958498</span>, <span class="number">151783695</span>, <span class="number">4237360308</span>, <span class="number">1993176740</span>, <span class="number">300552548</span>, <span class="number">2912922966</span>, <span class="number">2437517569</span>, <span class="number">2428539120</span>, <span class="number">2663948026</span>, <span class="number">328274927</span>, <span class="number">3401108118</span>, <span class="number">908604962</span>, <span class="number">750070978</span>, <span class="number">1909027233</span>, <span class="number">1568431459</span>, <span class="number">1117667853</span>, <span class="number">3766542496</span>, <span class="number">3858752814</span>, <span class="number">675489981</span>, <span class="number">824979751</span>, <span class="number">2887167143</span>, <span class="number">1916498651</span>, <span class="number">4284678094</span>, <span class="number">3062609479</span>, <span class="number">1088766086</span>, <span class="number">3377121772</span>, <span class="number">3579500024</span>, <span class="number">1443583719</span>, <span class="number">1284918279</span>, <span class="number">1755736123</span>, <span class="number">3461271273</span>, <span class="number">1594318824</span>, <span class="number">2118680154</span>, <span class="number">2321386000</span>, <span class="number">3609319283</span>, <span class="number">1293897206</span>, <span class="number">816132310</span>, <span class="number">632890829</span>, <span class="number">3451702675</span>, <span class="number">3808158251</span>, <span class="number">2978984258</span>, <span class="number">2284226715</span>, <span class="number">758918451</span>, <span class="number">1051541212</span>, <span class="number">2000975701</span>, <span class="number">1941074730</span>, <span class="number">1586388505</span>, <span class="number">1559583890</span>, <span class="number">3136862918</span>, <span class="number">1400132457</span>, <span class="number">234491248</span>, <span class="number">3958893348</span>, <span class="number">2862328403</span>, <span class="number">496573925</span>, <span class="number">1730635712</span>, <span class="number">2521667076</span>, <span class="number">3144792887</span>, <span class="number">2220196890</span>, <span class="number">2026207406</span>, <span class="number">558834098</span>, <span class="number">1792895664</span>, <span class="number">3634419848</span>, <span class="number">2994582072</span>, <span class="number">3335243287</span>, <span class="number">345314538</span>, <span class="number">2629016689</span>, <span class="number">733031367</span>, <span class="number">2833295576</span>, <span class="number">3187457475</span>, <span class="number">192351108</span>, <span class="number">979057315</span>, <span class="number">2808194851</span>, <span class="number">2580322815</span>, <span class="number">2587794053</span>, <span class="number">2719916717</span>, <span class="number">1181238898</span>, <span class="number">4246338885</span>, <span class="number">1476614381</span>, <span class="number">2362477796</span>, <span class="number">208866433</span>, <span class="number">4196268608</span>, <span class="number">1214269560</span>, <span class="number">3934186197</span>, <span class="number">3918326191</span>, <span class="number">607134780</span>, <span class="number">2716639703</span>, <span class="number">92210574</span>, <span class="number">3035673804</span>, <span class="number">3019158473</span>, <span class="number">1331974013</span>, <span class="number">1800694593</span>, <span class="number">3859670612</span>, <span class="number">3213344584</span>, <span class="number">582820552</span>, <span class="number">4078039887</span>, <span class="number">2469565322</span>, <span class="number">1240025481</span>, <span class="number">1097613687</span>, <span class="number">1350979603</span>, <span class="number">2461766267</span>, <span class="number">142936318</span>, <span class="number">590619449</span>, <span class="number">1502239004</span>, <span class="number">2951000029</span>, <span class="number">1691706554</span>, <span class="number">470817812</span>, <span class="number">3283403673</span>, <span class="number">3775521105</span>, <span class="number">2245821931</span>, <span class="number">1967093214</span>, <span class="number">2083749073</span>, <span class="number">392632208</span>, <span class="number">3343042534</span>, <span class="number">877868201</span>, <span class="number">2691014694</span>, <span class="number">2371456277</span>, <span class="number">3892701278</span>, <span class="number">3529429757</span>, <span class="number">1722705457</span>, <span class="number">708323894</span>, <span class="number">1243302643</span>, <span class="number">2203157279</span>, <span class="number">903492952</span>, <span class="number">667035462</span>, <span class="number">4134467265</span>, <span class="number">549855299</span>, <span class="number">1125598204</span>, <span class="number">2926423596</span>, <span class="number">2671877899</span>, <span class="number">3044652349</span>, <span class="number">66192250</span>, <span class="number">1674666943</span>, <span class="number">3368273949</span>, <span class="number">3984256464</span>, <span class="number">4276878911</span>, <span class="number">3601389186</span>, <span class="number">967391705</span>, <span class="number">384702049</span>, <span class="number">1416647788</span>, <span class="number">1003633490</span>, <span class="number">2251196049</span>, <span class="number">454302481</span>, <span class="number">3161832498</span>, <span class="number">3258827368</span>, <span class="number">4159174448</span>, <span class="number">793194424</span>, <span class="number">1883271248</span>, <span class="number">3188637369</span>, <span class="number">2035054943</span>, <span class="number">941635624</span>, <span class="number">274927765</span>, <span class="number">933312467</span>, <span class="number">701114700</span>, <span class="number">4193253690</span>, <span class="number">3722435846</span>, <span class="number">785264201</span>, <span class="number">1468159766</span>, <span class="number">2101441538</span>, <span class="number">2121407775</span>, <span class="number">2351011400</span>, <span class="number">1239206503</span>, <span class="number">2775603746</span>, <span class="number">1658051727</span>, <span class="number">1763220485</span>, <span class="number">3128633466</span>, <span class="number">2489517536</span>, <span class="number">1109509226</span>, <span class="number">2780120899</span>, <span class="number">2210271065</span>, <span class="number">168993450</span>, <span class="number">1280063977</span>, <span class="number">2395917734</span>, <span class="number">1643377964</span>, <span class="number">2548172666</span>, <span class="number">781822302</span>, <span class="number">4024534168</span>, <span class="number">483597733</span>, <span class="number">1164617145</span>, <span class="number">906116875</span>, <span class="number">3303870925</span>, <span class="number">47891485</span>, <span class="number">3888912641</span>, <span class="number">3977574561</span>, <span class="number">2498361734</span>, <span class="number">736266143</span>, <span class="number">1701165666</span>, <span class="number">640274470</span>, <span class="number">2150938828</span>, <span class="number">556586484</span>, <span class="number">3453533497</span>, <span class="number">2416193240</span>, <span class="number">925226908</span>, <span class="number">2305559619</span>, <span class="number">2078552113</span>, <span class="number">3008654349</span>, <span class="number">4252226453</span>, <span class="number">3241595826</span>, <span class="number">182822752</span>, <span class="number">32583</span>, <span class="number">6308224</span>, <span class="number">0</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">encrypt</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">int</span> *a, <span class="keyword">unsigned</span> <span class="keyword">int</span> *b, <span class="keyword">unsigned</span> <span class="keyword">int</span> *c, <span class="keyword">unsigned</span> <span class="keyword">int</span> *d, <span class="keyword">unsigned</span> <span class="keyword">int</span> index)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">int</span> v5, v6;</span><br><span class="line"></span><br><span class="line">v5 = table[BYTE3(*a)]^table[BYTE2(*a)+<span class="number">256</span>]^table[BYTE1(*a)+<span class="number">512</span>]^table[BYTE0(*a)+<span class="number">768</span>];</span><br><span class="line">v6 = table[BYTE0(*b)]^table[BYTE3(*b)+<span class="number">256</span>]^table[BYTE2(*b)+<span class="number">512</span>]^table[BYTE1(*b)+<span class="number">768</span>];</span><br><span class="line">*c ^= (table[index]+v5+v6);</span><br><span class="line">ROR(c);</span><br><span class="line">ROL(d);</span><br><span class="line">*d ^= (table[index+<span class="number">1</span>]+<span class="number">2</span>*v6+v5);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">myread</span><span class="params">(<span class="keyword">char</span> *dest, <span class="keyword">int</span> len, FILE *fp)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">FILE *stream; <span class="comment">// [rsp+8h] [rbp-28h]</span></span><br><span class="line"><span class="keyword">int</span> i; <span class="comment">// [rsp+28h] [rbp-8h]</span></span><br><span class="line"><span class="keyword">int</span> v6; <span class="comment">// [rsp+2Ch] [rbp-4h]</span></span><br><span class="line"></span><br><span class="line">stream = fp;</span><br><span class="line"><span class="built_in">memset</span>(dest, <span class="number">0</span>, len);</span><br><span class="line"><span class="keyword">for</span> ( i = <span class="number">0</span>; len - <span class="number">1</span> &gt; i; ++i )</span><br><span class="line">&#123;</span><br><span class="line">v6 = fgetc(stream);</span><br><span class="line"><span class="keyword">if</span> ( v6 == <span class="number">-1</span> )</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">*(dest + i) = v6;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">FILE *fpr, *fpw;</span><br><span class="line"></span><br><span class="line">fpr = fopen(<span class="string">"C:\\Users\\0xEASONs\\Desktop\\flag.txt"</span>,<span class="string">"rb"</span>);</span><br><span class="line">fpw = fopen(<span class="string">"C:\\Users\\0xEASONs\\Desktop\\flag.txt_encryt"</span>,<span class="string">"wb"</span>);</span><br><span class="line"><span class="keyword">char</span> input[<span class="number">16</span>];</span><br><span class="line"><span class="keyword">char</span> dest[<span class="number">16</span>];</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">int</span> v3, v4, v7, v8, i, index;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(fpr == <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">"文件不存在"</span>);</span><br><span class="line">system(<span class="string">"pause"</span>);</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(fpw == <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">"写入失败"</span>);</span><br><span class="line">system(<span class="string">"pause"</span>);</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (myread(input,<span class="number">17</span>,fpr))</span><br><span class="line">&#123;</span><br><span class="line">v3 = (input[<span class="number">0</span>]|input[<span class="number">1</span>]&lt;&lt;<span class="number">8</span>|input[<span class="number">2</span>]&lt;&lt;<span class="number">16</span>|input[<span class="number">3</span>]&lt;&lt;<span class="number">24</span>)^table[<span class="number">1024</span>];</span><br><span class="line">v4 = (input[<span class="number">4</span>]|input[<span class="number">5</span>]&lt;&lt;<span class="number">8</span>|input[<span class="number">6</span>]&lt;&lt;<span class="number">16</span>|input[<span class="number">7</span>]&lt;&lt;<span class="number">24</span>)^table[<span class="number">1025</span>];</span><br><span class="line">v7 = (input[<span class="number">8</span>]|input[<span class="number">9</span>]&lt;&lt;<span class="number">8</span>|input[<span class="number">10</span>]&lt;&lt;<span class="number">16</span>|input[<span class="number">11</span>]&lt;&lt;<span class="number">24</span>)^table[<span class="number">1026</span>];</span><br><span class="line">v8 = (input[<span class="number">12</span>]|input[<span class="number">13</span>]&lt;&lt;<span class="number">8</span>|input[<span class="number">14</span>]&lt;&lt;<span class="number">16</span>|input[<span class="number">15</span>]&lt;&lt;<span class="number">24</span>)^table[<span class="number">1027</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">/**********************************************************************************/</span></span><br><span class="line"><span class="keyword">for</span>(index = <span class="number">1032</span>; index&lt;=<span class="number">1062</span>; index+=<span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line">encrypt(&amp;v3,&amp;v4,&amp;v7,&amp;v8,index);</span><br><span class="line">index+=<span class="number">2</span>;</span><br><span class="line">encrypt(&amp;v7,&amp;v8,&amp;v3,&amp;v4,index);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/***********************************************************************************/</span></span><br><span class="line"></span><br><span class="line">v7 ^= table[<span class="number">1028</span>];</span><br><span class="line">v8 ^= table[<span class="number">1029</span>];</span><br><span class="line">v3 ^= table[<span class="number">1030</span>];</span><br><span class="line">v4 ^= table[<span class="number">1031</span>];</span><br><span class="line"></span><br><span class="line">dest[<span class="number">0</span>] = BYTE0(v7);</span><br><span class="line">dest[<span class="number">1</span>] = BYTE1(v7);</span><br><span class="line">dest[<span class="number">2</span>] = BYTE2(v7);</span><br><span class="line">dest[<span class="number">3</span>] = BYTE3(v7);</span><br><span class="line">dest[<span class="number">4</span>] = BYTE0(v8);</span><br><span class="line">dest[<span class="number">5</span>] = BYTE1(v8);</span><br><span class="line">dest[<span class="number">6</span>] = BYTE2(v8);</span><br><span class="line">dest[<span class="number">7</span>] = BYTE3(v8);</span><br><span class="line">dest[<span class="number">8</span>] = BYTE0(v3);</span><br><span class="line">dest[<span class="number">9</span>] = BYTE1(v3);</span><br><span class="line">dest[<span class="number">10</span>] = BYTE2(v3);</span><br><span class="line">dest[<span class="number">11</span>] = BYTE3(v3);</span><br><span class="line">dest[<span class="number">12</span>] = BYTE0(v4);</span><br><span class="line">dest[<span class="number">13</span>] = BYTE1(v4);</span><br><span class="line">dest[<span class="number">14</span>] = BYTE2(v4);</span><br><span class="line">dest[<span class="number">15</span>] = BYTE3(v4);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt;= <span class="number">15</span>; ++i)</span><br><span class="line">    fputc(dest[i], fpw);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">fclose(fpr);</span><br><span class="line">fclose(fpw);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="直接逆"><a href="#直接逆" class="headerlink" title="直接逆"></a>直接逆</h1><p>然后直接逆，贴出脚本</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">unsigned</span> <span class="keyword">int</span> <span class="title">ROL</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">int</span> *i)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">*i = *i&lt;&lt;<span class="number">1</span>|(*i&gt;&gt;<span class="number">31</span>);</span><br><span class="line"><span class="keyword">return</span> *i;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">unsigned</span> <span class="keyword">int</span> <span class="title">ROR</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">int</span> *i)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">*i = *i&gt;&gt;<span class="number">1</span>|((*i&amp;<span class="number">1</span>)&lt;&lt;<span class="number">31</span>);</span><br><span class="line"><span class="keyword">return</span> *i;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">unsigned</span> <span class="keyword">int</span> <span class="title">BYTE0</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">int</span> i)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> i&amp;<span class="number">0xff</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">unsigned</span> <span class="keyword">int</span> <span class="title">BYTE1</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">int</span> i)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> (i&gt;&gt;<span class="number">8</span>)&amp;<span class="number">0xff</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">unsigned</span> <span class="keyword">int</span> <span class="title">BYTE2</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">int</span> i)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> (i&gt;&gt;<span class="number">16</span>)&amp;<span class="number">0xff</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">unsigned</span> <span class="keyword">int</span> <span class="title">BYTE3</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">int</span> i)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> (i&gt;&gt;<span class="number">24</span>)&amp;<span class="number">0xff</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">int</span> table[] = &#123;<span class="number">380087468</span>, <span class="number">1203253039</span>, <span class="number">2922473062</span>, <span class="number">2314273025</span>, <span class="number">2584233285</span>, <span class="number">4254618194</span>, <span class="number">895667404</span>, <span class="number">1071543669</span>, <span class="number">1459084508</span>, <span class="number">1966259388</span>, <span class="number">1337073953</span>, <span class="number">2472125604</span>, <span class="number">65886296</span>, <span class="number">3096890058</span>, <span class="number">1030275778</span>, <span class="number">3798867743</span>, <span class="number">4201647373</span>, <span class="number">2942994825</span>, <span class="number">4013619705</span>, <span class="number">1737496343</span>, <span class="number">3077872539</span>, <span class="number">67438343</span>, <span class="number">2808121223</span>, <span class="number">3985395278</span>, <span class="number">1146451831</span>, <span class="number">3973554593</span>, <span class="number">3474112961</span>, <span class="number">4120009820</span>, <span class="number">3122691453</span>, <span class="number">1403597876</span>, <span class="number">536235341</span>, <span class="number">2292903662</span>, <span class="number">3304429463</span>, <span class="number">180140473</span>, <span class="number">2760761311</span>, <span class="number">1764338089</span>, <span class="number">4106859443</span>, <span class="number">1548445029</span>, <span class="number">3730649650</span>, <span class="number">199710294</span>, <span class="number">45529015</span>, <span class="number">3056563316</span>, <span class="number">4079086828</span>, <span class="number">1994384612</span>, <span class="number">3999340054</span>, <span class="number">714375553</span>, <span class="number">3273509064</span>, <span class="number">1872369945</span>, <span class="number">247054014</span>, <span class="number">3571551115</span>, <span class="number">4187837781</span>, <span class="number">1670713360</span>, <span class="number">1427801220</span>, <span class="number">3117229349</span>, <span class="number">3316545656</span>, <span class="number">132669279</span>, <span class="number">2384027230</span>, <span class="number">915379348</span>, <span class="number">424017405</span>, <span class="number">3878746103</span>, <span class="number">3212744085</span>, <span class="number">3371867806</span>, <span class="number">781289094</span>, <span class="number">1323945678</span>, <span class="number">876159779</span>, <span class="number">4173773498</span>, <span class="number">2100867762</span>, <span class="number">943073834</span>, <span class="number">2248017928</span>, <span class="number">4039947444</span>, <span class="number">1136470056</span>, <span class="number">1346661484</span>, <span class="number">3393988905</span>, <span class="number">3029976003</span>, <span class="number">3918088521</span>, <span class="number">3607942099</span>, <span class="number">3504639116</span>, <span class="number">90106088</span>, <span class="number">828885963</span>, <span class="number">1819754817</span>, <span class="number">404623890</span>, <span class="number">1158584472</span>, <span class="number">4146392043</span>, <span class="number">3741769181</span>, <span class="number">2648709658</span>, <span class="number">3145437842</span>, <span class="number">3460902446</span>, <span class="number">3049401388</span>, <span class="number">1526257109</span>, <span class="number">1292146326</span>, <span class="number">490797818</span>, <span class="number">3450107510</span>, <span class="number">1805590046</span>, <span class="number">2158026976</span>, <span class="number">2381579782</span>, <span class="number">3652545901</span>, <span class="number">2517060684</span>, <span class="number">2515145748</span>, <span class="number">2788911208</span>, <span class="number">1391647707</span>, <span class="number">1685933903</span>, <span class="number">2449623883</span>, <span class="number">335103044</span>, <span class="number">3585762404</span>, <span class="number">2605951658</span>, <span class="number">3839733679</span>, <span class="number">3326287904</span>, <span class="number">312650667</span>, <span class="number">2673257901</span>, <span class="number">3010567324</span>, <span class="number">3184009762</span>, <span class="number">2741338240</span>, <span class="number">1831644846</span>, <span class="number">606945087</span>, <span class="number">809247780</span>, <span class="number">3528604475</span>, <span class="number">1858205430</span>, <span class="number">2180714255</span>, <span class="number">2855559521</span>, <span class="number">336665371</span>, <span class="number">1009986861</span>, <span class="number">1657733119</span>, <span class="number">2182502231</span>, <span class="number">2849585465</span>, <span class="number">290452467</span>, <span class="number">981507485</span>, <span class="number">2539430819</span>, <span class="number">1886147668</span>, <span class="number">2782277680</span>, <span class="number">1604730173</span>, <span class="number">1224839569</span>, <span class="number">0</span>, <span class="number">1481532002</span>, <span class="number">1953059667</span>, <span class="number">2629563893</span>, <span class="number">735014510</span>, <span class="number">3811963120</span>, <span class="number">2360338921</span>, <span class="number">1926947811</span>, <span class="number">936672123</span>, <span class="number">2714974007</span>, <span class="number">2202908856</span>, <span class="number">1937837068</span>, <span class="number">471536917</span>, <span class="number">695851481</span>, <span class="number">2894582225</span>, <span class="number">3663213877</span>, <span class="number">1697030304</span>, <span class="number">1561365130</span>, <span class="number">1257032137</span>, <span class="number">2827146966</span>, <span class="number">1593692882</span>, <span class="number">3719326314</span>, <span class="number">3163803085</span>, <span class="number">269753372</span>, <span class="number">2982619947</span>, <span class="number">1270294054</span>, <span class="number">673330742</span>, <span class="number">1048943258</span>, <span class="number">3190127226</span>, <span class="number">2249412688</span>, <span class="number">112439472</span>, <span class="number">628543696</span>, <span class="number">3946839806</span>, <span class="number">2403512753</span>, <span class="number">3906119334</span>, <span class="number">2963064004</span>, <span class="number">266490193</span>, <span class="number">1281325433</span>, <span class="number">1899477947</span>, <span class="number">1618495560</span>, <span class="number">763158238</span>, <span class="number">4068082435</span>, <span class="number">1079013488</span>, <span class="number">22802415</span>, <span class="number">202311945</span>, <span class="number">2140013829</span>, <span class="number">580816783</span>, <span class="number">847942547</span>, <span class="number">2005142283</span>, <span class="number">4240686525</span>, <span class="number">402408259</span>, <span class="number">3596041276</span>, <span class="number">3850780736</span>, <span class="number">2060512749</span>, <span class="number">1629726631</span>, <span class="number">3706422661</span>, <span class="number">869366908</span>, <span class="number">801794409</span>, <span class="number">4213957346</span>, <span class="number">561240023</span>, <span class="number">2019973722</span>, <span class="number">156361185</span>, <span class="number">223667942</span>, <span class="number">2494692347</span>, <span class="number">447260069</span>, <span class="number">740766001</span>, <span class="number">2317113689</span>, <span class="number">647727240</span>, <span class="number">3932426513</span>, <span class="number">2127948522</span>, <span class="number">468929098</span>, <span class="number">1004237426</span>, <span class="number">514695842</span>, <span class="number">2722000751</span>, <span class="number">4053228379</span>, <span class="number">1122420679</span>, <span class="number">1413573483</span>, <span class="number">1724643576</span>, <span class="number">2427780348</span>, <span class="number">4281263589</span>, <span class="number">1791291889</span>, <span class="number">3259377447</span>, <span class="number">2693322968</span>, <span class="number">3382800753</span>, <span class="number">3439303065</span>, <span class="number">2086886749</span>, <span class="number">1494584717</span>, <span class="number">3865778200</span>, <span class="number">963495365</span>, <span class="number">600137824</span>, <span class="number">2225465319</span>, <span class="number">2876214926</span>, <span class="number">3783477063</span>, <span class="number">1470903091</span>, <span class="number">2989126515</span>, <span class="number">2336732854</span>, <span class="number">4269083146</span>, <span class="number">539506744</span>, <span class="number">3407333062</span>, <span class="number">2916892222</span>, <span class="number">1361019779</span>, <span class="number">3772295336</span>, <span class="number">4135519236</span>, <span class="number">2034087349</span>, <span class="number">357233908</span>, <span class="number">1752319558</span>, <span class="number">2581929245</span>, <span class="number">2072707586</span>, <span class="number">3340292047</span>, <span class="number">1189331136</span>, <span class="number">1213890174</span>, <span class="number">2562650866</span>, <span class="number">3639509634</span>, <span class="number">1091280799</span>, <span class="number">2651669058</span>, <span class="number">3236991120</span>, <span class="number">134876686</span>, <span class="number">3674462938</span>, <span class="number">666920807</span>, <span class="number">1537423930</span>, <span class="number">3540636884</span>, <span class="number">2269691839</span>, <span class="number">3249241983</span>, <span class="number">2448364307</span>, <span class="number">3518980963</span>, <span class="number">2610656439</span>, <span class="number">825304876</span>, <span class="number">3065399179</span>, <span class="number">2492763958</span>, <span class="number">2004309316</span>, <span class="number">690572490</span>, <span class="number">2122209864</span>, <span class="number">3991785594</span>, <span class="number">1145370899</span>, <span class="number">1499012234</span>, <span class="number">2374833497</span>, <span class="number">3840204662</span>, <span class="number">117900548</span>, <span class="number">2644344890</span>, <span class="number">3267520573</span>, <span class="number">640071499</span>, <span class="number">421108335</span>, <span class="number">3048553849</span>, <span class="number">2795950824</span>, <span class="number">2358043856</span>, <span class="number">3722249951</span>, <span class="number">1347425158</span>, <span class="number">84250239</span>, <span class="number">1734852647</span>, <span class="number">218984698</span>, <span class="number">3604382376</span>, <span class="number">3941258622</span>, <span class="number">2913818271</span>, <span class="number">1397975412</span>, <span class="number">2105352378</span>, <span class="number">1768540719</span>, <span class="number">1970658879</span>, <span class="number">370565614</span>, <span class="number">3688624722</span>, <span class="number">3503322661</span>, <span class="number">4278075371</span>, <span class="number">2560101957</span>, <span class="number">3183330300</span>, <span class="number">3486456007</span>, <span class="number">3216984199</span>, <span class="number">2728570142</span>, <span class="number">67403766</span>, <span class="number">589510964</span>, <span class="number">1246425883</span>, <span class="number">2459073467</span>, <span class="number">269522275</span>, <span class="number">2745392279</span>, <span class="number">2762234259</span>, <span class="number">606354480</span>, <span class="number">4160172263</span>, <span class="number">1313770733</span>, <span class="number">134807173</span>, <span class="number">1616954659</span>, <span class="number">1027450463</span>, <span class="number">1566401404</span>, <span class="number">1785376989</span>, <span class="number">1633760426</span>, <span class="number">1936927410</span>, <span class="number">3823360626</span>, <span class="number">724289457</span>, <span class="number">960092585</span>, <span class="number">3890718084</span>, <span class="number">2442199369</span>, <span class="number">943204384</span>, <span class="number">3166450293</span>, <span class="number">3452801980</span>, <span class="number">4261233945</span>, <span class="number">1448535819</span>, <span class="number">4193860335</span>, <span class="number">2998024317</span>, <span class="number">1701137244</span>, <span class="number">2408554018</span>, <span class="number">1229556201</span>, <span class="number">1532729329</span>, <span class="number">1381144829</span>, <span class="number">741130933</span>, <span class="number">2256965934</span>, <span class="number">3402274488</span>, <span class="number">185304183</span>, <span class="number">2088554803</span>, <span class="number">842161630</span>, <span class="number">993743570</span>, <span class="number">4210704413</span>, <span class="number">1549570805</span>, <span class="number">0</span>, <span class="number">1600120839</span>, <span class="number">3419105073</span>, <span class="number">3621221153</span>, <span class="number">707409464</span>, <span class="number">2021174981</span>, <span class="number">3435946549</span>, <span class="number">1819034704</span>, <span class="number">2880152082</span>, <span class="number">1094809452</span>, <span class="number">976921435</span>, <span class="number">3806473211</span>, <span class="number">3705468758</span>, <span class="number">909517352</span>, <span class="number">2054825406</span>, <span class="number">1650609752</span>, <span class="number">4092808977</span>, <span class="number">4008618632</span>, <span class="number">2139073473</span>, <span class="number">3233866566</span>, <span class="number">252705665</span>, <span class="number">2627498419</span>, <span class="number">404253670</span>, <span class="number">1920129851</span>, <span class="number">1667481553</span>, <span class="number">1515873912</span>, <span class="number">2896996118</span>, <span class="number">926405537</span>, <span class="number">3031747824</span>, <span class="number">2711738348</span>, <span class="number">454758676</span>, <span class="number">3907542533</span>, <span class="number">774785486</span>, <span class="number">2324303965</span>, <span class="number">2307484335</span>, <span class="number">1162152090</span>, <span class="number">1263207058</span>, <span class="number">3537042782</span>, <span class="number">2037997388</span>, <span class="number">2425417920</span>, <span class="number">33721211</span>, <span class="number">101119117</span>, <span class="number">50559730</span>, <span class="number">2206408529</span>, <span class="number">505323371</span>, <span class="number">2577006540</span>, <span class="number">3149608817</span>, <span class="number">3351766594</span>, <span class="number">320073617</span>, <span class="number">2543318468</span>, <span class="number">859024471</span>, <span class="number">2155898275</span>, <span class="number">2947538404</span>, <span class="number">2678000449</span>, <span class="number">1802191188</span>, <span class="number">16904585</span>, <span class="number">2189618904</span>, <span class="number">2341200340</span>, <span class="number">303177240</span>, <span class="number">892688602</span>, <span class="number">4059153514</span>, <span class="number">235801096</span>, <span class="number">437969053</span>, <span class="number">2779097114</span>, <span class="number">2071712823</span>, <span class="number">1077970661</span>, <span class="number">2930650221</span>, <span class="number">4042274275</span>, <span class="number">3334870987</span>, <span class="number">1431674361</span>, <span class="number">3772817536</span>, <span class="number">3250655951</span>, <span class="number">2509602495</span>, <span class="number">353704732</span>, <span class="number">1364320783</span>, <span class="number">2863289243</span>, <span class="number">2829637856</span>, <span class="number">2391699371</span>, <span class="number">2526413901</span>, <span class="number">3587569754</span>, <span class="number">4244419728</span>, <span class="number">1835906521</span>, <span class="number">3755969956</span>, <span class="number">3739122733</span>, <span class="number">1010587606</span>, <span class="number">2593817918</span>, <span class="number">2812748641</span>, <span class="number">151588620</span>, <span class="number">3553823959</span>, <span class="number">656885442</span>, <span class="number">1465325186</span>, <span class="number">623234489</span>, <span class="number">387420263</span>, <span class="number">1717973422</span>, <span class="number">1212708960</span>, <span class="number">3099086211</span>, <span class="number">1044307117</span>, <span class="number">202146163</span>, <span class="number">3132802808</span>, <span class="number">2981184143</span>, <span class="number">3115957258</span>, <span class="number">1414818928</span>, <span class="number">1111625118</span>, <span class="number">555856463</span>, <span class="number">2172752938</span>, <span class="number">3789639945</span>, <span class="number">2223250005</span>, <span class="number">4109650453</span>, <span class="number">3082270210</span>, <span class="number">3924406156</span>, <span class="number">3014904308</span>, <span class="number">1886408768</span>, <span class="number">3958056183</span>, <span class="number">3654908201</span>, <span class="number">4126522268</span>, <span class="number">2475919922</span>, <span class="number">1482222851</span>, <span class="number">4025441025</span>, <span class="number">757936956</span>, <span class="number">1195869153</span>, <span class="number">4143366510</span>, <span class="number">4294954594</span>, <span class="number">1684323029</span>, <span class="number">168457726</span>, <span class="number">1987486925</span>, <span class="number">3469666638</span>, <span class="number">2290653990</span>, <span class="number">471602192</span>, <span class="number">1179021928</span>, <span class="number">1280051094</span>, <span class="number">4227576212</span>, <span class="number">2273796263</span>, <span class="number">1330609508</span>, <span class="number">808507045</span>, <span class="number">3200170254</span>, <span class="number">1953771446</span>, <span class="number">791656519</span>, <span class="number">1583225230</span>, <span class="number">1061104932</span>, <span class="number">3385453642</span>, <span class="number">3520169900</span>, <span class="number">3638069408</span>, <span class="number">3974898163</span>, <span class="number">3873854477</span>, <span class="number">673758531</span>, <span class="number">1852755755</span>, <span class="number">488498585</span>, <span class="number">336915093</span>, <span class="number">522153698</span>, <span class="number">572704957</span>, <span class="number">2846435689</span>, <span class="number">1751661478</span>, <span class="number">4177054566</span>, <span class="number">3318050105</span>, <span class="number">875866451</span>, <span class="number">3284375988</span>, <span class="number">538985414</span>, <span class="number">2964370182</span>, <span class="number">4075994776</span>, <span class="number">3368558019</span>, <span class="number">1296954911</span>, <span class="number">3671720923</span>, <span class="number">1903272393</span>, <span class="number">3857002239</span>, <span class="number">3570665939</span>, <span class="number">3301219504</span>, <span class="number">2661219016</span>, <span class="number">1869561506</span>, <span class="number">1128528919</span>, <span class="number">2240146396</span>, <span class="number">2694850149</span>, <span class="number">286352618</span>, <span class="number">3821029091</span>, <span class="number">1619502944</span>, <span class="number">3834433764</span>, <span class="number">796177967</span>, <span class="number">1349533776</span>, <span class="number">4288269567</span>, <span class="number">76958980</span>, <span class="number">3644434905</span>, <span class="number">2195105922</span>, <span class="number">1479924312</span>, <span class="number">1518225498</span>, <span class="number">2959793584</span>, <span class="number">1796793963</span>, <span class="number">2539385239</span>, <span class="number">2708588961</span>, <span class="number">3480103887</span>, <span class="number">3927217642</span>, <span class="number">3072740279</span>, <span class="number">1906094961</span>, <span class="number">3981968365</span>, <span class="number">3922611945</span>, <span class="number">4132249590</span>, <span class="number">3472843470</span>, <span class="number">821552944</span>, <span class="number">2609391259</span>, <span class="number">828812849</span>, <span class="number">545110560</span>, <span class="number">1757560168</span>, <span class="number">908736566</span>, <span class="number">2441490065</span>, <span class="number">1841641837</span>, <span class="number">1702929253</span>, <span class="number">3311412165</span>, <span class="number">2455565714</span>, <span class="number">4094070260</span>, <span class="number">1667071075</span>, <span class="number">3090106296</span>, <span class="number">951221560</span>, <span class="number">2382725006</span>, <span class="number">2252400006</span>, <span class="number">2829392552</span>, <span class="number">416270104</span>, <span class="number">2986054833</span>, <span class="number">2838778793</span>, <span class="number">674766888</span>, <span class="number">3534153938</span>, <span class="number">3257710018</span>, <span class="number">3672339162</span>, <span class="number">2927150510</span>, <span class="number">3681696731</span>, <span class="number">3043875253</span>, <span class="number">4001552622</span>, <span class="number">989458234</span>, <span class="number">1601784927</span>, <span class="number">2729120418</span>, <span class="number">1118932802</span>, <span class="number">851211570</span>, <span class="number">2241478277</span>, <span class="number">4158412535</span>, <span class="number">786825006</span>, <span class="number">1433879637</span>, <span class="number">2044275065</span>, <span class="number">2278665351</span>, <span class="number">2699067552</span>, <span class="number">2479733907</span>, <span class="number">3173532605</span>, <span class="number">1592264030</span>, <span class="number">2529867926</span>, <span class="number">168691722</span>, <span class="number">3422054091</span>, <span class="number">2202526083</span>, <span class="number">4212097531</span>, <span class="number">759112749</span>, <span class="number">1097552961</span>, <span class="number">4181988345</span>, <span class="number">4081720307</span>, <span class="number">1787408234</span>, <span class="number">1542390107</span>, <span class="number">2102355069</span>, <span class="number">4036018416</span>, <span class="number">1554224988</span>, <span class="number">3384014025</span>, <span class="number">374833686</span>, <span class="number">657533991</span>, <span class="number">1341329743</span>, <span class="number">935031095</span>, <span class="number">4258422525</span>, <span class="number">2131031679</span>, <span class="number">1717205094</span>, <span class="number">3357720008</span>, <span class="number">3210990015</span>, <span class="number">3514577873</span>, <span class="number">244860174</span>, <span class="number">1657550178</span>, <span class="number">337383444</span>, <span class="number">1628892769</span>, <span class="number">2889045932</span>, <span class="number">648045862</span>, <span class="number">3843922405</span>, <span class="number">1373702481</span>, <span class="number">1009004604</span>, <span class="number">215209740</span>, <span class="number">398904087</span>, <span class="number">1090133312</span>, <span class="number">1817473132</span>, <span class="number">712225322</span>, <span class="number">3617713367</span>, <span class="number">1741369703</span>, <span class="number">2500879253</span>, <span class="number">3127170490</span>, <span class="number">1220511560</span>, <span class="number">1177010758</span>, <span class="number">2047079034</span>, <span class="number">64674563</span>, <span class="number">1879964272</span>, <span class="number">4174732024</span>, <span class="number">2073213819</span>, <span class="number">2215344004</span>, <span class="number">1463604823</span>, <span class="number">2000776311</span>, <span class="number">277503248</span>, <span class="number">3634946264</span>, <span class="number">1264933963</span>, <span class="number">1379652178</span>, <span class="number">3564845012</span>, <span class="number">4011037167</span>, <span class="number">2738510755</span>, <span class="number">996714043</span>, <span class="number">3784037601</span>, <span class="number">958608441</span>, <span class="number">1174214981</span>, <span class="number">619444004</span>, <span class="number">2867759274</span>, <span class="number">252251151</span>, <span class="number">3166243516</span>, <span class="number">3588914901</span>, <span class="number">1678895716</span>, <span class="number">3284008131</span>, <span class="number">1503957849</span>, <span class="number">454368283</span>, <span class="number">3719292125</span>, <span class="number">749628716</span>, <span class="number">2669570975</span>, <span class="number">314691346</span>, <span class="number">26298625</span>, <span class="number">84345861</span>, <span class="number">1073670975</span>, <span class="number">1917216882</span>, <span class="number">3065447094</span>, <span class="number">2660180638</span>, <span class="number">2324902538</span>, <span class="number">628801061</span>, <span class="number">1956362100</span>, <span class="number">164942601</span>, <span class="number">3881176039</span>, <span class="number">1303937869</span>, <span class="number">2295898248</span>, <span class="number">2165076865</span>, <span class="number">38507010</span>, <span class="number">3341529543</span>, <span class="number">3972614892</span>, <span class="number">4120364277</span>, <span class="number">2417452944</span>, <span class="number">858602547</span>, <span class="number">3695095260</span>, <span class="number">1227804233</span>, <span class="number">475630108</span>, <span class="number">1563614813</span>, <span class="number">3434410188</span>, <span class="number">1424362836</span>, <span class="number">361584917</span>, <span class="number">3254152897</span>, <span class="number">138779144</span>, <span class="number">2094935420</span>, <span class="number">2579739801</span>, <span class="number">3441801677</span>, <span class="number">4043409905</span>, <span class="number">504502302</span>, <span class="number">4204710138</span>, <span class="number">1403689811</span>, <span class="number">2491493012</span>, <span class="number">2303322505</span>, <span class="number">528699679</span>, <span class="number">2380244109</span>, <span class="number">4074459890</span>, <span class="number">3014657715</span>, <span class="number">3756291807</span>, <span class="number">3227985856</span>, <span class="number">3593512406</span>, <span class="number">2555575704</span>, <span class="number">324044307</span>, <span class="number">3153435835</span>, <span class="number">736295723</span>, <span class="number">573974562</span>, <span class="number">1047503422</span>, <span class="number">3898542056</span>, <span class="number">3759840736</span>, <span class="number">878815796</span>, <span class="number">2639657373</span>, <span class="number">286987281</span>, <span class="number">1035303229</span>, <span class="number">2018009208</span>, <span class="number">2157787776</span>, <span class="number">1126221379</span>, <span class="number">425627161</span>, <span class="number">2789040038</span>, <span class="number">0</span>, <span class="number">3871818470</span>, <span class="number">1993352566</span>, <span class="number">1871620975</span>, <span class="number">2913083053</span>, <span class="number">122459655</span>, <span class="number">2408855183</span>, <span class="number">904979253</span>, <span class="number">3334142150</span>, <span class="number">1203145543</span>, <span class="number">3732226014</span>, <span class="number">2877276587</span>, <span class="number">3505224400</span>, <span class="number">194986251</span>, <span class="number">3543638483</span>, <span class="number">3796963298</span>, <span class="number">1315067982</span>, <span class="number">499696413</span>, <span class="number">1257510218</span>, <span class="number">1147949124</span>, <span class="number">3304155844</span>, <span class="number">2585358234</span>, <span class="number">115203846</span>, <span class="number">2988527538</span>, <span class="number">2759249316</span>, <span class="number">2332195723</span>, <span class="number">2813073063</span>, <span class="number">3036450996</span>, <span class="number">4261971454</span>, <span class="number">2951318703</span>, <span class="number">1767076969</span>, <span class="number">3951418603</span>, <span class="number">1943478643</span>, <span class="number">3116240569</span>, <span class="number">3395891146</span>, <span class="number">2783413413</span>, <span class="number">2630135964</span>, <span class="number">569176865</span>, <span class="number">598171939</span>, <span class="number">222469645</span>, <span class="number">2123743102</span>, <span class="number">698968361</span>, <span class="number">1963654773</span>, <span class="number">1847583342</span>, <span class="number">1454219094</span>, <span class="number">1277807180</span>, <span class="number">2353982860</span>, <span class="number">3203569854</span>, <span class="number">444880154</span>, <span class="number">4232255484</span>, <span class="number">1324174988</span>, <span class="number">426711450</span>, <span class="number">3095640141</span>, <span class="number">2059303461</span>, <span class="number">1142113529</span>, <span class="number">2345962465</span>, <span class="number">2109373728</span>, <span class="number">3517763975</span>, <span class="number">1392333464</span>, <span class="number">3832997087</span>, <span class="number">3671841283</span>, <span class="number">1517836902</span>, <span class="number">4009881435</span>, <span class="number">2744623964</span>, <span class="number">2769986984</span>, <span class="number">109905652</span>, <span class="number">2275903328</span>, <span class="number">1267878658</span>, <span class="number">117704453</span>, <span class="number">3815957466</span>, <span class="number">260116475</span>, <span class="number">3251618066</span>, <span class="number">2842274089</span>, <span class="number">1542544279</span>, <span class="number">642459319</span>, <span class="number">1167738120</span>, <span class="number">2167046548</span>, <span class="number">4001951402</span>, <span class="number">2486604943</span>, <span class="number">2800264914</span>, <span class="number">2512360830</span>, <span class="number">4095079498</span>, <span class="number">1059340077</span>, <span class="number">3696680183</span>, <span class="number">4167497931</span>, <span class="number">2554697742</span>, <span class="number">3308897645</span>, <span class="number">25756145</span>, <span class="number">3752124301</span>, <span class="number">2953228467</span>, <span class="number">2546243573</span>, <span class="number">235408906</span>, <span class="number">2393607791</span>, <span class="number">1817209924</span>, <span class="number">534912878</span>, <span class="number">3225862371</span>, <span class="number">3975408673</span>, <span class="number">1649959502</span>, <span class="number">1442403741</span>, <span class="number">510336671</span>, <span class="number">4041470005</span>, <span class="number">3727548028</span>, <span class="number">3643398521</span>, <span class="number">1872916286</span>, <span class="number">2761139289</span>, <span class="number">2067233748</span>, <span class="number">853422685</span>, <span class="number">2637864320</span>, <span class="number">4050317764</span>, <span class="number">417732715</span>, <span class="number">3104487868</span>, <span class="number">1029651878</span>, <span class="number">354161947</span>, <span class="number">861352876</span>, <span class="number">3679640562</span>, <span class="number">184420981</span>, <span class="number">2195227374</span>, <span class="number">446503648</span>, <span class="number">4070109886</span>, <span class="number">2870127522</span>, <span class="number">3485978392</span>, <span class="number">2309982570</span>, <span class="number">3554136844</span>, <span class="number">3570652169</span>, <span class="number">4220844977</span>, <span class="number">1764714954</span>, <span class="number">41616011</span>, <span class="number">1958114351</span>, <span class="number">3884246949</span>, <span class="number">3070408630</span>, <span class="number">1848340175</span>, <span class="number">1020673111</span>, <span class="number">1205946243</span>, <span class="number">2143387563</span>, <span class="number">0</span>, <span class="number">2612501364</span>, <span class="number">1612931269</span>, <span class="number">3409038183</span>, <span class="number">83231871</span>, <span class="number">1638555956</span>, <span class="number">3492139126</span>, <span class="number">3426077794</span>, <span class="number">303567390</span>, <span class="number">2158198885</span>, <span class="number">1700554059</span>, <span class="number">2401406878</span>, <span class="number">4120704443</span>, <span class="number">3299919004</span>, <span class="number">1842965941</span>, <span class="number">1359958498</span>, <span class="number">151783695</span>, <span class="number">4237360308</span>, <span class="number">1993176740</span>, <span class="number">300552548</span>, <span class="number">2912922966</span>, <span class="number">2437517569</span>, <span class="number">2428539120</span>, <span class="number">2663948026</span>, <span class="number">328274927</span>, <span class="number">3401108118</span>, <span class="number">908604962</span>, <span class="number">750070978</span>, <span class="number">1909027233</span>, <span class="number">1568431459</span>, <span class="number">1117667853</span>, <span class="number">3766542496</span>, <span class="number">3858752814</span>, <span class="number">675489981</span>, <span class="number">824979751</span>, <span class="number">2887167143</span>, <span class="number">1916498651</span>, <span class="number">4284678094</span>, <span class="number">3062609479</span>, <span class="number">1088766086</span>, <span class="number">3377121772</span>, <span class="number">3579500024</span>, <span class="number">1443583719</span>, <span class="number">1284918279</span>, <span class="number">1755736123</span>, <span class="number">3461271273</span>, <span class="number">1594318824</span>, <span class="number">2118680154</span>, <span class="number">2321386000</span>, <span class="number">3609319283</span>, <span class="number">1293897206</span>, <span class="number">816132310</span>, <span class="number">632890829</span>, <span class="number">3451702675</span>, <span class="number">3808158251</span>, <span class="number">2978984258</span>, <span class="number">2284226715</span>, <span class="number">758918451</span>, <span class="number">1051541212</span>, <span class="number">2000975701</span>, <span class="number">1941074730</span>, <span class="number">1586388505</span>, <span class="number">1559583890</span>, <span class="number">3136862918</span>, <span class="number">1400132457</span>, <span class="number">234491248</span>, <span class="number">3958893348</span>, <span class="number">2862328403</span>, <span class="number">496573925</span>, <span class="number">1730635712</span>, <span class="number">2521667076</span>, <span class="number">3144792887</span>, <span class="number">2220196890</span>, <span class="number">2026207406</span>, <span class="number">558834098</span>, <span class="number">1792895664</span>, <span class="number">3634419848</span>, <span class="number">2994582072</span>, <span class="number">3335243287</span>, <span class="number">345314538</span>, <span class="number">2629016689</span>, <span class="number">733031367</span>, <span class="number">2833295576</span>, <span class="number">3187457475</span>, <span class="number">192351108</span>, <span class="number">979057315</span>, <span class="number">2808194851</span>, <span class="number">2580322815</span>, <span class="number">2587794053</span>, <span class="number">2719916717</span>, <span class="number">1181238898</span>, <span class="number">4246338885</span>, <span class="number">1476614381</span>, <span class="number">2362477796</span>, <span class="number">208866433</span>, <span class="number">4196268608</span>, <span class="number">1214269560</span>, <span class="number">3934186197</span>, <span class="number">3918326191</span>, <span class="number">607134780</span>, <span class="number">2716639703</span>, <span class="number">92210574</span>, <span class="number">3035673804</span>, <span class="number">3019158473</span>, <span class="number">1331974013</span>, <span class="number">1800694593</span>, <span class="number">3859670612</span>, <span class="number">3213344584</span>, <span class="number">582820552</span>, <span class="number">4078039887</span>, <span class="number">2469565322</span>, <span class="number">1240025481</span>, <span class="number">1097613687</span>, <span class="number">1350979603</span>, <span class="number">2461766267</span>, <span class="number">142936318</span>, <span class="number">590619449</span>, <span class="number">1502239004</span>, <span class="number">2951000029</span>, <span class="number">1691706554</span>, <span class="number">470817812</span>, <span class="number">3283403673</span>, <span class="number">3775521105</span>, <span class="number">2245821931</span>, <span class="number">1967093214</span>, <span class="number">2083749073</span>, <span class="number">392632208</span>, <span class="number">3343042534</span>, <span class="number">877868201</span>, <span class="number">2691014694</span>, <span class="number">2371456277</span>, <span class="number">3892701278</span>, <span class="number">3529429757</span>, <span class="number">1722705457</span>, <span class="number">708323894</span>, <span class="number">1243302643</span>, <span class="number">2203157279</span>, <span class="number">903492952</span>, <span class="number">667035462</span>, <span class="number">4134467265</span>, <span class="number">549855299</span>, <span class="number">1125598204</span>, <span class="number">2926423596</span>, <span class="number">2671877899</span>, <span class="number">3044652349</span>, <span class="number">66192250</span>, <span class="number">1674666943</span>, <span class="number">3368273949</span>, <span class="number">3984256464</span>, <span class="number">4276878911</span>, <span class="number">3601389186</span>, <span class="number">967391705</span>, <span class="number">384702049</span>, <span class="number">1416647788</span>, <span class="number">1003633490</span>, <span class="number">2251196049</span>, <span class="number">454302481</span>, <span class="number">3161832498</span>, <span class="number">3258827368</span>, <span class="number">4159174448</span>, <span class="number">793194424</span>, <span class="number">1883271248</span>, <span class="number">3188637369</span>, <span class="number">2035054943</span>, <span class="number">941635624</span>, <span class="number">274927765</span>, <span class="number">933312467</span>, <span class="number">701114700</span>, <span class="number">4193253690</span>, <span class="number">3722435846</span>, <span class="number">785264201</span>, <span class="number">1468159766</span>, <span class="number">2101441538</span>, <span class="number">2121407775</span>, <span class="number">2351011400</span>, <span class="number">1239206503</span>, <span class="number">2775603746</span>, <span class="number">1658051727</span>, <span class="number">1763220485</span>, <span class="number">3128633466</span>, <span class="number">2489517536</span>, <span class="number">1109509226</span>, <span class="number">2780120899</span>, <span class="number">2210271065</span>, <span class="number">168993450</span>, <span class="number">1280063977</span>, <span class="number">2395917734</span>, <span class="number">1643377964</span>, <span class="number">2548172666</span>, <span class="number">781822302</span>, <span class="number">4024534168</span>, <span class="number">483597733</span>, <span class="number">1164617145</span>, <span class="number">906116875</span>, <span class="number">3303870925</span>, <span class="number">47891485</span>, <span class="number">3888912641</span>, <span class="number">3977574561</span>, <span class="number">2498361734</span>, <span class="number">736266143</span>, <span class="number">1701165666</span>, <span class="number">640274470</span>, <span class="number">2150938828</span>, <span class="number">556586484</span>, <span class="number">3453533497</span>, <span class="number">2416193240</span>, <span class="number">925226908</span>, <span class="number">2305559619</span>, <span class="number">2078552113</span>, <span class="number">3008654349</span>, <span class="number">4252226453</span>, <span class="number">3241595826</span>, <span class="number">182822752</span>, <span class="number">32583</span>, <span class="number">6308224</span>, <span class="number">0</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">decrypt</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">int</span> *a, <span class="keyword">unsigned</span> <span class="keyword">int</span> *b, <span class="keyword">unsigned</span> <span class="keyword">int</span> *c, <span class="keyword">unsigned</span> <span class="keyword">int</span> *d, <span class="keyword">unsigned</span> <span class="keyword">int</span> index)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">int</span> v5, v6;</span><br><span class="line"></span><br><span class="line">v5 = table[BYTE3(*a)]^table[BYTE2(*a)+<span class="number">256</span>]^table[BYTE1(*a)+<span class="number">512</span>]^table[BYTE0(*a)+<span class="number">768</span>];</span><br><span class="line">v6 = table[BYTE0(*b)]^table[BYTE3(*b)+<span class="number">256</span>]^table[BYTE2(*b)+<span class="number">512</span>]^table[BYTE1(*b)+<span class="number">768</span>];</span><br><span class="line">*d ^= (table[index+<span class="number">1</span>]+<span class="number">2</span>*v6+v5);</span><br><span class="line">ROR(d);</span><br><span class="line">ROL(c);</span><br><span class="line">*c ^= (table[index]+v5+v6);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">FILE *fpr, *fpw;</span><br><span class="line"></span><br><span class="line">fpr = fopen(<span class="string">"C:\\Users\\0xEASONs\\Desktop\\secret_file.jpg_encrypted"</span>,<span class="string">"rb"</span>);</span><br><span class="line">fpw = fopen(<span class="string">"C:\\Users\\0xEASONs\\Desktop\\secret_file.jpg"</span>,<span class="string">"wb"</span>);</span><br><span class="line"><span class="keyword">char</span> input[<span class="number">16</span>];</span><br><span class="line"><span class="keyword">char</span> dest[<span class="number">16</span>];</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">int</span> v3, v4, v7, v8, i, index;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(fpr == <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">"文件不存在"</span>);</span><br><span class="line">system(<span class="string">"pause"</span>);</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(fpw == <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">"写入失败"</span>);</span><br><span class="line">system(<span class="string">"pause"</span>);</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (fread(input,<span class="number">1</span>,<span class="number">16</span>,fpr))</span><br><span class="line">&#123;</span><br><span class="line">        v7 = BYTE0(input[<span class="number">0</span>])|BYTE0(input[<span class="number">1</span>])&lt;&lt;<span class="number">8</span>|BYTE0(input[<span class="number">2</span>])&lt;&lt;<span class="number">16</span>|BYTE0(input[<span class="number">3</span>])&lt;&lt;<span class="number">24</span>;</span><br><span class="line">        v8 = BYTE0(input[<span class="number">4</span>])|BYTE0(input[<span class="number">5</span>])&lt;&lt;<span class="number">8</span>|BYTE0(input[<span class="number">6</span>])&lt;&lt;<span class="number">16</span>|BYTE0(input[<span class="number">7</span>])&lt;&lt;<span class="number">24</span>;</span><br><span class="line">        v3 = BYTE0(input[<span class="number">8</span>])|BYTE0(input[<span class="number">9</span>])&lt;&lt;<span class="number">8</span>|BYTE0(input[<span class="number">10</span>])&lt;&lt;<span class="number">16</span>|BYTE0(input[<span class="number">11</span>])&lt;&lt;<span class="number">24</span>;</span><br><span class="line">        v4 = BYTE0(input[<span class="number">12</span>])|BYTE0(input[<span class="number">13</span>])&lt;&lt;<span class="number">8</span>|BYTE0(input[<span class="number">14</span>])&lt;&lt;<span class="number">16</span>|BYTE0(input[<span class="number">15</span>])&lt;&lt;<span class="number">24</span>;</span><br><span class="line"></span><br><span class="line">v7 ^= table[<span class="number">1028</span>];</span><br><span class="line">v8 ^= table[<span class="number">1029</span>];</span><br><span class="line">v3 ^= table[<span class="number">1030</span>];</span><br><span class="line">v4 ^= table[<span class="number">1031</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(index = <span class="number">1062</span>; index&gt;=<span class="number">1032</span>; index-=<span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line">decrypt(&amp;v7,&amp;v8,&amp;v3,&amp;v4,index);</span><br><span class="line">index-=<span class="number">2</span>;</span><br><span class="line">decrypt(&amp;v3,&amp;v4,&amp;v7,&amp;v8,index);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">v3 ^= table[<span class="number">1024</span>];</span><br><span class="line">v4 ^= table[<span class="number">1025</span>];</span><br><span class="line">v7 ^= table[<span class="number">1026</span>];</span><br><span class="line">v8 ^= table[<span class="number">1027</span>];</span><br><span class="line"></span><br><span class="line">dest[<span class="number">0</span>] = BYTE0(v3);</span><br><span class="line">dest[<span class="number">1</span>] = BYTE1(v3);</span><br><span class="line">dest[<span class="number">2</span>] = BYTE2(v3);</span><br><span class="line">dest[<span class="number">3</span>] = BYTE3(v3);</span><br><span class="line">dest[<span class="number">4</span>] = BYTE0(v4);</span><br><span class="line">dest[<span class="number">5</span>] = BYTE1(v4);</span><br><span class="line">dest[<span class="number">6</span>] = BYTE2(v4);</span><br><span class="line">dest[<span class="number">7</span>] = BYTE3(v4);</span><br><span class="line">dest[<span class="number">8</span>] = BYTE0(v7);</span><br><span class="line">dest[<span class="number">9</span>] = BYTE1(v7);</span><br><span class="line">dest[<span class="number">10</span>] = BYTE2(v7);</span><br><span class="line">dest[<span class="number">11</span>] = BYTE3(v7);</span><br><span class="line">dest[<span class="number">12</span>] = BYTE0(v8);</span><br><span class="line">dest[<span class="number">13</span>] = BYTE1(v8);</span><br><span class="line">dest[<span class="number">14</span>] = BYTE2(v8);</span><br><span class="line">dest[<span class="number">15</span>] = BYTE3(v8);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt;= <span class="number">15</span>; ++i)</span><br><span class="line">fputc(dest[i], fpw);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">fclose(fpr);</span><br><span class="line">fclose(fpw);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="flag"><a href="#flag" class="headerlink" title="flag"></a>flag</h1><p><img src="https://i.loli.net/2019/07/31/5d41b905b7b8035257.jpg" alt></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Encoder&quot;&gt;&lt;a href=&quot;#Encoder&quot; class=&quot;headerlink&quot; title=&quot;Encoder&quot;&gt;&lt;/a&gt;Encoder&lt;/h1&gt;&lt;h2 id=&quot;程序主要功能&quot;&gt;&lt;a href=&quot;#程序主要功能&quot; class=&quot;headerlink&quot; </summary>
      
    
    
    
    <category term="linux" scheme="http://0xe4s0n.github.io/categories/linux/"/>
    
    
    <category term="re" scheme="http://0xe4s0n.github.io/tags/re/"/>
    
  </entry>
  
  <entry>
    <title>建站辛酸</title>
    <link href="http://0xe4s0n.github.io/%E5%BB%BA%E7%AB%99%E8%BE%9B%E9%85%B8.html"/>
    <id>http://0xe4s0n.github.io/%E5%BB%BA%E7%AB%99%E8%BE%9B%E9%85%B8.html</id>
    <published>2019-07-30T07:58:44.000Z</published>
    <updated>2019-08-14T03:49:27.098Z</updated>
    
    <content type="html"><![CDATA[<h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><p><a href="http://blog.haoji.me/build-blog-website-by-hexo-github.html?from=xa" target="_blank" rel="noopener">http://blog.haoji.me/build-blog-website-by-hexo-github.html?from=xa</a></p><h1 id="配置hexo"><a href="#配置hexo" class="headerlink" title="配置hexo"></a>配置hexo</h1><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/theme-next/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure><p><a href="https://github.com/theme-next/hexo-theme-next" target="_blank" rel="noopener">项目地址</a></p><h2 id="更换为hexo"><a href="#更换为hexo" class="headerlink" title="更换为hexo"></a>更换为hexo</h2><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Extensions</span></span><br><span class="line"><span class="comment">## Plugins: https://hexo.io/plugins/</span></span><br><span class="line"><span class="comment">## Themes: https://hexo.io/themes/</span></span><br><span class="line"><span class="attr">-theme:</span> <span class="string">landscape</span></span><br><span class="line"><span class="string">+theme:</span> <span class="string">next</span></span><br></pre></td></tr></table></figure><h2 id="站点信息"><a href="#站点信息" class="headerlink" title="站点信息"></a>站点信息</h2><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Site</span></span><br><span class="line"><span class="attr">title:</span> <span class="number">0xE4</span><span class="string">s0n的博客</span></span><br><span class="line"><span class="attr">subtitle:</span></span><br><span class="line"><span class="attr">description:</span></span><br><span class="line"><span class="attr">keywords:</span></span><br><span class="line"><span class="attr">author:</span> <span class="number">0xE4</span><span class="string">s0n</span></span><br><span class="line"><span class="attr">language:</span> <span class="string">zh-CN</span></span><br><span class="line"><span class="attr">timezone:</span></span><br></pre></td></tr></table></figure><h2 id="仓库"><a href="#仓库" class="headerlink" title="仓库"></a>仓库</h2><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/deployment.html</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line"><span class="attr">  type:</span> <span class="string">git</span></span><br><span class="line"><span class="attr">  repository:</span> <span class="string">git@github.com:0xE4s0n/0xE4s0n.github.io.git</span></span><br><span class="line"><span class="attr">  branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure><h2 id="头像"><a href="#头像" class="headerlink" title="头像"></a>头像</h2><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">favicon:</span></span><br><span class="line"><span class="attr">  small:</span> <span class="string">/images/headicon.png</span></span><br><span class="line"><span class="attr">  medium:</span> <span class="string">/images/headicon.png</span></span><br><span class="line"><span class="attr">  apple_touch_icon:</span> <span class="string">/images/headicon.png</span></span><br><span class="line"><span class="attr">  safari_pinned_tab:</span> <span class="string">/images/headicon.svg</span></span><br></pre></td></tr></table></figure><h2 id="移除next页脚"><a href="#移除next页脚" class="headerlink" title="移除next页脚"></a>移除next页脚</h2><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">powered:</span></span><br><span class="line">  <span class="comment"># Hexo link (Powered by Hexo).</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># Version info of Hexo after Hexo link (vX.X.X).</span></span><br><span class="line"><span class="attr">  version:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="attr">theme:</span></span><br><span class="line">  <span class="comment"># Theme &amp; scheme info link (Theme - NexT.scheme).</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># Version info of NexT after scheme info (vX.X.X).</span></span><br><span class="line"><span class="attr">  version:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><h2 id="添加其它页面"><a href="#添加其它页面" class="headerlink" title="添加其它页面"></a>添加其它页面</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo new page about</span><br><span class="line">hexo new page tags</span><br><span class="line">hexo new page categories</span><br></pre></td></tr></table></figure><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line"><span class="attr">  home:</span> <span class="string">/</span> <span class="string">||</span> <span class="string">home</span></span><br><span class="line"><span class="attr">  categories:</span> <span class="string">/categories/</span> <span class="string">||</span> <span class="string">th</span></span><br><span class="line"><span class="attr">  tags:</span> <span class="string">/tags/</span> <span class="string">||</span> <span class="string">tags</span></span><br><span class="line"><span class="attr">  archives:</span> <span class="string">/archives/</span> <span class="string">||</span> <span class="string">archive</span></span><br><span class="line"><span class="attr">  about:</span> <span class="string">/about/</span> <span class="string">||</span> <span class="string">user</span></span><br></pre></td></tr></table></figure><p>更改tags/index.md</p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: tags</span><br><span class="line">date: 2019-07-30 10:34:06</span><br><span class="line">type: "tags"</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>更改categories/index.md</p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: categories</span><br><span class="line">date: 2019-07-30 10:34:15</span><br><span class="line">type: "categories"</span><br><span class="line">---</span><br></pre></td></tr></table></figure><h2 id="侧栏"><a href="#侧栏" class="headerlink" title="侧栏"></a>侧栏</h2><p>显示数目</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">menu_settings:</span></span><br><span class="line"><span class="attr">  icons:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  badges:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><h2 id="主题"><a href="#主题" class="headerlink" title="主题"></a>主题</h2><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Schemes</span></span><br><span class="line"><span class="comment">#scheme: Muse</span></span><br><span class="line"><span class="comment">#scheme: Mist</span></span><br><span class="line"><span class="comment">#scheme: Pisces</span></span><br><span class="line"><span class="attr">scheme:</span> <span class="string">Gemini</span></span><br></pre></td></tr></table></figure><h2 id="大头像"><a href="#大头像" class="headerlink" title="大头像"></a>大头像</h2><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">avatar:</span></span><br><span class="line">  <span class="comment"># In theme directory (source/images): /images/avatar.gif</span></span><br><span class="line">  <span class="comment"># In site directory (source/uploads): /uploads/avatar.gif</span></span><br><span class="line">  <span class="comment"># You can also use other linking images.</span></span><br><span class="line"><span class="attr">  url:</span> <span class="string">/images/headicon.png</span></span><br><span class="line">  <span class="comment"># 圆角头像</span></span><br><span class="line"><span class="attr">  rounded:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># 不透明度</span></span><br><span class="line"><span class="attr">  opacity:</span> <span class="number">1</span></span><br><span class="line">  <span class="comment"># 鼠标指示旋转头像</span></span><br><span class="line"><span class="attr">  rotated:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure><h2 id="back2top"><a href="#back2top" class="headerlink" title="back2top"></a>back2top</h2><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">back2top:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># Back to top in sidebar.</span></span><br><span class="line"><span class="attr">  sidebar:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># Scroll percent label in b2t button.</span></span><br><span class="line"><span class="attr">  scrollpercent:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><h2 id="首页收起文章详情"><a href="#首页收起文章详情" class="headerlink" title="首页收起文章详情"></a>首页收起文章详情</h2><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">auto_excerpt:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  length:</span> <span class="number">150</span></span><br></pre></td></tr></table></figure><h2 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h2><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">codeblock:</span></span><br><span class="line">  <span class="comment"># Code Highlight theme</span></span><br><span class="line">  <span class="comment"># Available values: normal | night | night eighties | night blue | night bright</span></span><br><span class="line">  <span class="comment"># See: https://github.com/chriskempson/tomorrow-theme</span></span><br><span class="line"><span class="attr">  highlight_theme:</span> <span class="string">normal</span></span><br><span class="line">  <span class="comment"># Add copy button on codeblock</span></span><br><span class="line"><span class="attr">  copy_button:</span></span><br><span class="line"><span class="attr">    enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="comment"># Show text copy result.</span></span><br><span class="line"><span class="attr">    show_result:</span> <span class="literal">true</span></span><br><span class="line">    <span class="comment"># Available values: default | flat | mac</span></span><br><span class="line"><span class="attr">    style:</span></span><br></pre></td></tr></table></figure><h2 id="上传附件"><a href="#上传附件" class="headerlink" title="上传附件"></a>上传附件</h2><ul><li>在source下创建download文件夹，把附件放到这个文件夹下</li><li>最后在文章中按照markdown的格式引入即可<code>[点击下载](/download/xxx)</code></li></ul><h2 id="添加百度收录"><a href="#添加百度收录" class="headerlink" title="添加百度收录"></a>添加百度收录</h2><p>到百度站点管理提交你的站点获得一个token<br>在<code>_config.yml</code>中配置<code>baidu_site_verification:</code></p><h2 id="第三方插件"><a href="#第三方插件" class="headerlink" title="第三方插件"></a>第三方插件</h2><p><strong>以下配置特别注意，如果配置了CDN以CDN的配置为准</strong></p><h3 id="fancybox"><a href="#fancybox" class="headerlink" title="fancybox"></a>fancybox</h3><p><strong>图片放大功能</strong><br>在next目录下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/theme-next/theme-next-fancybox3 <span class="built_in">source</span>/lib/fancybox</span><br></pre></td></tr></table></figure><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">fancybox:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><h3 id="gitalk"><a href="#gitalk" class="headerlink" title="gitalk"></a>gitalk</h3><p>在github申请一个<br><img src="https://i.loli.net/2019/07/30/5d3fb65f8ee0361580.jpg" alt><br>得到<code>client_id</code>和<code>client_secret</code></p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">gitalk:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  github_id:</span> <span class="number">0xE4</span><span class="string">s0n</span> <span class="comment"># Github repo owner</span></span><br><span class="line"><span class="attr">  repo:</span> <span class="number">0xE4</span><span class="string">s0n.github.io</span> <span class="comment"># Repository name to store issues</span></span><br><span class="line"><span class="attr">  client_id:</span> <span class="string">xxxxx</span> <span class="comment"># Github Application Client ID</span></span><br><span class="line"><span class="attr">  client_secret:</span> <span class="string">xxxxxx</span> <span class="comment"># Github Application Client Secret</span></span><br><span class="line"><span class="attr">  admin_user:</span> <span class="number">0xE4</span><span class="string">s0n</span> <span class="comment"># GitHub repo owner and collaborators, only these guys can initialize github issues</span></span><br><span class="line"><span class="attr">  distraction_free_mode:</span> <span class="literal">true</span> <span class="comment"># Facebook-like distraction free mode</span></span><br><span class="line">  <span class="comment"># Gitalk's display language depends on user's browser or system environment</span></span><br><span class="line">  <span class="comment"># If you want everyone visiting your site to see a uniform language, you can set a force language value</span></span><br><span class="line">  <span class="comment"># Available values: en, es-ES, fr, ru, zh-CN, zh-TW</span></span><br><span class="line"><span class="attr">  language:</span> <span class="string">zh-CN</span></span><br></pre></td></tr></table></figure><h3 id="不蒜子访客统计"><a href="#不蒜子访客统计" class="headerlink" title="不蒜子访客统计"></a>不蒜子访客统计</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 访客人数统计</span></span><br><span class="line"><span class="attr">busuanzi_count:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  total_visitors:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  total_visitors_icon:</span> <span class="string">user</span></span><br><span class="line"><span class="attr">  total_views:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  total_views_icon:</span> <span class="string">eye</span></span><br><span class="line"><span class="attr">  post_views:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  post_views_icon:</span> <span class="string">eye</span></span><br></pre></td></tr></table></figure><p><strong>更改显示样式</strong></p><p>更改<code>blog\themes\next\layout\_partials\analytics\busuanzi-counter.swig</code>下布局</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&#123;%- if theme.busuanzi_count.enable %&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"busuanzi-count"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">async</span> <span class="attr">src</span>=<span class="string">"https://busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  &#123;%- if theme.busuanzi_count.total_visitors %&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"post-meta-item-icon"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-&#123;&#123; theme.busuanzi_count.total_visitors_icon &#125;&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"site-uv"</span> <span class="attr">title</span>=<span class="string">"&#123;&#123; __('footer.total_visitors') &#125;&#125;"</span>&gt;</span></span><br><span class="line">      访客：<span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"busuanzi-value"</span> <span class="attr">id</span>=<span class="string">"busuanzi_value_site_uv"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">  &#123;%- endif %&#125;</span><br><span class="line"></span><br><span class="line">  &#123;%- if theme.busuanzi_count.total_visitors and theme.busuanzi_count.total_views %&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"post-meta-divider"</span>&gt;</span>|<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">  &#123;%- endif %&#125;</span><br><span class="line"></span><br><span class="line">  &#123;%- if theme.busuanzi_count.total_views %&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"post-meta-item-icon"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-&#123;&#123; theme.busuanzi_count.total_views_icon &#125;&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"site-pv"</span> <span class="attr">title</span>=<span class="string">"&#123;&#123; __('footer.total_views') &#125;&#125;"</span>&gt;</span></span><br><span class="line">      浏览次数：<span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"busuanzi-value"</span> <span class="attr">id</span>=<span class="string">"busuanzi_value_site_pv"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">  &#123;%- endif %&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">&#123;%- endif %&#125;</span><br></pre></td></tr></table></figure><h3 id="本地搜索"><a href="#本地搜索" class="headerlink" title="本地搜索"></a>本地搜索</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">local_search:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># If auto, trigger search by changing input.</span></span><br><span class="line">  <span class="comment"># If manual, trigger search by pressing enter key or search button.</span></span><br><span class="line"><span class="attr">  trigger:</span> <span class="string">auto</span></span><br><span class="line">  <span class="comment"># Show top n results per article, show all results by setting to -1</span></span><br><span class="line"><span class="attr">  top_n_per_article:</span> <span class="number">1</span></span><br><span class="line">  <span class="comment"># Unescape html strings to the readable one.</span></span><br><span class="line"><span class="attr">  unescape:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># Preload the search data when the page loads.</span></span><br><span class="line"><span class="attr">  preload:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure><h3 id="背景动画"><a href="#背景动画" class="headerlink" title="背景动画"></a>背景动画</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/theme-next/theme-next-three <span class="built_in">source</span>/lib/three</span><br></pre></td></tr></table></figure><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># JavaScript 3D library.</span></span><br><span class="line"><span class="comment"># Dependencies: https://github.com/theme-next/theme-next-three</span></span><br><span class="line"><span class="attr">three:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  delay:</span> <span class="literal">false</span> <span class="comment"># Set true to further delay loading</span></span><br><span class="line"><span class="attr">  three_waves:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">  canvas_lines:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">  canvas_sphere:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><h2 id="添加看板娘"><a href="#添加看板娘" class="headerlink" title="添加看板娘"></a>添加看板娘</h2><h3 id="官方低配版"><a href="#官方低配版" class="headerlink" title="官方低配版"></a>官方低配版</h3><p><a href="https://github.com/EYHN/hexo-helper-live2d/blob/HEAD/README.zh-CN.md" target="_blank" rel="noopener">项目地址</a> <a href="https://www.cnblogs.com/Friends-A/p/11054968.html#live2dwidgetmodelkoharu_30" target="_blank" rel="noopener">模型预览</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-helper-live2d</span><br></pre></td></tr></table></figure><p>在博客根目录下的<code>_config.yml</code>中配置</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">live2d:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  scriptFrom:</span> <span class="string">local</span></span><br><span class="line"><span class="attr">  pluginRootPath:</span> <span class="string">live2dw/</span></span><br><span class="line"><span class="attr">  pluginJsPath:</span> <span class="string">lib/</span></span><br><span class="line"><span class="attr">  pluginModelPath:</span> <span class="string">assets/</span></span><br><span class="line"><span class="attr">  tagMode:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">  debug:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">  model:</span></span><br><span class="line"><span class="attr">    use:</span> <span class="string">live2d-widget-model-shizuku</span></span><br><span class="line"><span class="attr">  display:</span></span><br><span class="line"><span class="attr">    position:</span> <span class="string">right</span></span><br><span class="line"><span class="attr">    width:</span> <span class="number">150</span></span><br><span class="line"><span class="attr">    height:</span> <span class="number">300</span></span><br><span class="line"><span class="attr">  mobile:</span></span><br><span class="line"><span class="attr">    show:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  react:</span></span><br><span class="line"><span class="attr">    opacity:</span> <span class="number">0.7</span></span><br></pre></td></tr></table></figure><h3 id="再开发高配版"><a href="#再开发高配版" class="headerlink" title="再开发高配版"></a>再开发高配版</h3><p>1.下载 <a href="https://github.com/stevenjoezhang/live2d-widget" target="_blank" rel="noopener">张书樵大神的项目</a>，解压到本地博客目录的<code>themes/next/source</code>下，修改<code>autoload.js</code>文件</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> live2d_path = <span class="string">"/live2d-widget/"</span>;</span><br></pre></td></tr></table></figure><p>2.在<code>/themes/next/layout/_layout.swing</code>中,新增如下内容：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"/live2d-widget/autoload.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>3.在配置文件中,新增如下内容：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">live2d:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>4.想修改看板娘大小、位置、格式、文本内容等，可查看并修改<code>waifu-tips.js</code>、<code>waifu-tips.json</code>和<code>waifu.css</code></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#waifu</span> &#123;</span><br><span class="line"><span class="attribute">position</span>: fixed;</span><br><span class="line"><span class="attribute">bottom</span>: -<span class="number">1000px</span>;</span><br><span class="line"><span class="comment">/* left: 0; */</span></span><br><span class="line"><span class="attribute">right</span>: <span class="number">20px</span>;</span><br><span class="line"><span class="attribute">z-index</span>: <span class="number">1</span>;</span><br><span class="line"><span class="attribute">line-height</span>: <span class="number">0</span>;</span><br><span class="line"><span class="attribute">transition</span>: transform .<span class="number">3s</span> ease-in-out;</span><br><span class="line"><span class="attribute">transform</span>: <span class="built_in">translateY</span>(3px);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="显示网站运行时间"><a href="#显示网站运行时间" class="headerlink" title="显示网站运行时间"></a>显示网站运行时间</h2><p>在<code>blog\themes\next\layout\_partials\footer.swig</code>末尾添加</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"days"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">show_date_time</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">    <span class="built_in">window</span>.setTimeout(<span class="string">"show_date_time()"</span>, <span class="number">1000</span>);</span></span><br><span class="line"><span class="javascript">    BirthDay=<span class="keyword">new</span> <span class="built_in">Date</span>(<span class="string">"04/17/2017 15:13:14"</span>);<span class="comment">//修改为自己的blog建站时间</span></span></span><br><span class="line"><span class="javascript">    today=<span class="keyword">new</span> <span class="built_in">Date</span>();</span></span><br><span class="line">    timeold=(today.getTime()-BirthDay.getTime());</span><br><span class="line">    sectimeold=timeold/1000</span><br><span class="line"><span class="javascript">    secondsold=<span class="built_in">Math</span>.floor(sectimeold);</span></span><br><span class="line">    msPerDay=24*60*60*1000</span><br><span class="line">    e_daysold=timeold/msPerDay</span><br><span class="line"><span class="javascript">    daysold=<span class="built_in">Math</span>.floor(e_daysold);</span></span><br><span class="line">    e_hrsold=(e_daysold-daysold)*24;</span><br><span class="line"><span class="javascript">    hrsold=setzero(<span class="built_in">Math</span>.floor(e_hrsold));</span></span><br><span class="line">    e_minsold=(e_hrsold-hrsold)*60;</span><br><span class="line"><span class="javascript">    minsold=setzero(<span class="built_in">Math</span>.floor((e_hrsold-hrsold)*<span class="number">60</span>));</span></span><br><span class="line"><span class="javascript">    seconds=setzero(<span class="built_in">Math</span>.floor((e_minsold-minsold)*<span class="number">60</span>));</span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.getElementById(<span class="string">'days'</span>).innerHTML=<span class="string">"已运行"</span>+daysold+<span class="string">"天"</span>+hrsold+<span class="string">"小时"</span>+minsold+<span class="string">"分"</span>+seconds+<span class="string">"秒"</span>;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">setzero</span>(<span class="params">i</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">if</span> (i&lt;<span class="number">10</span>)</span></span><br><span class="line"><span class="javascript">    &#123;i=<span class="string">"0"</span> + i&#125;;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">return</span> i;</span></span><br><span class="line">&#125;</span><br><span class="line">show_date_time();</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="配置主题"><a href="#配置主题" class="headerlink" title="配置主题"></a>配置主题</h2><ul><li><strong>布局在<code>blog\themes\next\layout\</code>文件夹下</strong>  </li><li><strong>配色等在<code>blog\themes\next\source\</code>文件夹下</strong>  </li><li><strong>主题的配置在<code>blog\themes\next\source\css\_schemes</code>,对应变量在<code>blog\themes\next\source\css\_variables</code></strong></li></ul><h3 id="配置背景"><a href="#配置背景" class="headerlink" title="配置背景"></a>配置背景</h3><p><strong><code>blog\themes\next\source\css\_common\scaffolding\base</code></strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">body &#123;</span><br><span class="line">  position: relative; // Required by scrollspy</span><br><span class="line">  font-family: $font-family-base;</span><br><span class="line">  font-size: $font-size-small;</span><br><span class="line">  line-height: $line-height-base;</span><br><span class="line">  color: $text-color;</span><br><span class="line">  background:url(/images/background.png);</span><br><span class="line">  background-repeat: no-repeat;</span><br><span class="line">  background-attachment:fixed;</span><br><span class="line">  background-position:50% 50%;</span><br><span class="line">  background-size: cover;</span><br><span class="line">  -webkit-background-size: cover;</span><br><span class="line">  -o-background-size: cover;</span><br><span class="line">  -moz-background-size: cover;</span><br><span class="line">  -ms-background-size: cover;</span><br><span class="line">  +tablet-mobile() &#123; padding-right: 0 !important; &#125;</span><br><span class="line">  +desktop-large() &#123; font-size: $font-size-medium; &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="圆角"><a href="#圆角" class="headerlink" title="圆角"></a>圆角</h3><ul><li><p><strong>主板块</strong><br><code>blog\themes\next\source\css\_schemes\Pisces\_layout.styl</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">.content-wrap &#123;</span><br><span class="line">  float: right;</span><br><span class="line">  box-sizing: border-box;</span><br><span class="line">  padding: $content-desktop-padding;</span><br><span class="line">  width: $content-wrap;</span><br><span class="line">  background: rgba(255,255,255,0.5);</span><br><span class="line">  min-height: 700px;</span><br><span class="line">  box-shadow: $box-shadow-inner;</span><br><span class="line">  border-radius: 16px;</span><br><span class="line"></span><br><span class="line">  +tablet() &#123;</span><br><span class="line">    width: 100%;</span><br><span class="line">    padding: 20px;</span><br><span class="line">    border-radius: initial;</span><br><span class="line">  &#125;</span><br><span class="line">  +mobile() &#123;</span><br><span class="line">    width: 100%;</span><br><span class="line">    padding: 20px;</span><br><span class="line">    min-height: auto;</span><br><span class="line">    border-radius: initial;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><strong>侧边</strong><br><code>blog\themes\next\source\css\_schemes\Pisces\_sidebar.styl</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">.sidebar-inner &#123;</span><br><span class="line">  //padding: 20px 10px 0;</span><br><span class="line">  box-sizing: border-box;</span><br><span class="line">  width: $sidebar-desktop;</span><br><span class="line">  color: $text-color;</span><br><span class="line">  background: white;</span><br><span class="line">  box-shadow: $box-shadow;</span><br><span class="line">  border-radius: $border-radius;</span><br><span class="line">  if (hexo-config(&apos;motion.enable&apos;) and hexo-config(&apos;motion.transition.sidebar&apos;)) &#123; opacity: 0; &#125;</span><br><span class="line"></span><br><span class="line">  &amp;.affix &#123;</span><br><span class="line">    position: fixed;</span><br><span class="line">    top: $sidebar-offset;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  &amp;.affix-bottom &#123;</span><br><span class="line">    position: absolute;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p><code>blog\themes\next\source\css\_common\components\back-to-top.styl</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">.back-to-top &#123;</span><br><span class="line">  visibility: hidden;</span><br><span class="line">  margin: (20px - $sidebar-offset) -10px -20px;</span><br><span class="line">  background: $b2t-sidebar-bg-color;</span><br><span class="line">  font-size: $b2t-font-size;</span><br><span class="line">  opacity: $b2t-opacity;</span><br><span class="line">  cursor: pointer;</span><br><span class="line">  text-align: center;</span><br><span class="line">  border-radius: $border-radius</span><br><span class="line">  &amp;:hover &#123; opacity: $b2t-opacity-hover; &#125;</span><br><span class="line"></span><br><span class="line">  +tablet-mobile() &#123;</span><br><span class="line">    hide() if not hexo-config(&apos;sidebar.onmobile&apos;);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  &amp;.back-to-top-on &#123;</span><br><span class="line">    visibility: visible;</span><br><span class="line">    the-transition();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>blog\themes\next\source\css\_schemes\Pisces\_layout.styl</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">.sidebar &#123;</span><br><span class="line">  position: static;</span><br><span class="line">  float: left;</span><br><span class="line">  margin-left: -100%;</span><br><span class="line">  width: $sidebar-desktop;</span><br><span class="line">  background: $body-bg-color;</span><br><span class="line">  box-shadow: none</span><br><span class="line">  border-radius: $border-radius;</span><br><span class="line"></span><br><span class="line">  +tablet-mobile() &#123;</span><br><span class="line">    hide();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;准备工作&quot;&gt;&lt;a href=&quot;#准备工作&quot; class=&quot;headerlink&quot; title=&quot;准备工作&quot;&gt;&lt;/a&gt;准备工作&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;http://blog.haoji.me/build-blog-website-by-hexo-githu</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>2019暑假任务———CTF_GAME</title>
    <link href="http://0xe4s0n.github.io/2019%E6%9A%91%E5%81%87%E4%BB%BB%E5%8A%A1%E2%80%94%E2%80%94%E2%80%94CTF-GAME.html"/>
    <id>http://0xe4s0n.github.io/2019%E6%9A%91%E5%81%87%E4%BB%BB%E5%8A%A1%E2%80%94%E2%80%94%E2%80%94CTF-GAME.html</id>
    <published>2019-07-28T11:41:24.000Z</published>
    <updated>2019-07-28T13:57:06.303Z</updated>
    
    <content type="html"><![CDATA[<h1 id="CTF-GAME"><a href="#CTF-GAME" class="headerlink" title="CTF_GAME"></a>CTF_GAME</h1><p>运行程序可以看见是一个类似夹娃娃机的程序</p><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> __<span class="function">fastcall <span class="title">main</span><span class="params">(__int64 a1, <span class="keyword">char</span> **a2, <span class="keyword">char</span> **a3)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  __int64 v3; <span class="comment">// rdx</span></span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">int</span> seed; <span class="comment">// eax</span></span><br><span class="line">  __int64 seed_1; <span class="comment">// rdi</span></span><br><span class="line">  __int64 v6; <span class="comment">// rdx</span></span><br><span class="line">  __int64 input_1; <span class="comment">// rdx</span></span><br><span class="line">  __int64 v8; <span class="comment">// rdx</span></span><br><span class="line">  __int64 v9; <span class="comment">// rdx</span></span><br><span class="line">  <span class="keyword">int</span> v10; <span class="comment">// ST14_4</span></span><br><span class="line">  <span class="keyword">int</span> v11; <span class="comment">// [rsp+10h] [rbp-30h]</span></span><br><span class="line">  <span class="keyword">char</span> input; <span class="comment">// [rsp+3Bh] [rbp-5h]</span></span><br><span class="line">  __int64 retaddr; <span class="comment">// [rsp+48h] [rbp+8h]</span></span><br><span class="line"></span><br><span class="line">  _tsan_func_entry(retaddr, a2, a3);</span><br><span class="line">  welcome(retaddr, a2, v3);</span><br><span class="line">  seed = time(<span class="number">0L</span>L);</span><br><span class="line">  seed_1 = seed;</span><br><span class="line">  srand(seed);</span><br><span class="line">  init_game(seed_1, a2, v6);</span><br><span class="line">  <span class="keyword">while</span> ( <span class="number">1</span> )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">    &#123;</span><br><span class="line">      input = getchar();</span><br><span class="line">      input_1 = input;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> ( input_1 == <span class="string">'\n'</span> );</span><br><span class="line">    <span class="keyword">switch</span> ( input )</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">case</span> <span class="string">'a'</span>:</span><br><span class="line">        left(seed_1, a2, input_1);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="string">'d'</span>:</span><br><span class="line">        right(seed_1, a2, input_1);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="string">'s'</span>:</span><br><span class="line">        <span class="keyword">catch</span>(seed_1, a2, input_1);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="string">'v'</span>:</span><br><span class="line">        _tsan_read1(&amp;isdebug);</span><br><span class="line">        <span class="keyword">if</span> ( isdebug &amp; <span class="number">1</span> )</span><br><span class="line">        &#123;</span><br><span class="line">          debugmode(&amp;isdebug, a2, v8);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">          <span class="built_in">printf</span>(<span class="string">"not debug mode\n"</span>);</span><br><span class="line">          sleep(<span class="number">1L</span>L);</span><br><span class="line">          init_game(<span class="number">1L</span>L, a2, v9);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">default</span>:</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    _tsan_read4(&amp;life);</span><br><span class="line">    <span class="keyword">if</span> ( life &lt;= <span class="number">0</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">"you are out of life, please restart the game\n"</span>);</span><br><span class="line">      <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    v10 = input_num + <span class="number">1</span>;</span><br><span class="line">    _tsan_write4(&amp;input_num);</span><br><span class="line">    input_num = v10;</span><br><span class="line">    _tsan_read4(&amp;input_num);</span><br><span class="line">    seed_1 = &amp;level;</span><br><span class="line">    v11 = input_num;</span><br><span class="line">    _tsan_read4(&amp;level);</span><br><span class="line">    <span class="keyword">if</span> ( v11 &gt; <span class="number">5</span> - level )</span><br><span class="line">      refresh_flag_position(&amp;level, a2, v11);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在welcome函数中有开启三个线程来检查程序是否被更改</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pthread_create(&amp;v5, <span class="number">0L</span>L, check_if_debug_is_be_hack, <span class="number">0L</span>L);</span><br><span class="line">pthread_create(&amp;v6, <span class="number">0L</span>L, check_if_level_is_be_hack, <span class="number">0L</span>L);</span><br><span class="line">pthread_create(&amp;v7, <span class="number">0L</span>L, check_if_life_is_be_hack, <span class="number">0L</span>L);</span><br></pre></td></tr></table></figure><p><code>check_if_debug_is_be_hack</code>函数检查debug是否开启<br><code>check_if_level_is_be_hack</code>函数检查level是否大于5，与一个level增加会减少的值是否正常<br><code>check_if_life_is_be_hack</code>函数life是否大于6小于0<br>如果在一个线程中发现异常则程序退出</p><p>输入’a’,’d’指令后抓钩会相应移动，输入’v’可进入debug模式</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">switch</span> ( input )</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">case</span> <span class="string">'a'</span>:</span><br><span class="line">        left(seed_1, a2, input_1);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="string">'d'</span>:</span><br><span class="line">        right(seed_1, a2, input_1);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="string">'s'</span>:</span><br><span class="line">        <span class="keyword">catch</span>(seed_1, a2, input_1);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="string">'v'</span>:</span><br><span class="line">        _tsan_read1(&amp;isdebug);</span><br><span class="line">        <span class="keyword">if</span> ( isdebug &amp; <span class="number">1</span> )</span><br><span class="line">        &#123;</span><br><span class="line">          debugmode(&amp;isdebug, a2, v10);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">          <span class="built_in">printf</span>(<span class="string">"not debug mode\n"</span>);</span><br><span class="line">          sleep(<span class="number">1L</span>L);</span><br><span class="line">          init_game(<span class="number">1L</span>L, a2, v11);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">default</span>:</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>由于debug模式未开启<code>isdebug</code>为0，不能进入<code>debugmode</code></p><h2 id="开始破解"><a href="#开始破解" class="headerlink" title="开始破解"></a>开始破解</h2><p>用ida-patch将程序逻辑更改如下,直接进入<code>debugmode</code></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">case</span> <span class="string">'v'</span>:</span><br><span class="line">          debugmode(&amp;isdebug, a2, v10);</span><br><span class="line">        <span class="keyword">break</span>;</span><br></pre></td></tr></table></figure><p>并且更改<code>check_if_debug_is_be_hack</code>逻辑</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">    ;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>并且进入<code>debugmode</code>后，可以看见里面还有一层检测，更改如下</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> ( <span class="number">1</span> )</span><br><span class="line">  &#123;</span><br><span class="line">    ...</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>程序运行后键入v进入<code>debugmode</code></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">__int64 __<span class="function">fastcall <span class="title">debugmode</span><span class="params">(__int64 a1, __int64 a2, __int64 a3)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">char</span> *v3; <span class="comment">// rdi</span></span><br><span class="line">  __int64 v4; <span class="comment">// rdx</span></span><br><span class="line">  __int64 v5; <span class="comment">// rcx</span></span><br><span class="line">  __int64 v6; <span class="comment">// r8</span></span><br><span class="line">  __int64 v7; <span class="comment">// r9</span></span><br><span class="line">  __int64 v8; <span class="comment">// rdx</span></span><br><span class="line">  <span class="keyword">char</span> v10; <span class="comment">// [rsp+3Fh] [rbp-1h]</span></span><br><span class="line">  <span class="keyword">void</span> *retaddr; <span class="comment">// [rsp+48h] [rbp+8h]</span></span><br><span class="line"></span><br><span class="line">  _tsan_func_entry(retaddr, a2, a3);</span><br><span class="line">  v3 = &amp;isdebug;</span><br><span class="line">  _tsan_read1(&amp;isdebug);</span><br><span class="line">  <span class="keyword">if</span> ( isdebug &amp; <span class="number">1</span> )</span><br><span class="line">  &#123;</span><br><span class="line">    sub_55CD48C27F20(&amp;isdebug, a2, v4);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"warning:only for debug\n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"1 Add life\n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"2 Level up\n"</span>);</span><br><span class="line">    v3 = <span class="string">"3 Debug on\n"</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"3 Debug on\n"</span>);</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">    &#123;</span><br><span class="line">      v10 = getchar();</span><br><span class="line">      v8 = v10;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> ( v8 == <span class="number">10</span> );</span><br><span class="line">    <span class="keyword">switch</span> ( v10 )</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">case</span> <span class="string">'1'</span>:</span><br><span class="line">        add_life(<span class="string">"3 Debug on\n"</span>, a2, v8);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="string">'2'</span>:</span><br><span class="line">        level_up(<span class="string">"3 Debug on\n"</span>, a2, v8);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="string">'3'</span>:</span><br><span class="line">        debug_on(<span class="string">"3 Debug on\n"</span>, a2, v8);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    init_game(<span class="string">"3 Debug on\n"</span>, a2, v8);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> _tsan_func_exit(v3, a2, v4, v5, v6, v7);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>选择<code>Debug on</code>即可开启debug模式，然后选择<code>Level up</code>，最多可将level加至4</p><p>更改<code>level_up</code>中的代码</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">__int64 __<span class="function">fastcall <span class="title">level_up</span><span class="params">(__int64 a1, <span class="keyword">signed</span> __int64 a2, __int64 a3)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">char</span> *v3; <span class="comment">// rdi</span></span><br><span class="line">  __int64 v4; <span class="comment">// rdx</span></span><br><span class="line">  __int64 v5; <span class="comment">// rcx</span></span><br><span class="line">  __int64 v6; <span class="comment">// r8</span></span><br><span class="line">  __int64 v7; <span class="comment">// r9</span></span><br><span class="line">  <span class="keyword">int</span> v8; <span class="comment">// ST14_4</span></span><br><span class="line">  <span class="keyword">int</span> v9; <span class="comment">// ST10_4</span></span><br><span class="line">  __int64 v10; <span class="comment">// rdx</span></span><br><span class="line">  <span class="keyword">void</span> *retaddr; <span class="comment">// [rsp+28h] [rbp+8h]</span></span><br><span class="line"></span><br><span class="line">  _tsan_func_entry(retaddr, a2, a3);</span><br><span class="line">  v3 = &amp;isdebug;</span><br><span class="line">  _tsan_read1(&amp;isdebug);</span><br><span class="line">  <span class="keyword">if</span> ( isdebug &amp; <span class="number">1</span> )</span><br><span class="line">  &#123;</span><br><span class="line">    pthread_mutex_lock(&amp;unk_55CD49909A50);</span><br><span class="line">    _tsan_read4(&amp;safe_code);</span><br><span class="line">    <span class="keyword">if</span> ( safe_code &gt; <span class="number">0</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      v8 = level + <span class="number">1</span>;</span><br><span class="line">      _tsan_write4(&amp;level);</span><br><span class="line">      level = v8;</span><br><span class="line">      v9 = safe_code - <span class="number">1</span>;</span><br><span class="line">      _tsan_write4(&amp;safe_code);</span><br><span class="line">      safe_code = v9;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">"Out of scopee\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    v3 = &amp;unk_55CD49909A50;</span><br><span class="line">    pthread_mutex_unlock(&amp;unk_55CD49909A50);</span><br><span class="line">    init_game(&amp;unk_55CD49909A50, a2, v10);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> _tsan_func_exit(v3, a2, v4, v5, v6, v7);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>改为</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> ( safe_code &gt;= <span class="number">0</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      v8 = level + <span class="number">1</span>;</span><br><span class="line">      _tsan_write4(&amp;level);</span><br><span class="line">      level = v8;</span><br><span class="line">      v9 = safe_code - <span class="number">1</span>;</span><br><span class="line">      _tsan_write4(&amp;safe_code);</span><br><span class="line">      safe_code = v9;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>经测试无用，于是最后一个level尝试手动通过</p><p>删除main函数中刷新flag位置的函数</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> ( v11 &gt; <span class="number">5</span> - level )</span><br><span class="line">      refresh_flag_position(&amp;level, a2, v11);</span><br></pre></td></tr></table></figure><p>更改<code>catch</code>函数中对于抓取的判定</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br></pre></td><td class="code"><pre><span class="line">__int64 __<span class="function">fastcall <span class="title">catch</span><span class="params">(__int64 a1, __int64 a2, __int64 a3)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> v3; <span class="comment">// ST7C_4</span></span><br><span class="line">  __int64 v4; <span class="comment">// rsi</span></span><br><span class="line">  __int64 v5; <span class="comment">// rdx</span></span><br><span class="line">  <span class="keyword">int</span> v6; <span class="comment">// ST78_4</span></span><br><span class="line">  __int64 v7; <span class="comment">// rdx</span></span><br><span class="line">  <span class="keyword">int</span> v8; <span class="comment">// ST70_4</span></span><br><span class="line">  <span class="keyword">int</span> v9; <span class="comment">// ST6C_4</span></span><br><span class="line">  <span class="keyword">int</span> v10; <span class="comment">// ST68_4</span></span><br><span class="line">  <span class="keyword">int</span> *v11; <span class="comment">// rdi</span></span><br><span class="line">  __int64 v12; <span class="comment">// rdx</span></span><br><span class="line">  <span class="keyword">int</span> v13; <span class="comment">// ST64_4</span></span><br><span class="line">  <span class="keyword">int</span> v14; <span class="comment">// eax</span></span><br><span class="line">  __int64 v15; <span class="comment">// rdx</span></span><br><span class="line">  <span class="keyword">int</span> v16; <span class="comment">// ST5C_4</span></span><br><span class="line">  <span class="keyword">int</span> v17; <span class="comment">// ST50_4</span></span><br><span class="line">  <span class="keyword">int</span> v18; <span class="comment">// ST4C_4</span></span><br><span class="line">  __int64 v19; <span class="comment">// ST38_8</span></span><br><span class="line">  __int64 v20; <span class="comment">// rdx</span></span><br><span class="line">  __int64 v21; <span class="comment">// rdx</span></span><br><span class="line">  __int64 v22; <span class="comment">// rcx</span></span><br><span class="line">  __int64 v23; <span class="comment">// r8</span></span><br><span class="line">  __int64 v24; <span class="comment">// r9</span></span><br><span class="line">  <span class="keyword">int</span> v25; <span class="comment">// ST18_4</span></span><br><span class="line">  __int64 v26; <span class="comment">// rdx</span></span><br><span class="line">  <span class="keyword">char</span> v28; <span class="comment">// [rsp+83h] [rbp-Dh]</span></span><br><span class="line">  <span class="keyword">int</span> i; <span class="comment">// [rsp+88h] [rbp-8h]</span></span><br><span class="line">  <span class="keyword">int</span> j; <span class="comment">// [rsp+88h] [rbp-8h]</span></span><br><span class="line">  <span class="keyword">int</span> v31; <span class="comment">// [rsp+8Ch] [rbp-4h]</span></span><br><span class="line">  <span class="keyword">void</span> *retaddr; <span class="comment">// [rsp+98h] [rbp+8h]</span></span><br><span class="line"></span><br><span class="line">  _tsan_func_entry(retaddr, a2, a3);</span><br><span class="line">  _tsan_read4(&amp;position_x);</span><br><span class="line">  v3 = position_x;</span><br><span class="line">  _tsan_read4(&amp;flagx);</span><br><span class="line">  v4 = v3 == flagx;</span><br><span class="line">  v31 = <span class="number">6</span> - v4;</span><br><span class="line">  <span class="keyword">for</span> ( i = <span class="number">0</span>; i &lt; v31 - <span class="number">1</span>; ++i )               <span class="comment">// 抓取动画_下</span></span><br><span class="line">  &#123;</span><br><span class="line">    _tsan_read4(&amp;position_y);</span><br><span class="line">    <span class="keyword">if</span> ( position_y &lt; <span class="number">5</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      v6 = position_y + <span class="number">1</span>;</span><br><span class="line">      _tsan_write4(&amp;position_y);</span><br><span class="line">      position_y = v6;</span><br><span class="line">    &#125;</span><br><span class="line">    sub_55CD48C27F20(&amp;position_y, v4, v5);</span><br><span class="line">    draw(&amp;position_y, v4, v7);</span><br><span class="line">    usleep(<span class="number">100000L</span>L);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> ( v31 == <span class="number">6</span> )                               <span class="comment">// x不同</span></span><br><span class="line">    <span class="keyword">goto</span> LABEL_30;</span><br><span class="line">  v28 = <span class="number">1</span>;</span><br><span class="line">  <span class="keyword">for</span> ( j = <span class="number">0</span>; j &lt; v31 - <span class="number">1</span>; ++j )               <span class="comment">// //抓取动画_上</span></span><br><span class="line">  &#123;</span><br><span class="line">    _tsan_read4(&amp;position_y);</span><br><span class="line">    <span class="keyword">if</span> ( position_y &gt; <span class="number">0</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      v8 = position_y - <span class="number">1</span>;</span><br><span class="line">      _tsan_write4(&amp;position_y);</span><br><span class="line">      position_y = v8;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ( v28 &amp; <span class="number">1</span> )                              <span class="comment">// flag抓取</span></span><br><span class="line">    &#123;</span><br><span class="line">      _tsan_read4(&amp;flagy);</span><br><span class="line">      <span class="keyword">if</span> ( flagy &gt; <span class="number">1</span> )</span><br><span class="line">      &#123;</span><br><span class="line">        v9 = flagy - <span class="number">1</span>;</span><br><span class="line">        _tsan_write4(&amp;flagy);</span><br><span class="line">        flagy = v9;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>                                        <span class="comment">// flag掉落</span></span><br><span class="line">    &#123;</span><br><span class="line">      _tsan_read4(&amp;flagy);</span><br><span class="line">      <span class="keyword">if</span> ( flagy &lt; <span class="number">5</span> )</span><br><span class="line">      &#123;</span><br><span class="line">        v10 = flagy + <span class="number">1</span>;</span><br><span class="line">        _tsan_write4(&amp;flagy);</span><br><span class="line">        flagy = v10;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    v11 = &amp;position_y;</span><br><span class="line">    _tsan_read4(&amp;position_y);</span><br><span class="line">    <span class="keyword">if</span> ( position_y == <span class="number">2</span> )                      <span class="comment">// F到第三排时</span></span><br><span class="line">    &#123;</span><br><span class="line">      v11 = &amp;safe_code;</span><br><span class="line">      _tsan_read4(&amp;safe_code);</span><br><span class="line">      v13 = safe_code;</span><br><span class="line">      v14 = rand();</span><br><span class="line">      v12 = (v14 &gt;&gt; <span class="number">31</span>);</span><br><span class="line">      LODWORD(v12) = v14 % <span class="number">6</span>;</span><br><span class="line">      <span class="keyword">if</span> ( v13 &lt; v14 % <span class="number">6</span> )                      <span class="comment">// 随机数大于safecode就未成功抓取</span></span><br><span class="line">        v28 = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    sub_55CD48C27F20(v11, v4, v12);</span><br><span class="line">    draw(v11, v4, v15);</span><br><span class="line">    usleep(<span class="number">500000L</span>L);</span><br><span class="line">  &#125;</span><br><span class="line">  _tsan_read4(&amp;flagy);</span><br><span class="line">  <span class="keyword">if</span> ( flagy != <span class="number">1</span> || (_tsan_read4(&amp;position_x), v16 = position_x, _tsan_read4(&amp;flagx), v16 != flagx) )</span><br><span class="line">  &#123;</span><br><span class="line">LABEL_30:</span><br><span class="line">    pthread_mutex_lock(&amp;unk_55CD49909A78);</span><br><span class="line">    v25 = life - <span class="number">1</span>;</span><br><span class="line">    _tsan_write4(&amp;life);</span><br><span class="line">    life = v25;</span><br><span class="line">    pthread_mutex_unlock(&amp;unk_55CD49909A78);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"sorry you miss it\n"</span>);</span><br><span class="line">    sleep(<span class="number">1L</span>L);</span><br><span class="line">    init_game(<span class="number">1L</span>L, v4, v26);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  &#123;</span><br><span class="line">    sleep(<span class="number">1L</span>L);</span><br><span class="line">    pthread_mutex_lock(&amp;unk_55CD49909A50);</span><br><span class="line">    v17 = safe_code - <span class="number">1</span>;</span><br><span class="line">    _tsan_write4(&amp;safe_code);</span><br><span class="line">    safe_code = v17;</span><br><span class="line">    v18 = level + <span class="number">1</span>;</span><br><span class="line">    _tsan_write4(&amp;level);</span><br><span class="line">    level = v18;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"you get one!\n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"level UP!\n"</span>);</span><br><span class="line">    v19 = X0Y0 + <span class="number">23</span>;</span><br><span class="line">    _tsan_write8(&amp;X0Y0);</span><br><span class="line">    X0Y0 = v19;</span><br><span class="line">    _tsan_read4(&amp;level);</span><br><span class="line">    <span class="keyword">if</span> ( level == <span class="number">5</span> )</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">"You win!\n"</span>);</span><br><span class="line">    pthread_mutex_unlock(&amp;unk_55CD49909A50);</span><br><span class="line">    sleep(<span class="number">1L</span>L);</span><br><span class="line">    init_game(<span class="number">1L</span>L, v4, v20);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> _tsan_func_exit(<span class="number">1L</span>L, v4, v21, v22, v23, v24);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>将</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> ( v13 &lt; v14 % <span class="number">6</span> )                      <span class="comment">// 随机数大于safecode就未成功抓取</span></span><br><span class="line">        v28 = <span class="number">0</span>;</span><br></pre></td></tr></table></figure><p>改为</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> ( v13 &lt; v14 % <span class="number">6</span> )                      <span class="comment">// 随机数大于safecode就未成功抓取</span></span><br><span class="line">        v28 = <span class="number">1</span>;</span><br></pre></td></tr></table></figure><p>更改完毕后按以上思路操作，未出flag,于是尝试手动通过5关，弹出一半flag<br><img src="https://i.loli.net/2019/07/28/5d3d66171b4e480758.jpg" alt="image"></p><p>根据弹出的提示，搜索字符串<code>find a race</code></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;CTF-GAME&quot;&gt;&lt;a href=&quot;#CTF-GAME&quot; class=&quot;headerlink&quot; title=&quot;CTF_GAME&quot;&gt;&lt;/a&gt;CTF_GAME&lt;/h1&gt;&lt;p&gt;运行程序可以看见是一个类似夹娃娃机的程序&lt;/p&gt;
&lt;h2 id=&quot;分析&quot;&gt;&lt;a href=&quot;</summary>
      
    
    
    
    <category term="linux" scheme="http://0xe4s0n.github.io/categories/linux/"/>
    
    
    <category term="re" scheme="http://0xe4s0n.github.io/tags/re/"/>
    
  </entry>
  
  <entry>
    <title>smail语法</title>
    <link href="http://0xe4s0n.github.io/smali%E8%AF%AD%E6%B3%95.html"/>
    <id>http://0xe4s0n.github.io/smali%E8%AF%AD%E6%B3%95.html</id>
    <published>2019-07-27T07:23:44.000Z</published>
    <updated>2019-08-19T11:58:22.976Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Smali背景"><a href="#Smali背景" class="headerlink" title="Smali背景"></a>Smali背景</h1><p>　　Smali，Baksmali分别是指安卓系统里的Java虚拟机（Dalvik）所使用的一种.dex格式文件的汇编器，反汇编器。其语法是一种宽松式的Jasmin/dedexer语法，而且它实现了.dex格式所有功能（注解，调试信息，线路信息等）。<br>　　Smali，Baksmali分别是冰岛语中编译器，反编译器的叫法。也许你会问为什么是冰岛语呢，因为Dalvik是一个冰岛渔村名字。</p><h1 id="简单介绍"><a href="#简单介绍" class="headerlink" title="简单介绍"></a>简单介绍</h1><p>　　Davlik字节码中，寄存器都是32位的，能够支持任何类型，64位类型（Long/Double）用2个寄存器表示；<br>　　根据一些文档说明，以及实践检测，<strong>Dalvik字节码有两种类型：原始类型；引用类型。</strong>熟悉JAVA的同学，应该很快能够反应过来，原始类型也就是我们JAVA中的8中基础类型；引用类型，在smali中主要是对象和数组。事实上smali语法就是根据java来的，可以理解成java的一种变种。</p><h1 id="基本类型-原始类型"><a href="#基本类型-原始类型" class="headerlink" title="基本类型(原始类型)"></a>基本类型(原始类型)</h1><table><thead><tr><th>类型关键字</th><th>对应Java中的类型说明</th><th>位数</th></tr></thead><tbody><tr><td>V</td><td>void</td><td>0</td></tr><tr><td>Z</td><td>boolean</td><td>4</td></tr><tr><td>B</td><td>byte</td><td>8</td></tr><tr><td>S</td><td>short</td><td>16</td></tr><tr><td>C</td><td>char</td><td>16</td></tr><tr><td>I</td><td>int</td><td>32</td></tr><tr><td>J</td><td>long</td><td>64</td></tr><tr><td>F</td><td>float</td><td>32</td></tr><tr><td>D</td><td>double</td><td>64</td></tr></tbody></table><h1 id="引用类型"><a href="#引用类型" class="headerlink" title="引用类型"></a>引用类型</h1><h2 id="对象类型"><a href="#对象类型" class="headerlink" title="对象类型"></a>对象类型</h2><p>　　Object类型，即引用类型的对象，在引用时，使用L开头，后面紧接着的是完整的包名，比如：<code>java.lang.String</code>对应的Smali语法则是<code>Ljava/lang/String</code></p><h2 id="数组类型"><a href="#数组类型" class="headerlink" title="数组类型"></a>数组类型</h2><p>　　一维数组在类型的左边加一个方括号，比如：<code>[I</code>等同于Java的<code>int[]</code>，每多一维就加一个方括号，最多可以设置255维</p><h1 id="方法声明及调用"><a href="#方法声明及调用" class="headerlink" title="方法声明及调用"></a>方法声明及调用</h1><pre><code>Lpackage/name/ObjectName;-&gt;MethodName(III)Z</code></pre><p>　　第一部分<code>Lpackage/name/ObjectName;</code>用于声明具体的类型，以便JVM寻找<br>　　第二部分<code>MethodName(III)Z</code>，其中<code>MethodName</code>为具体的方法名，()中的字符，表示了参数数量和类型，即3个int型参数，Z为返回值的类型，即返回Boolean类型</p><p><strong>如果需要调用构造方法，则MethodName为：<code>&lt;init&gt;</code></strong></p><h1 id="寄存器"><a href="#寄存器" class="headerlink" title="寄存器"></a>寄存器</h1><h2 id="寄存器声明及使用"><a href="#寄存器声明及使用" class="headerlink" title="寄存器声明及使用"></a>寄存器声明及使用</h2><p>　　在Smali中，如果需要存储变量，必须先声明足够数量的寄存器，1个寄存器可以存储32位长度的类型，比如Int，而两个寄存器可以存储64位长度类型的数据，比如Long或Double<br>　　声明可使用的寄存器数量的方式为：<code>.registers N</code>，N代表需要的寄存器的总个数，同时，还有一个关键字<code>.locals</code>，它用于声明非参数的寄存器个数（包含在registers声明的个数当中），也叫做本地寄存器，只在一个方法内有效，但不常用，一般使用registers即可  </p><h2 id="确定寄存器的个数"><a href="#确定寄存器的个数" class="headerlink" title="确定寄存器的个数"></a>确定寄存器的个数</h2><p>　　由于非static方法，需要占用一个寄存器以保存this指针，那么这类方法的寄存器个数，最低就为1，如果还需要处理传入的参数，则需要再次叠加，此时还需要考虑Double和Float这种需要占用两个寄存器的参数类型。</p><h2 id="寄存器的命名方式"><a href="#寄存器的命名方式" class="headerlink" title="寄存器的命名方式"></a>寄存器的命名方式</h2><p>有两种方式——V命名方式和P命名方式。P命名方式中的第一个寄存器就是方法中的第一个参数寄存器。在下表中我们用这两种命名方式来表示有5个寄存器和3个参数的方法。</p><table><thead><tr><th>对应V寄存器</th><th>对应P寄存器</th><th>寄存器类型</th></tr></thead><tbody><tr><td>v0</td><td></td><td>第一个local register</td></tr><tr><td>v1</td><td></td><td>第二个local register</td></tr><tr><td>v2</td><td>p0</td><td>第一个parameter register</td></tr><tr><td>v3</td><td>p1</td><td>第二个parameter register</td></tr><tr><td>v4</td><td>p2</td><td>第三个parameter register</td></tr></tbody></table><h2 id="寄存器的命名"><a href="#寄存器的命名" class="headerlink" title="寄存器的命名"></a>寄存器的命名</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.local vA, &quot;name&quot;:type;</span><br></pre></td></tr></table></figure><p>将vA命名为name name为type类型;<br>例如:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.local v0, &quot;bu&quot;:Landroid/widget/Button;</span><br></pre></td></tr></table></figure><p>v0 相当于  Button bu;</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.param pA, &quot;name&quot;  # type;</span><br></pre></td></tr></table></figure><p>将pA命名为name name 为type类型;<br>例如</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.param p1, &quot;a&quot;  # I</span><br></pre></td></tr></table></figure><p>p1 相当于  int a;</p><h1 id="Dalvik指令集"><a href="#Dalvik指令集" class="headerlink" title="Dalvik指令集"></a>Dalvik指令集</h1><p><strong><a href="https://source.android.com/devices/tech/dalvik/dalvik-bytecode#instructions," title="官方Dalvik文档" target="_blank" rel="noopener">https://source.android.com/devices/tech/dalvik/dalvik-bytecode#instructions</a></strong><br><strong>以下寄存器的位数与指令注意事项可在官方文档中查看</strong></p><p>一般的指令格式为：<code>[op]-[type](可选)/[位宽，默认4位] [目标寄存器],[源寄存器](可选)</code>，比如：<code>move v1,v2</code>，<code>move-wide/from16 v1,v2</code></p><h2 id="移位"><a href="#移位" class="headerlink" title="移位"></a>移位</h2><table><thead><tr><th>指令</th><th>说明</th></tr></thead><tbody><tr><td>move v1,v2</td><td>将v2中的值移入到v1寄存器中（4位，支持int型）</td></tr><tr><td>move/from16 v1,v2</td><td>将16位的v2寄存器中的值移入到8位的v1寄存器中</td></tr><tr><td>move/16 v1,v2</td><td>将16位的v2寄存器中的值移入到16位的v1寄存器中</td></tr><tr><td>move-wide v1,v2</td><td>将寄存器对（一组，用于支持双字型）v2中的值移入到v1寄存器对中（4位，猜测支持float、double型）</td></tr><tr><td>move-wide/from16 v1,v2</td><td>将16位的v2寄存器对（一组）中的值移入到8位的v1寄存器中</td></tr><tr><td>move-wide/16 v1,v2</td><td>将16位的v2寄存器对（一组）中的值移入到16位的v1寄存器中</td></tr><tr><td>move-object v1,v2</td><td>将v2中的对象指针移入到v1寄存器中</td></tr><tr><td>move-object/from16 v1,v2</td><td>将16位的v2寄存器中的对象指针移入到v1（8位）寄存器中</td></tr><tr><td>move-object/16 v1,v2</td><td>将16位的v2寄存器中的对象指针移入到v1（16位）寄存器中</td></tr><tr><td>move-result v1</td><td>将这个指令的上一条指令计算结果，移入到v1寄存器中（需要配合invoke-static、invoke-virtual等指令使用）</td></tr><tr><td>move-result-object v1</td><td>将上条计算结果的对象指针移入v1寄存器</td></tr><tr><td>move-result-wide v1</td><td>将上条计算结果（双字）的对象指针移入v1寄存器</td></tr><tr><td>move-exception v1</td><td>将异常移入v1寄存器，用于捕获try-catch语句中的异常</td></tr></tbody></table><h2 id="返回"><a href="#返回" class="headerlink" title="返回"></a>返回</h2><table><thead><tr><th>指令</th><th>说明</th></tr></thead><tbody><tr><td>return-void</td><td>返回void，即直接返回</td></tr><tr><td>return v1</td><td>返回v1寄存器中的值</td></tr><tr><td>return-object v1</td><td>返回v1寄存器中的对象指针</td></tr><tr><td>return-wide v1</td><td>返回双字型结果给v1寄存器</td></tr></tbody></table><h2 id="常量"><a href="#常量" class="headerlink" title="常量"></a>常量</h2><table><thead><tr><th>指令</th><th>说明</th></tr></thead><tbody><tr><td>const/4 vA, #+B</td><td>将4位常量B符号扩展为32位赋值给vA寄存器</td></tr><tr><td>const/16 vAA, #+BBBB</td><td>将16位常量B符号扩展为32位赋值给vA寄存器</td></tr><tr><td>const vAA, #+BBBBBBBB</td><td>将32位常量B赋值给vA寄存器</td></tr><tr><td>const/high16 vAA, #+BBBB0000</td><td>将16位常量B右零扩展(右边添0)为32位赋值给vA寄存器</td></tr><tr><td>const-wide/16 vAA, #+BBBB</td><td>将16位常量B符号扩展为64位赋值给vA寄存器</td></tr><tr><td>const-wide/32 vAA, #+BBBBBBBB</td><td>将32位常量B符号扩展为64位赋值给vA寄存器</td></tr><tr><td>const-wide vAA, #+BBBBBBBBBBBBBBBB</td><td>将64位常量B赋值给vA寄存器</td></tr><tr><td>const-wide/high16 vAA, #+BBBB000000000000</td><td>将16位常量B右零扩展(右边添0)为64位赋值给vA寄存器</td></tr><tr><td>const-string(/jumbo) vAA string@BBBBBBBB</td><td>将字符串常量赋给vA寄存器，过长时需要加上jumbo</td></tr><tr><td>const-class vA La/b/TargetClass</td><td>将Class常量a.b.TargetClass赋值给vA，等价于a.b.TargetClass.class</td></tr></tbody></table><h2 id="判断"><a href="#判断" class="headerlink" title="判断"></a>判断</h2><table><thead><tr><th>指令</th><th>说明</th></tr></thead><tbody><tr><td>if-eq v1,v2</td><td>判断两个寄存器中的值是否相等</td></tr><tr><td>if-ne v1,v2</td><td>判断两个寄存器中的值是否不相等</td></tr><tr><td>if-lt v1,v2</td><td>判断v1寄存器中的值是否小于v2寄存器中的值（lt == less than）</td></tr><tr><td>if-ge v1,v2</td><td>判断v1寄存器中的值是否大于或等于v2寄存器中的值（ge == great than or equals）</td></tr><tr><td>if-gt v1,v2</td><td>判断v1寄存器中的值是否大于v2寄存器中的值（gt == great than）</td></tr><tr><td>if-le v1,v2</td><td>判断v1寄存器中的值是否小于或等于v2寄存器中的值（le == less than or equals）</td></tr></tbody></table><h2 id="属性"><a href="#属性" class="headerlink" title="属性"></a>属性</h2><p>属性操作的分为：取值（get）和赋值（put）<br>目标类型分为：数组（array）、实例（instance）和静态（static）三种，对应的缩写前缀就是a、i、s<br>长度类型分为：默认（什么都不写）、wide（宽，64位）、object（对象）、boolean、byte、char、short<br>指令格式：<code>[指令名] [源寄存器], [目标字段所在对象寄存器], [字段指针]</code><br>下面列出用于实例字段的指令，其中i都可以换成a或者s，分别用于操作数组字段或者静态字段</p><table><thead><tr><th>指令</th><th>说明</th></tr></thead><tbody><tr><td>iget</td><td>取值，用于操作int这种的值类型</td></tr><tr><td>iget-wide</td><td>取值，用于操作wide型字段</td></tr><tr><td>iget-object</td><td>取值，用于操作对象引用</td></tr><tr><td>iget-boolean</td><td>取值，用于操作布尔类型</td></tr><tr><td>iget-byte</td><td>取值，用于操作字节类型</td></tr><tr><td>iget-char</td><td>取值，用于操作字符类型</td></tr><tr><td>iget-short</td><td>取值，用于操作short类型</td></tr><tr><td>iput</td><td>赋值，用于操作int这种的值类型</td></tr><tr><td>iput-wide</td><td>赋值，用于操作wide型字段</td></tr><tr><td>iput-object</td><td>赋值，用于操作对象引用</td></tr><tr><td>iput-boolean</td><td>赋值，用于操作布尔类型</td></tr><tr><td>iput-byte</td><td>赋值，用于操作字节类型</td></tr><tr><td>iput-char</td><td>赋值，用于操作字符类型</td></tr><tr><td>iput-short</td><td>赋值，用于操作short类型</td></tr></tbody></table><h2 id="调用"><a href="#调用" class="headerlink" title="调用"></a>调用</h2><p><strong>基本格式：<code>invoke-kind {vC, vD, vE, vF, vG}, meth@BBBB</code></strong><br>其中，BBBB代表方法引用（参见上面介绍的方法定义及调用），vC~G为需要的参数</p><table><thead><tr><th>指令</th><th>说明</th></tr></thead><tbody><tr><td>invoke-virtual</td><td>用于调用一般的，非private、非static、非final、非构造函数的方法，它的第一个参数往往会传p0，也就是this指针</td></tr><tr><td>invoke-super</td><td>用于调用父类中的方法，其他和invoke-virtual保持一致</td></tr><tr><td>invoke-direct</td><td>用于调用private修饰的方法，或者构造方法</td></tr><tr><td>invoke-static</td><td>用于调用静态方法，比如一些工具类</td></tr><tr><td>invoke-interface</td><td>用于调用interface中的方法</td></tr></tbody></table><h2 id="数学运算"><a href="#数学运算" class="headerlink" title="数学运算"></a>数学运算</h2><table class="math"><thead><tr>  <th>运算码</th>  <th>C 语义</th>  <th>备注</th></tr></thead><tbody><tr>  <td>neg-int</td>  <td>int32 a;<br>int32 result = -a;</td>  <td>一元二进制补码。</td></tr><tr>  <td>not-int</td>  <td>int32 a;<br>int32 result = ~a;</td>  <td>一元反码。</td></tr><tr>  <td>neg-long</td>  <td>int64 a;<br>int64 result = -a;</td>  <td>一元二进制补码。</td></tr><tr>  <td>not-long</td>  <td>int64 a;<br>int64 result = ~a;</td>  <td>一元反码。</td></tr><tr>  <td>neg-float</td>  <td>float a;<br>float result = -a;</td>  <td>浮点否定。</td></tr><tr>  <td>neg-double</td>  <td>double a;<br>double result = -a;</td>  <td>浮点否定。</td></tr><tr>  <td>int-to-long</td>  <td>int32 a;<br>int64 result = (int64) a;</td>  <td>将 <code><span>int32</span></code> 符号扩展为 <code><span>int64</span></code>。</td></tr><tr>  <td>int-to-float</td>  <td>int32 a;<br>float result = (float) a;</td>  <td>使用最近舍入，将 <code><span>int32</span></code> 转换为 <code><span>float</span></code>。这会导致某些值不够精准。  </td></tr><tr>  <td>int-to-double</td>  <td>int32 a;<br>double result = (double) a;</td>  <td>将 <code><span>int32</span></code> 转换为 <code><span>double</span></code>。</td></tr><tr>  <td>long-to-int</td>  <td>int64 a;<br>int32 result = (int32) a;</td>  <td>将 <code><span>int64</span></code> 截断为 <code><span>int32</span></code>。</td></tr><tr>  <td>long-to-float</td>  <td>int64 a;<br>float result = (float) a;</td>  <td>使用最近舍入，将 <code><span>int64</span></code> 转换为 <code><span>float</span></code>。这会导致某些值不够精准。  </td></tr><tr>  <td>long-to-double</td>  <td>int64 a;<br>double result = (double) a;</td>  <td>使用最近舍入，将 <code><span>int64</span></code> 转换为 <code><span>double</span></code>。这会导致某些值不够精准。  </td></tr><tr>  <td>float-to-int</td>  <td>float a;<br>int32 result = (int32) a;</td>  <td>使用向零舍入，将 <code><span>float</span></code> 转换为 <code><span>int32</span></code>。<code><span>NaN</span></code> 和 <code><span>-0.<wbr>0</span></code>（负零）转换为整数 <code><span>0</span></code>。无穷数和因所占幅面过大而无法表示的值根据符号转换为 <code><span>0x7fffffff</span></code> 或 <code><span>-0x80000000</span></code>。  </td></tr><tr>  <td>float-to-long</td>  <td>float a;<br>int64 result = (int64) a;</td>  <td>使用向零舍入，将 <code><span>float</span></code> 转换为 <code><span>int64</span></code>。适用于 <code><span>float-to-int</span></code> 的特殊情况规则也适用于此，但超出范围的值除外，这些值根据符号转换为 <code><span>0x7fffffffffffffff</span></code> 或 <code><span>-0x8000000000000000</span></code>。  </td></tr><tr>  <td>float-to-double</td>  <td>float a;<br>double result = (double) a;</td>  <td>将 <code><span>float</span></code> 转换为 <code><span>double</span></code>，值依然精准。  </td></tr><tr>  <td>double-to-int</td>  <td>double a;<br>int32 result = (int32) a;</td>  <td>使用向零舍入，将 <code><span>double</span></code> 转换为 <code><span>int32</span></code>。适用于 <code><span>float-to-int</span></code> 的特殊情况规则也适用于此。  </td></tr><tr>  <td>double-to-long</td>  <td>double a;<br>int64 result = (int64) a;</td>  <td>使用向零舍入，将 <code><span>double</span></code> 转换为 <code><span>int64</span></code>。适用于 <code><span>float-to-long</span></code> 的特殊情况规则也适用于此。  </td></tr><tr>  <td>double-to-float</td>  <td>double a;<br>float result = (float) a;</td>  <td>使用最近舍入，将 <code><span>double</span></code> 转换为 <code><span>float</span></code>。这会导致某些值不够精准。  </td></tr><tr>  <td>int-to-byte</td>  <td>int32 a;<br>int32 result = (a &lt;&lt; 24) &gt;&gt; 24;</td>  <td>符号扩展结果，将 <code><span>int32</span></code> 截断为 <code><span>int8</span></code>。  </td></tr><tr>  <td>int-to-char</td>  <td>int32 a;<br>int32 result = a &amp; 0xffff;</td>  <td>无需符号扩展，将 <code><span>int32</span></code> 截断为 <code><span>uint16</span></code>。  </td></tr><tr>  <td>int-to-short</td>  <td>int32 a;<br>int32 result = (a &lt;&lt; 16) &gt;&gt; 16;</td>  <td>符号扩展结果，将 <code><span>int32</span></code> 截断为 <code><span>int16</span></code>。  </td></tr><tr>  <td>add-int</td>  <td>int32 a, b;<br>int32 result = a + b;</td>  <td>二进制补码加法。</td></tr><tr>  <td>sub-int</td>  <td>int32 a, b;<br>int32 result = a - b;</td>  <td>二进制补码减法。</td></tr><tr>  <td>rsub-int</td>  <td>int32 a, b;<br>int32 result = b - a;</td>  <td>二进制补码反向减法。</td></tr><tr>  <td>mul-int</td>  <td>int32 a, b;<br>int32 result = a * b;</td>  <td>二进制补码乘法。</td></tr><tr>  <td>div-int</td>  <td>int32 a, b;<br>int32 result = a / b;</td>  <td>二进制补码除法，向零舍入（即截断为整数）。如果 <code><span>b == 0</span></code>，则会抛出 <code><span>ArithmeticException</span></code>。  </td></tr><tr>  <td>rem-int</td>  <td>int32 a, b;<br>int32 result = a % b;</td>  <td>二进制补码除后取余数。结果的符号与 <code><span>a</span></code> 的符号相同，可更精确地定义为 <code><span>result == a - (a / b) * b</span></code>。如果 <code><span>b == 0</span></code>，则会抛出 <code><span>ArithmeticException</span></code>。  </td></tr><tr>  <td>and-int</td>  <td>int32 a, b;<br>int32 result = a &amp; b;</td>  <td>按位 AND。</td></tr><tr>  <td>or-int</td>  <td>int32 a, b;<br>int32 result = a | b;</td>  <td>按位 OR。</td></tr><tr>  <td>xor-int</td>  <td>int32 a, b;<br>int32 result = a ^ b;</td>  <td>按位 XOR。</td></tr><tr>  <td>shl-int</td>  <td>int32 a, b;<br>int32 result = a &lt;&lt; (b &amp; 0x1f);</td>  <td>按位左移（带掩码参数）。</td></tr><tr>  <td>shr-int</td>  <td>int32 a, b;<br>int32 result = a &gt;&gt; (b &amp; 0x1f);</td>  <td>按位有符号右移（带掩码参数）。</td></tr><tr>  <td>ushr-int</td>  <td>uint32 a, b;<br>int32 result = a &gt;&gt; (b &amp; 0x1f);</td>  <td>按位无符号右移（带掩码参数）。</td></tr><tr>  <td>add-long</td>  <td>int64 a, b;<br>int64 result = a + b;</td>  <td>二进制补码加法。</td></tr><tr>  <td>sub-long</td>  <td>int64 a, b;<br>int64 result = a - b;</td>  <td>二进制补码减法。</td></tr><tr>  <td>mul-long</td>  <td>int64 a, b;<br>int64 result = a * b;</td>  <td>二进制补码乘法。</td></tr><tr>  <td>div-long</td>  <td>int64 a, b;<br>int64 result = a / b;</td>  <td>二进制补码除法，向零舍入（即截断为整数）。如果 <code><span>b == 0</span></code>，则会抛出 <code><span>ArithmeticException</span></code>。  </td></tr><tr>  <td>rem-long</td>  <td>int64 a, b;<br>int64 result = a % b;</td>  <td>二进制补码除后取余数。结果的符号与 <code><span>a</span></code> 的符号相同，可更精确地定义为 <code><span>result == a - (a / b) * b</span></code>。如果 <code><span>b == 0</span></code>，则会抛出 <code><span>ArithmeticException</span></code>。  </td></tr><tr>  <td>and-long</td>  <td>int64 a, b;<br>int64 result = a &amp; b;</td>  <td>按位 AND。</td></tr><tr>  <td>or-long</td>  <td>int64 a, b;<br>int64 result = a | b;</td>  <td>按位 OR。</td></tr><tr>  <td>xor-long</td>  <td>int64 a, b;<br>int64 result = a ^ b;</td>  <td>按位 XOR。</td></tr><tr>  <td>shl-long</td>  <td>int64 a;<br>int32 b;<br>int64 result = a &lt;&lt; (b &amp; 0x3f);</td>  <td>按位左移（带掩码参数）。</td></tr><tr>  <td>shr-long</td>  <td>int64 a;<br>int32 b;<br>int64 result = a &gt;&gt; (b &amp; 0x3f);</td>  <td>按位有符号右移（带掩码参数）。</td></tr><tr>  <td>ushr-long</td>  <td>uint64 a;<br>int32 b;<br>int64 result = a &gt;&gt; (b &amp; 0x3f);</td>  <td>按位无符号右移（带掩码参数）。</td></tr><tr>  <td>add-float</td>  <td>float a, b;<br>float result = a + b;</td>  <td>浮点加法。</td></tr><tr>  <td>sub-float</td>  <td>float a, b;<br>float result = a - b;</td>  <td>浮点减法。</td></tr><tr>  <td>mul-float</td>  <td>float a, b;<br>float result = a * b;</td>  <td>浮点乘法。</td></tr><tr>  <td>div-float</td>  <td>float a, b;<br>float result = a / b;</td>  <td>浮点除法。</td></tr><tr>  <td>rem-float</td>  <td>float a, b;<br>float result = a % b;</td>  <td>浮点除后取余数。该函数不同于 IEEE 754 取余，定义为 <code><span>result == a - roundTowardZero(<wbr>a / b) * b</span></code>。  </td></tr><tr>  <td>add-double</td>  <td>double a, b;<br>double result = a + b;</td>  <td>浮点加法。</td></tr><tr>  <td>sub-double</td>  <td>double a, b;<br>double result = a - b;</td>  <td>浮点减法。</td></tr><tr>  <td>mul-double</td>  <td>double a, b;<br>double result = a * b;</td>  <td>浮点乘法。</td></tr><tr>  <td>div-double</td>  <td>double a, b;<br>double result = a / b;</td>  <td>浮点除法。</td></tr><tr>  <td>rem-double</td>  <td>double a, b;<br>double result = a % b;</td>  <td>浮点除后取余数。该函数不同于 IEEE 754 取余，定义为 <code><span>result == a - roundTowardZero(<wbr>a / b) * b</span></code>。  </td></tr></tbody></table><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><table><thead><tr><th>指令</th><th>说明</th></tr></thead><tbody><tr><td>monitor-enter vAA</td><td>获取指定对象的监视锁</td></tr><tr><td>monitor-exit  vAA</td><td>释放指定对象的监视锁</td></tr><tr><td>check-cast vAA, type@BBBB</td><td>如果VA寄存器中的引用不能转型为type指定的类型，则抛出 ClassCastException</td></tr><tr><td>instance-of vA, vB, type@CCCC</td><td>如果VB是给定type类型的实例，则给VA赋值 1，否则赋值 0</td></tr><tr><td>array-length vA, vB</td><td>将指定数组的长度（条目个数）赋值给给定目标寄存器</td></tr><tr><td>new-instance vAA, type@BBBB</td><td>构造新type实例赋值给VA寄存器(类型必须引用非数组类)</td></tr><tr><td>new-array vA, vB, type@CCCC</td><td>根据指定的type类型和VB大小构造新数组VA(类型必须引用数组类)</td></tr><tr><td>throw vAA</td><td>抛出指定异常</td></tr><tr><td>goto(/16,/32) +AA</td><td>无条件跳转</td></tr></tbody></table><h1 id="常用smali代码"><a href="#常用smali代码" class="headerlink" title="常用smali代码"></a>常用smali代码</h1><h2 id="Toast"><a href="#Toast" class="headerlink" title="Toast"></a>Toast</h2><figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">.method</span><span class="keyword"> private</span> toast()V</span><br><span class="line"><span class="keyword">    .locals</span> 2</span><br><span class="line"><span class="keyword">    .prologue</span></span><br><span class="line"><span class="keyword">    .line</span> 40</span><br><span class="line">   <span class="built_in"> const-string </span>v0, <span class="string">"toast test..."</span></span><br><span class="line">   <span class="built_in"> const/4 </span>v1, 0x1</span><br><span class="line">   <span class="built_in"> invoke-static </span>&#123;p0, v0, v1&#125;, <span class="class">Landroid/widget/Toast;</span>-&gt;makeText(<span class="class">Landroid/content/Context;</span><span class="class">Ljava/lang/CharSequence;</span>I)<span class="class">Landroid/widget/Toast;</span></span><br><span class="line"> </span><br><span class="line">   <span class="built_in"> move-result-object </span>v0</span><br><span class="line"> </span><br><span class="line">   <span class="built_in"> invoke-virtual </span>&#123;v0&#125;, <span class="class">Landroid/widget/Toast;</span>-&gt;show()V</span><br><span class="line"> </span><br><span class="line"><span class="keyword">    .line</span> 41</span><br><span class="line">    return-void</span><br><span class="line"><span class="keyword">.end method</span></span><br></pre></td></tr></table></figure><h2 id="Log"><a href="#Log" class="headerlink" title="Log"></a>Log</h2><figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">.method</span><span class="keyword"> private</span> log()V</span><br><span class="line"><span class="keyword">    .locals</span> 2</span><br><span class="line"><span class="keyword">    .prologue</span></span><br><span class="line"><span class="keyword">    .line</span> 36</span><br><span class="line">   <span class="built_in"> const-string </span>v0, <span class="string">"tag"</span></span><br><span class="line">   <span class="built_in"> const-string </span>v1, <span class="string">"Message"</span></span><br><span class="line">   <span class="built_in"> invoke-static </span>&#123;v0, v1&#125;, <span class="class">Landroid/util/Log;</span>-&gt;e(<span class="class">Ljava/lang/String;</span><span class="class">Ljava/lang/String;</span>)I</span><br><span class="line"> </span><br><span class="line"><span class="keyword">    .line</span> 37</span><br><span class="line">    return-void</span><br><span class="line"><span class="keyword">.end method</span></span><br></pre></td></tr></table></figure><h2 id="LogCallStack"><a href="#LogCallStack" class="headerlink" title="LogCallStack"></a>LogCallStack</h2><figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">.method</span><span class="keyword"> private</span> logCallStack()V</span><br><span class="line"><span class="keyword">    .locals</span> 2</span><br><span class="line"><span class="keyword">    .prologue</span></span><br><span class="line"><span class="keyword">    .line</span> 44</span><br><span class="line">   <span class="built_in"> const-string </span>v0, <span class="string">"call stack:"</span></span><br><span class="line">   <span class="built_in"> new-instance </span>v1, <span class="class">Ljava/lang/Exception;</span></span><br><span class="line"> </span><br><span class="line">   <span class="built_in"> invoke-direct </span>&#123;v1&#125;, <span class="class">Ljava/lang/Exception;</span>-&gt;&lt;init&gt;()V</span><br><span class="line"> </span><br><span class="line">   <span class="built_in"> invoke-static </span>&#123;v1&#125;, <span class="class">Landroid/util/Log;</span>-&gt;getStackTraceString(<span class="class">Ljava/lang/Throwable;</span>)<span class="class">Ljava/lang/String;</span></span><br><span class="line"> </span><br><span class="line">   <span class="built_in"> move-result-object </span>v1</span><br><span class="line"> </span><br><span class="line">   <span class="built_in"> invoke-static </span>&#123;v0, v1&#125;, <span class="class">Landroid/util/Log;</span>-&gt;e(<span class="class">Ljava/lang/String;</span><span class="class">Ljava/lang/String;</span>)I</span><br><span class="line"> </span><br><span class="line"><span class="keyword">    .line</span> 45</span><br><span class="line">    return-void</span><br><span class="line"><span class="keyword">.end method</span></span><br></pre></td></tr></table></figure><h2 id="AlertDialog"><a href="#AlertDialog" class="headerlink" title="AlertDialog"></a>AlertDialog</h2><figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">new-instance v1,<span class="class">Landroid/app/AlertDialog$Builder;</span></span><br><span class="line"></span><br><span class="line">invoke-direct &#123;v1,p0&#125;, <span class="class">Landroid/app/AlertDialog$Builder;</span>-&gt;&lt;init&gt;(<span class="class">Landroid/content/Context;</span>)V</span><br><span class="line"></span><br><span class="line"><span class="keyword">.line</span> 29</span><br><span class="line"><span class="keyword">.local</span> v1,builder:<span class="class">Landroid/app/AlertDialog$Builder;</span></span><br><span class="line">const-string v2,<span class="string">"Title"</span></span><br><span class="line"></span><br><span class="line">invoke-virtual &#123;v1,v2&#125;, <span class="class">Landroid/app/AlertDialog$Builder;</span>-&gt;setTitle(<span class="class">Ljava/lang/CharSequence;</span>)<span class="class">Landroid/app/AlertDialog$Builder;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">.line</span> 31</span><br><span class="line">const-string v2,<span class="string">"Message"</span></span><br><span class="line"></span><br><span class="line">invoke-virtual &#123;v1,v2&#125;,<span class="class">Landroid/app/AlertDialog$Builder;</span>-&gt;setMessage(<span class="class">Ljava/lang/CharSequence;</span>)<span class="class">Landroid/app/AlertDialog$Builder;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">.line</span> 52</span><br><span class="line">invoke-virtual &#123;v1&#125;,<span class="class">Landroid/app/AlertDialog$Builder;</span>-&gt;create()<span class="class">Landroid/app/AlertDialog;</span></span><br><span class="line"></span><br><span class="line">move-result-object v2</span><br><span class="line"></span><br><span class="line">invoke-virtual &#123;v2&#125;,<span class="class">Landroid/app/AlertDialog;</span>-&gt;show()V</span><br></pre></td></tr></table></figure><h2 id="BroadcastReceiver"><a href="#BroadcastReceiver" class="headerlink" title="BroadcastReceiver"></a>BroadcastReceiver</h2><figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">.</span><span class="comment"># static fields</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">.field</span><span class="keyword"> private</span> intentFilter:<span class="class">Landroid/content/IntentFilter;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">.field</span><span class="keyword"> private</span> reciver:<span class="class">Lcom/example/mytest/MyReciver;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">method<span class="keyword"> protected</span> onCreate(<span class="class">Landroid/os/Bundle;</span>)V</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="built_in"> new-instance </span>v0, <span class="class">Landroid/content/IntentFilter;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">   <span class="built_in"> invoke-direct </span>&#123;v0&#125;, <span class="class">Landroid/content/IntentFilter;</span>-&gt;&lt;init&gt;()V</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">   <span class="built_in"> iput-object </span>v0, p0, <span class="class">Lcom/test/SearchActivity;</span>-&gt;intentFilter:<span class="class">Landroid/content/IntentFilter;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">   <span class="built_in"> iget-object </span>v0, p0, <span class="class">Lcom/test/SearchActivity;</span>-&gt;intentFilter:<span class="class">Landroid/content/IntentFilter;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">   <span class="built_in"> const-string </span>v1, <span class="string">"android.intent.action.search"</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">   <span class="built_in"> invoke-virtual </span>&#123;v0, v1&#125;, <span class="class">Landroid/content/IntentFilter;</span>-&gt;addAction(<span class="class">Ljava/lang/String;</span>)V</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">   <span class="built_in"> new-instance </span>v0, <span class="class">Lcom/example/mytest/MyReciver;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">   <span class="built_in"> invoke-direct </span>&#123;v0, p0&#125;, <span class="class">Lcom/example/mytest/MyReciver;</span>-&gt;&lt;init&gt;(<span class="class">Landroid/app/Activity;</span>)V</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">   <span class="built_in"> iput-object </span>v0, p0,<span class="class">Lcom/test/SearchActivity;</span>-&gt;reciver:<span class="class">Lcom/example/mytest/MyReciver;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">   <span class="built_in"> iget-object </span>v0, p0, <span class="class">Lcom/test/SearchActivity;</span>-&gt;reciver:<span class="class">Lcom/example/mytest/MyReciver;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">   <span class="built_in"> iget-object </span>v1, p0, <span class="class">Lcom/test/SearchActivity;</span>-&gt;intentFilter:<span class="class">Landroid/content/IntentFilter;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">   <span class="built_in"> invoke-virtual </span>&#123;p0, v0, v1&#125;, <span class="class">Lcom/test/SearchActivity;</span>-&gt;registerReceiver(<span class="class">Landroid/content/BroadcastReceiver;</span><span class="class">Landroid/content/IntentFilter;</span>)<span class="class">Landroid/content/Intent;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">.</span>.method<span class="keyword"> public</span> onDestroy()V</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">iget-object v0, p0, <span class="class">Lcom/test/SearchActivity;</span>-&gt;reciver:<span class="class">Lcom/example/mytest/MyReciver;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">invoke-virtual &#123;p0, v0&#125;, <span class="class">Lcom/test/SearchActivity;</span>-&gt;unregisterReceiver(<span class="class">Landroid/content/BroadcastReceiver;</span>)V</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Smali背景&quot;&gt;&lt;a href=&quot;#Smali背景&quot; class=&quot;headerlink&quot; title=&quot;Smali背景&quot;&gt;&lt;/a&gt;Smali背景&lt;/h1&gt;&lt;p&gt;　　Smali，Baksmali分别是指安卓系统里的Java虚拟机（Dalvik）所使用的一种.de</summary>
      
    
    
    
    <category term="Android" scheme="http://0xe4s0n.github.io/categories/Android/"/>
    
    
    <category term="re" scheme="http://0xe4s0n.github.io/tags/re/"/>
    
    <category term="Android" scheme="http://0xe4s0n.github.io/tags/Android/"/>
    
  </entry>
  
</feed>
